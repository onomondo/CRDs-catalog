{
  "description": "Generator information:\n- Generated from: /eventgrid/resource-manager/Microsoft.EventGrid/stable/2020-06-01/EventGrid.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.EventGrid/topics/{topicName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "inboundIpRules": {
          "description": "InboundIpRules: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered\nonly if PublicNetworkAccess is enabled.",
          "items": {
            "properties": {
              "action": {
                "description": "Action: Action to perform based on the match or no match of the IpMask.",
                "enum": [
                  "Allow"
                ],
                "type": "string"
              },
              "ipMask": {
                "description": "IpMask: IP Address in CIDR notation e.g., 10.0.0.0/8.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "inputSchema": {
          "description": "InputSchema: This determines the format that Event Grid should expect for incoming events published to the topic.",
          "enum": [
            "CloudEventSchemaV1_0",
            "CustomEventSchema",
            "EventGridSchema"
          ],
          "type": "string"
        },
        "inputSchemaMapping": {
          "description": "InputSchemaMapping: This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map\nvarious properties of a source schema to various required properties of the EventGridEvent schema.",
          "properties": {
            "json": {
              "description": "Json: Mutually exclusive with all other properties",
              "properties": {
                "dataVersion": {
                  "description": "DataVersion: The mapping information for the DataVersion property of the Event Grid Event.",
                  "properties": {
                    "defaultValue": {
                      "description": "DefaultValue: The default value to be used for mapping when a SourceField is not provided or if there's no property with\nthe specified name in the published JSON event payload.",
                      "type": "string"
                    },
                    "sourceField": {
                      "description": "SourceField: Name of a field in the input event schema that's to be used as the source of a mapping.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "eventTime": {
                  "description": "EventTime: The mapping information for the EventTime property of the Event Grid Event.",
                  "properties": {
                    "sourceField": {
                      "description": "SourceField: Name of a field in the input event schema that's to be used as the source of a mapping.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "eventType": {
                  "description": "EventType: The mapping information for the EventType property of the Event Grid Event.",
                  "properties": {
                    "defaultValue": {
                      "description": "DefaultValue: The default value to be used for mapping when a SourceField is not provided or if there's no property with\nthe specified name in the published JSON event payload.",
                      "type": "string"
                    },
                    "sourceField": {
                      "description": "SourceField: Name of a field in the input event schema that's to be used as the source of a mapping.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "id": {
                  "description": "Id: The mapping information for the Id property of the Event Grid Event.",
                  "properties": {
                    "sourceField": {
                      "description": "SourceField: Name of a field in the input event schema that's to be used as the source of a mapping.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "inputSchemaMappingType": {
                  "description": "InputSchemaMappingType: Type of the custom mapping",
                  "enum": [
                    "Json"
                  ],
                  "type": "string"
                },
                "subject": {
                  "description": "Subject: The mapping information for the Subject property of the Event Grid Event.",
                  "properties": {
                    "defaultValue": {
                      "description": "DefaultValue: The default value to be used for mapping when a SourceField is not provided or if there's no property with\nthe specified name in the published JSON event payload.",
                      "type": "string"
                    },
                    "sourceField": {
                      "description": "SourceField: Name of a field in the input event schema that's to be used as the source of a mapping.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "topic": {
                  "description": "Topic: The mapping information for the Topic property of the Event Grid Event.",
                  "properties": {
                    "sourceField": {
                      "description": "SourceField: Name of a field in the input event schema that's to be used as the source of a mapping.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "required": [
                "inputSchemaMappingType"
              ],
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "location": {
          "description": "Location: Location of the resource.",
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "configMaps": {
              "description": "ConfigMaps: configures where to place operator written ConfigMaps.",
              "properties": {
                "endpoint": {
                  "description": "Endpoint: indicates where the Endpoint config map should be placed. If omitted, no config map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secrets": {
              "description": "Secrets: configures where to place Azure generated secrets.",
              "properties": {
                "key1": {
                  "description": "Key1: indicates where the Key1 secret should be placed. If omitted, the secret will not be retrieved from Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "key2": {
                  "description": "Key2: indicates where the Key2 secret should be placed. If omitted, the secret will not be retrieved from Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "publicNetworkAccess": {
          "description": "PublicNetworkAccess: This determines if traffic is allowed over public network. By default it is enabled.\nYou can further restrict to specific IPs by configuring <seealso\ncref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Tags of the resource.",
          "type": "object"
        }
      },
      "required": [
        "location",
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "EventGrid Topic",
      "properties": {
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "endpoint": {
          "description": "Endpoint: Endpoint for the topic.",
          "type": "string"
        },
        "id": {
          "description": "Id: Fully qualified identifier of the resource.",
          "type": "string"
        },
        "inboundIpRules": {
          "description": "InboundIpRules: This can be used to restrict traffic from specific IPs instead of all IPs. Note: These are considered\nonly if PublicNetworkAccess is enabled.",
          "items": {
            "properties": {
              "action": {
                "description": "Action: Action to perform based on the match or no match of the IpMask.",
                "type": "string"
              },
              "ipMask": {
                "description": "IpMask: IP Address in CIDR notation e.g., 10.0.0.0/8.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "inputSchema": {
          "description": "InputSchema: This determines the format that Event Grid should expect for incoming events published to the topic.",
          "type": "string"
        },
        "inputSchemaMapping": {
          "description": "InputSchemaMapping: This enables publishing using custom event schemas. An InputSchemaMapping can be specified to map\nvarious properties of a source schema to various required properties of the EventGridEvent schema.",
          "properties": {
            "json": {
              "description": "Json: Mutually exclusive with all other properties",
              "properties": {
                "dataVersion": {
                  "description": "DataVersion: The mapping information for the DataVersion property of the Event Grid Event.",
                  "properties": {
                    "defaultValue": {
                      "description": "DefaultValue: The default value to be used for mapping when a SourceField is not provided or if there's no property with\nthe specified name in the published JSON event payload.",
                      "type": "string"
                    },
                    "sourceField": {
                      "description": "SourceField: Name of a field in the input event schema that's to be used as the source of a mapping.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "eventTime": {
                  "description": "EventTime: The mapping information for the EventTime property of the Event Grid Event.",
                  "properties": {
                    "sourceField": {
                      "description": "SourceField: Name of a field in the input event schema that's to be used as the source of a mapping.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "eventType": {
                  "description": "EventType: The mapping information for the EventType property of the Event Grid Event.",
                  "properties": {
                    "defaultValue": {
                      "description": "DefaultValue: The default value to be used for mapping when a SourceField is not provided or if there's no property with\nthe specified name in the published JSON event payload.",
                      "type": "string"
                    },
                    "sourceField": {
                      "description": "SourceField: Name of a field in the input event schema that's to be used as the source of a mapping.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "id": {
                  "description": "Id: The mapping information for the Id property of the Event Grid Event.",
                  "properties": {
                    "sourceField": {
                      "description": "SourceField: Name of a field in the input event schema that's to be used as the source of a mapping.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "inputSchemaMappingType": {
                  "description": "InputSchemaMappingType: Type of the custom mapping",
                  "type": "string"
                },
                "subject": {
                  "description": "Subject: The mapping information for the Subject property of the Event Grid Event.",
                  "properties": {
                    "defaultValue": {
                      "description": "DefaultValue: The default value to be used for mapping when a SourceField is not provided or if there's no property with\nthe specified name in the published JSON event payload.",
                      "type": "string"
                    },
                    "sourceField": {
                      "description": "SourceField: Name of a field in the input event schema that's to be used as the source of a mapping.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "topic": {
                  "description": "Topic: The mapping information for the Topic property of the Event Grid Event.",
                  "properties": {
                    "sourceField": {
                      "description": "SourceField: Name of a field in the input event schema that's to be used as the source of a mapping.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "location": {
          "description": "Location: Location of the resource.",
          "type": "string"
        },
        "metricResourceId": {
          "description": "MetricResourceId: Metric resource id for the topic.",
          "type": "string"
        },
        "name": {
          "description": "Name: Name of the resource.",
          "type": "string"
        },
        "privateEndpointConnections": {
          "items": {
            "properties": {
              "id": {
                "description": "Id: Fully qualified identifier of the resource.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "provisioningState": {
          "description": "ProvisioningState: Provisioning state of the topic.",
          "type": "string"
        },
        "publicNetworkAccess": {
          "description": "PublicNetworkAccess: This determines if traffic is allowed over public network. By default it is enabled.\nYou can further restrict to specific IPs by configuring <seealso\ncref=\"P:Microsoft.Azure.Events.ResourceProvider.Common.Contracts.TopicProperties.InboundIpRules\" />",
          "type": "string"
        },
        "systemData": {
          "description": "SystemData: The system metadata relating to Topic resource.",
          "properties": {
            "createdAt": {
              "description": "CreatedAt: The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "createdBy": {
              "description": "CreatedBy: The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "CreatedByType: The type of identity that created the resource.",
              "type": "string"
            },
            "lastModifiedAt": {
              "description": "LastModifiedAt: The timestamp of resource last modification (UTC)",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "LastModifiedBy: The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "LastModifiedByType: The type of identity that last modified the resource.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Tags of the resource.",
          "type": "object"
        },
        "type": {
          "description": "Type: Type of the resource.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
