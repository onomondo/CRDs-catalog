{
  "description": "Generator information:\n- Generated from: /datafactory/resource-manager/Microsoft.DataFactory/stable/2018-06-01/datafactory.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DataFactory/factories/{factoryName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "additionalProperties": {
          "additionalProperties": {
            "x-kubernetes-preserve-unknown-fields": true
          },
          "type": "object"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "maxLength": 63,
          "minLength": 3,
          "pattern": "^[A-Za-z0-9]+(?:-[A-Za-z0-9]+)*$",
          "type": "string"
        },
        "encryption": {
          "description": "Encryption: Properties to enable Customer Managed Key for the factory.",
          "properties": {
            "identity": {
              "description": "Identity: User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service\nIdentity will be used.",
              "properties": {
                "userAssignedIdentityReference": {
                  "description": "UserAssignedIdentityReference: The resource id of the user assigned identity to authenticate to customer's key vault.",
                  "properties": {
                    "armId": {
                      "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                      "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                      "type": "string"
                    },
                    "group": {
                      "description": "Group is the Kubernetes group of the resource.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the Kubernetes kind of the resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the Kubernetes name of the resource.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "keyName": {
              "description": "KeyName: The name of the key in Azure Key Vault to use as Customer Managed Key.",
              "type": "string"
            },
            "keyVersion": {
              "description": "KeyVersion: The version of the key used for CMK. If not provided, latest version will be used.",
              "type": "string"
            },
            "vaultBaseUrl": {
              "description": "VaultBaseUrl: The url of the Azure Key Vault used for CMK.",
              "type": "string"
            }
          },
          "required": [
            "keyName",
            "vaultBaseUrl"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "globalParameters": {
          "additionalProperties": {
            "description": "Definition of a single parameter for an entity.",
            "properties": {
              "type": {
                "description": "Type: Global Parameter type.",
                "enum": [
                  "Array",
                  "Bool",
                  "Float",
                  "Int",
                  "Object",
                  "String"
                ],
                "type": "string"
              },
              "value": {
                "additionalProperties": {
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "description": "Value: Value of parameter.",
                "type": "object"
              }
            },
            "required": [
              "type",
              "value"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "description": "GlobalParameters: List of parameters for factory.",
          "type": "object"
        },
        "identity": {
          "description": "Identity: Managed service identity of the factory.",
          "properties": {
            "type": {
              "description": "Type: The identity type.",
              "enum": [
                "SystemAssigned",
                "SystemAssigned,UserAssigned",
                "UserAssigned"
              ],
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "UserAssignedIdentities: List of user assigned identities for the factory.",
              "items": {
                "description": "Information about the user assigned identity for the resource",
                "properties": {
                  "reference": {
                    "description": "ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "required": [
            "type"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "location": {
          "description": "Location: The resource location.",
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "publicNetworkAccess": {
          "description": "PublicNetworkAccess: Whether or not public network access is allowed for the data factory.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string"
        },
        "purviewConfiguration": {
          "description": "PurviewConfiguration: Purview information of the factory.",
          "properties": {
            "purviewResourceReference": {
              "description": "PurviewResourceReference: Purview resource id.",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "repoConfiguration": {
          "description": "RepoConfiguration: Git repo information of the factory.",
          "properties": {
            "factoryGitHubConfiguration": {
              "description": "FactoryGitHub: Mutually exclusive with all other properties",
              "properties": {
                "accountName": {
                  "description": "AccountName: Account name.",
                  "type": "string"
                },
                "clientId": {
                  "description": "ClientId: GitHub bring your own app client id.",
                  "type": "string"
                },
                "clientSecret": {
                  "description": "ClientSecret: GitHub bring your own app client secret information.",
                  "properties": {
                    "byoaSecretAkvUrl": {
                      "description": "ByoaSecretAkvUrl: Bring your own app client secret AKV URL.",
                      "type": "string"
                    },
                    "byoaSecretName": {
                      "description": "ByoaSecretName: Bring your own app client secret name in AKV.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "collaborationBranch": {
                  "description": "CollaborationBranch: Collaboration branch.",
                  "type": "string"
                },
                "disablePublish": {
                  "description": "DisablePublish: Disable manual publish operation in ADF studio to favor automated publish.",
                  "type": "boolean"
                },
                "hostName": {
                  "description": "HostName: GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                  "type": "string"
                },
                "lastCommitId": {
                  "description": "LastCommitId: Last commit id.",
                  "type": "string"
                },
                "repositoryName": {
                  "description": "RepositoryName: Repository name.",
                  "type": "string"
                },
                "rootFolder": {
                  "description": "RootFolder: Root folder.",
                  "type": "string"
                },
                "type": {
                  "description": "Type: Type of repo configuration.",
                  "enum": [
                    "FactoryGitHubConfiguration"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "accountName",
                "collaborationBranch",
                "repositoryName",
                "rootFolder",
                "type"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "factoryVSTSConfiguration": {
              "description": "FactoryVSTS: Mutually exclusive with all other properties",
              "properties": {
                "accountName": {
                  "description": "AccountName: Account name.",
                  "type": "string"
                },
                "collaborationBranch": {
                  "description": "CollaborationBranch: Collaboration branch.",
                  "type": "string"
                },
                "disablePublish": {
                  "description": "DisablePublish: Disable manual publish operation in ADF studio to favor automated publish.",
                  "type": "boolean"
                },
                "lastCommitId": {
                  "description": "LastCommitId: Last commit id.",
                  "type": "string"
                },
                "projectName": {
                  "description": "ProjectName: VSTS project name.",
                  "type": "string"
                },
                "repositoryName": {
                  "description": "RepositoryName: Repository name.",
                  "type": "string"
                },
                "rootFolder": {
                  "description": "RootFolder: Root folder.",
                  "type": "string"
                },
                "tenantId": {
                  "description": "TenantId: VSTS tenant id.",
                  "type": "string"
                },
                "type": {
                  "description": "Type: Type of repo configuration.",
                  "enum": [
                    "FactoryVSTSConfiguration"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "accountName",
                "collaborationBranch",
                "projectName",
                "repositoryName",
                "rootFolder",
                "type"
              ],
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: The resource tags.",
          "type": "object"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "Factory resource type.",
      "properties": {
        "additionalProperties": {
          "additionalProperties": {
            "x-kubernetes-preserve-unknown-fields": true
          },
          "type": "object"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "createTime": {
          "description": "CreateTime: Time the factory was created in ISO8601 format.",
          "type": "string"
        },
        "eTag": {
          "description": "ETag: Etag identifies change in the resource.",
          "type": "string"
        },
        "encryption": {
          "description": "Encryption: Properties to enable Customer Managed Key for the factory.",
          "properties": {
            "identity": {
              "description": "Identity: User assigned identity to use to authenticate to customer's key vault. If not provided Managed Service\nIdentity will be used.",
              "properties": {
                "userAssignedIdentity": {
                  "description": "UserAssignedIdentity: The resource id of the user assigned identity to authenticate to customer's key vault.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "keyName": {
              "description": "KeyName: The name of the key in Azure Key Vault to use as Customer Managed Key.",
              "type": "string"
            },
            "keyVersion": {
              "description": "KeyVersion: The version of the key used for CMK. If not provided, latest version will be used.",
              "type": "string"
            },
            "vaultBaseUrl": {
              "description": "VaultBaseUrl: The url of the Azure Key Vault used for CMK.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "globalParameters": {
          "additionalProperties": {
            "description": "Definition of a single parameter for an entity.",
            "properties": {
              "type": {
                "description": "Type: Global Parameter type.",
                "type": "string"
              },
              "value": {
                "additionalProperties": {
                  "x-kubernetes-preserve-unknown-fields": true
                },
                "description": "Value: Value of parameter.",
                "type": "object"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "description": "GlobalParameters: List of parameters for factory.",
          "type": "object"
        },
        "id": {
          "description": "Id: The resource identifier.",
          "type": "string"
        },
        "identity": {
          "description": "Identity: Managed service identity of the factory.",
          "properties": {
            "principalId": {
              "description": "PrincipalId: The principal id of the identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "TenantId: The client tenant id of the identity.",
              "type": "string"
            },
            "type": {
              "description": "Type: The identity type.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "additionalProperties": {
                "x-kubernetes-preserve-unknown-fields": true
              },
              "description": "UserAssignedIdentities: List of user assigned identities for the factory.",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "location": {
          "description": "Location: The resource location.",
          "type": "string"
        },
        "name": {
          "description": "Name: The resource name.",
          "type": "string"
        },
        "provisioningState": {
          "description": "ProvisioningState: Factory provisioning state, example Succeeded.",
          "type": "string"
        },
        "publicNetworkAccess": {
          "description": "PublicNetworkAccess: Whether or not public network access is allowed for the data factory.",
          "type": "string"
        },
        "purviewConfiguration": {
          "description": "PurviewConfiguration: Purview information of the factory.",
          "properties": {
            "purviewResourceId": {
              "description": "PurviewResourceId: Purview resource id.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "repoConfiguration": {
          "description": "RepoConfiguration: Git repo information of the factory.",
          "properties": {
            "factoryGitHubConfiguration": {
              "description": "FactoryGitHub: Mutually exclusive with all other properties",
              "properties": {
                "accountName": {
                  "description": "AccountName: Account name.",
                  "type": "string"
                },
                "clientId": {
                  "description": "ClientId: GitHub bring your own app client id.",
                  "type": "string"
                },
                "clientSecret": {
                  "description": "ClientSecret: GitHub bring your own app client secret information.",
                  "properties": {
                    "byoaSecretAkvUrl": {
                      "description": "ByoaSecretAkvUrl: Bring your own app client secret AKV URL.",
                      "type": "string"
                    },
                    "byoaSecretName": {
                      "description": "ByoaSecretName: Bring your own app client secret name in AKV.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "collaborationBranch": {
                  "description": "CollaborationBranch: Collaboration branch.",
                  "type": "string"
                },
                "disablePublish": {
                  "description": "DisablePublish: Disable manual publish operation in ADF studio to favor automated publish.",
                  "type": "boolean"
                },
                "hostName": {
                  "description": "HostName: GitHub Enterprise host name. For example: `https://github.mydomain.com`",
                  "type": "string"
                },
                "lastCommitId": {
                  "description": "LastCommitId: Last commit id.",
                  "type": "string"
                },
                "repositoryName": {
                  "description": "RepositoryName: Repository name.",
                  "type": "string"
                },
                "rootFolder": {
                  "description": "RootFolder: Root folder.",
                  "type": "string"
                },
                "type": {
                  "description": "Type: Type of repo configuration.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "factoryVSTSConfiguration": {
              "description": "FactoryVSTS: Mutually exclusive with all other properties",
              "properties": {
                "accountName": {
                  "description": "AccountName: Account name.",
                  "type": "string"
                },
                "collaborationBranch": {
                  "description": "CollaborationBranch: Collaboration branch.",
                  "type": "string"
                },
                "disablePublish": {
                  "description": "DisablePublish: Disable manual publish operation in ADF studio to favor automated publish.",
                  "type": "boolean"
                },
                "lastCommitId": {
                  "description": "LastCommitId: Last commit id.",
                  "type": "string"
                },
                "projectName": {
                  "description": "ProjectName: VSTS project name.",
                  "type": "string"
                },
                "repositoryName": {
                  "description": "RepositoryName: Repository name.",
                  "type": "string"
                },
                "rootFolder": {
                  "description": "RootFolder: Root folder.",
                  "type": "string"
                },
                "tenantId": {
                  "description": "TenantId: VSTS tenant id.",
                  "type": "string"
                },
                "type": {
                  "description": "Type: Type of repo configuration.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: The resource tags.",
          "type": "object"
        },
        "type": {
          "description": "Type: The resource type.",
          "type": "string"
        },
        "version": {
          "description": "Version: Version of the factory.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
