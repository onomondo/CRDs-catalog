{
  "description": "Generator information:\n- Generated from: /signalr/resource-manager/Microsoft.SignalRService/stable/2021-10-01/signalr.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.SignalRService/signalR/{resourceName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "cors": {
          "description": "Cors: Cross-Origin Resource Sharing (CORS) settings.",
          "properties": {
            "allowedOrigins": {
              "description": "AllowedOrigins: Gets or sets the list of origins that should be allowed to make cross-origin calls (for example:\nhttp://example.com:12345). Use \"*\" to allow all. If omitted, allow all by default.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "disableAadAuth": {
          "description": "DisableAadAuth: DisableLocalAuth\nEnable or disable aad auth\nWhen set as true, connection with AuthType=aad won't work.",
          "type": "boolean"
        },
        "disableLocalAuth": {
          "description": "DisableLocalAuth: DisableLocalAuth\nEnable or disable local auth with AccessKey\nWhen set as true, connection with AccessKey=xxx won't work.",
          "type": "boolean"
        },
        "features": {
          "description": "Features: List of the featureFlags.\nFeatureFlags that are not included in the parameters for the update operation will not be modified.\nAnd the response will only include featureFlags that are explicitly set.\nWhen a featureFlag is not explicitly set, its globally default value will be used\nBut keep in mind, the default value doesn't mean \"false\". It varies in terms of different FeatureFlags.",
          "items": {
            "description": "Feature of a resource, which controls the runtime behavior.",
            "properties": {
              "flag": {
                "description": "Flag: FeatureFlags is the supported features of Azure SignalR service.\n- ServiceMode: Flag for backend server for SignalR  service. Values allowed: \"Default\": have your own backend server;\n\"Serverless\": your application doesn't have a backend  server; \"Classic\": for backward compatibility. Support both\nDefault and Serverless mode but not recommended;  \"PredefinedOnly\": for future use.\n- EnableConnectivityLogs: \"true\"/\"false\", to enable/disable the connectivity log  category respectively.\n- EnableMessagingLogs: \"true\"/\"false\", to enable/disable the connectivity log category  respectively.\n- EnableLiveTrace: Live Trace allows you to know what's happening inside Azure SignalR service, it will  give you live\ntraces in real time, it will be helpful when you developing your own Azure SignalR based web application  or\nself-troubleshooting some issues. Please note that live traces are counted as outbound messages that will be charged.\nValues allowed: \"true\"/\"false\", to enable/disable live trace feature.",
                "enum": [
                  "EnableConnectivityLogs",
                  "EnableLiveTrace",
                  "EnableMessagingLogs",
                  "ServiceMode"
                ],
                "type": "string"
              },
              "properties": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Properties: Optional properties related to this feature.",
                "type": "object"
              },
              "value": {
                "description": "Value: Value of the feature flag. See Azure SignalR service document https://docs.microsoft.com/azure/azure-signalr/ for\nallowed values.",
                "maxLength": 128,
                "minLength": 1,
                "type": "string"
              },
              "additionalProperties": false
            },
            "required": [
              "flag",
              "value"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "identity": {
          "description": "Identity: A class represent managed identities used for request and response",
          "properties": {
            "type": {
              "description": "Type: Represents the identity type: systemAssigned, userAssigned, None",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned"
              ],
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "UserAssignedIdentities: Get or set the user assigned identities",
              "items": {
                "description": "Information about the user assigned identity for the resource",
                "properties": {
                  "reference": {
                    "description": "ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "kind": {
          "description": "Kind: The kind of the service, it can be SignalR or RawWebSockets",
          "enum": [
            "RawWebSockets",
            "SignalR"
          ],
          "type": "string"
        },
        "location": {
          "description": "Location: The GEO location of the resource. e.g. West US | East US | North Central US | South Central US.",
          "type": "string"
        },
        "networkACLs": {
          "description": "NetworkACLs: Network ACLs for the resource",
          "properties": {
            "defaultAction": {
              "description": "DefaultAction: Azure Networking ACL Action.",
              "enum": [
                "Allow",
                "Deny"
              ],
              "type": "string"
            },
            "privateEndpoints": {
              "description": "PrivateEndpoints: ACLs for requests from private endpoints",
              "items": {
                "description": "ACL for a private endpoint",
                "properties": {
                  "allow": {
                    "description": "Allow: Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.",
                    "items": {
                      "description": "The incoming request type to the service",
                      "enum": [
                        "ClientConnection",
                        "RESTAPI",
                        "ServerConnection",
                        "Trace"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "deny": {
                    "description": "Deny: Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.",
                    "items": {
                      "description": "The incoming request type to the service",
                      "enum": [
                        "ClientConnection",
                        "RESTAPI",
                        "ServerConnection",
                        "Trace"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "Name: Name of the private endpoint connection",
                    "type": "string"
                  }
                },
                "required": [
                  "name"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "publicNetwork": {
              "description": "PublicNetwork: Network ACL",
              "properties": {
                "allow": {
                  "description": "Allow: Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.",
                  "items": {
                    "description": "The incoming request type to the service",
                    "enum": [
                      "ClientConnection",
                      "RESTAPI",
                      "ServerConnection",
                      "Trace"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                },
                "deny": {
                  "description": "Deny: Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.",
                  "items": {
                    "description": "The incoming request type to the service",
                    "enum": [
                      "ClientConnection",
                      "RESTAPI",
                      "ServerConnection",
                      "Trace"
                    ],
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secrets": {
              "description": "Secrets: configures where to place Azure generated secrets.",
              "properties": {
                "primaryConnectionString": {
                  "description": "PrimaryConnectionString: indicates where the PrimaryConnectionString secret should be placed. If omitted, the secret\nwill not be retrieved from Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "primaryKey": {
                  "description": "PrimaryKey: indicates where the PrimaryKey secret should be placed. If omitted, the secret will not be retrieved from\nAzure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "secondaryConnectionString": {
                  "description": "SecondaryConnectionString: indicates where the SecondaryConnectionString secret should be placed. If omitted, the secret\nwill not be retrieved from Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "secondaryKey": {
                  "description": "SecondaryKey: indicates where the SecondaryKey secret should be placed. If omitted, the secret will not be retrieved\nfrom Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "publicNetworkAccess": {
          "description": "PublicNetworkAccess: Enable or disable public network access. Default to \"Enabled\".\nWhen it's Enabled, network ACLs still apply.\nWhen it's Disabled, public network access is always disabled no matter what you set in network ACLs.",
          "type": "string"
        },
        "resourceLogConfiguration": {
          "description": "ResourceLogConfiguration: Resource log configuration of a Microsoft.SignalRService resource.",
          "properties": {
            "categories": {
              "description": "Categories: Gets or sets the list of category configurations.",
              "items": {
                "description": "Resource log category configuration of a Microsoft.SignalRService resource.",
                "properties": {
                  "enabled": {
                    "description": "Enabled: Indicates whether or the resource log category is enabled.\nAvailable values: true, false.\nCase insensitive.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name: Gets or sets the resource log category's name.\nAvailable values: ConnectivityLogs, MessagingLogs.\nCase insensitive.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "sku": {
          "description": "Sku: The billing information of the resource.",
          "properties": {
            "capacity": {
              "description": "Capacity: Optional, integer. The unit count of the resource. 1 by default.\nIf present, following values are allowed:\nFree: 1\nStandard: 1,2,5,10,20,50,100",
              "type": "integer"
            },
            "name": {
              "description": "Name: The name of the SKU. Required.\nAllowed values: Standard_S1, Free_F1",
              "type": "string"
            },
            "tier": {
              "description": "Tier: Optional tier of this particular SKU. 'Standard' or 'Free'.\n`Basic` is deprecated, use `Standard` instead.",
              "enum": [
                "Basic",
                "Free",
                "Premium",
                "Standard"
              ],
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Tags of the service which is a list of key value pairs that describe the resource.",
          "type": "object"
        },
        "tls": {
          "description": "Tls: TLS settings for the resource",
          "properties": {
            "clientCertEnabled": {
              "description": "ClientCertEnabled: Request client certificate during TLS handshake if enabled",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "upstream": {
          "description": "Upstream: The settings for the Upstream when the service is in server-less mode.",
          "properties": {
            "templates": {
              "description": "Templates: Gets or sets the list of Upstream URL templates. Order matters, and the first matching template takes effects.",
              "items": {
                "description": "Upstream template item settings. It defines the Upstream URL of the incoming requests.\nThe template defines the pattern\nof the event, the hub or the category of the incoming request that matches current URL template.",
                "properties": {
                  "auth": {
                    "description": "Auth: Upstream auth settings. If not set, no auth is used for upstream messages.",
                    "properties": {
                      "managedIdentity": {
                        "description": "ManagedIdentity: Managed identity settings for upstream.",
                        "properties": {
                          "resource": {
                            "description": "Resource: The Resource indicating the App ID URI of the target resource.\nIt also appears in the aud (audience) claim of the issued token.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": {
                        "description": "Type: Upstream auth type enum.",
                        "enum": [
                          "ManagedIdentity",
                          "None"
                        ],
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "categoryPattern": {
                    "description": "CategoryPattern: Gets or sets the matching pattern for category names. If not set, it matches any category.\nThere are 3 kind of patterns supported:\n1. \"*\", it to matches any category name\n2. Combine multiple categories with \",\", for example \"connections,messages\", it matches category \"connections\" and\n\"messages\"\n3. The single category name, for example, \"connections\", it matches the category \"connections\"",
                    "type": "string"
                  },
                  "eventPattern": {
                    "description": "EventPattern: Gets or sets the matching pattern for event names. If not set, it matches any event.\nThere are 3 kind of patterns supported:\n1. \"*\", it to matches any event name\n2. Combine multiple events with \",\", for example \"connect,disconnect\", it matches event \"connect\" and \"disconnect\"\n3. The single event name, for example, \"connect\", it matches \"connect\"",
                    "type": "string"
                  },
                  "hubPattern": {
                    "description": "HubPattern: Gets or sets the matching pattern for hub names. If not set, it matches any hub.\nThere are 3 kind of patterns supported:\n1. \"*\", it to matches any hub name\n2. Combine multiple hubs with \",\", for example \"hub1,hub2\", it matches \"hub1\" and \"hub2\"\n3. The single hub name, for example, \"hub1\", it matches \"hub1\"",
                    "type": "string"
                  },
                  "urlTemplate": {
                    "description": "UrlTemplate: Gets or sets the Upstream URL template. You can use 3 predefined parameters {hub}, {category} {event}\ninside the template, the value of the Upstream URL is dynamically calculated when the client request comes in.\nFor example, if the urlTemplate is `http://example.com/{hub}/api/{event}`, with a client request from hub `chat`\nconnects, it will first POST to this URL: `http://example.com/chat/api/connect`.",
                    "type": "string"
                  }
                },
                "required": [
                  "urlTemplate"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "cors": {
          "description": "Cors: Cross-Origin Resource Sharing (CORS) settings.",
          "properties": {
            "allowedOrigins": {
              "description": "AllowedOrigins: Gets or sets the list of origins that should be allowed to make cross-origin calls (for example:\nhttp://example.com:12345). Use \"*\" to allow all. If omitted, allow all by default.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "disableAadAuth": {
          "description": "DisableAadAuth: DisableLocalAuth\nEnable or disable aad auth\nWhen set as true, connection with AuthType=aad won't work.",
          "type": "boolean"
        },
        "disableLocalAuth": {
          "description": "DisableLocalAuth: DisableLocalAuth\nEnable or disable local auth with AccessKey\nWhen set as true, connection with AccessKey=xxx won't work.",
          "type": "boolean"
        },
        "externalIP": {
          "description": "ExternalIP: The publicly accessible IP of the resource.",
          "type": "string"
        },
        "features": {
          "description": "Features: List of the featureFlags.\nFeatureFlags that are not included in the parameters for the update operation will not be modified.\nAnd the response will only include featureFlags that are explicitly set.\nWhen a featureFlag is not explicitly set, its globally default value will be used\nBut keep in mind, the default value doesn't mean \"false\". It varies in terms of different FeatureFlags.",
          "items": {
            "description": "Feature of a resource, which controls the runtime behavior.",
            "properties": {
              "flag": {
                "description": "Flag: FeatureFlags is the supported features of Azure SignalR service.\n- ServiceMode: Flag for backend server for SignalR  service. Values allowed: \"Default\": have your own backend server;\n\"Serverless\": your application doesn't have a backend  server; \"Classic\": for backward compatibility. Support both\nDefault and Serverless mode but not recommended;  \"PredefinedOnly\": for future use.\n- EnableConnectivityLogs: \"true\"/\"false\", to enable/disable the connectivity log  category respectively.\n- EnableMessagingLogs: \"true\"/\"false\", to enable/disable the connectivity log category  respectively.\n- EnableLiveTrace: Live Trace allows you to know what's happening inside Azure SignalR service, it will  give you live\ntraces in real time, it will be helpful when you developing your own Azure SignalR based web application  or\nself-troubleshooting some issues. Please note that live traces are counted as outbound messages that will be charged.\nValues allowed: \"true\"/\"false\", to enable/disable live trace feature.",
                "type": "string"
              },
              "properties": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Properties: Optional properties related to this feature.",
                "type": "object"
              },
              "value": {
                "description": "Value: Value of the feature flag. See Azure SignalR service document https://docs.microsoft.com/azure/azure-signalr/ for\nallowed values.",
                "type": "string"
              },
              "additionalProperties": false
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "hostName": {
          "description": "HostName: FQDN of the service instance.",
          "type": "string"
        },
        "hostNamePrefix": {
          "description": "HostNamePrefix: Deprecated.",
          "type": "string"
        },
        "id": {
          "description": "Id: Fully qualified resource Id for the resource.",
          "type": "string"
        },
        "identity": {
          "description": "Identity: A class represent managed identities used for request and response",
          "properties": {
            "principalId": {
              "description": "PrincipalId: Get the principal id for the system assigned identity.\nOnly be used in response.",
              "type": "string"
            },
            "tenantId": {
              "description": "TenantId: Get the tenant id for the system assigned identity.\nOnly be used in response",
              "type": "string"
            },
            "type": {
              "description": "Type: Represents the identity type: systemAssigned, userAssigned, None",
              "type": "string"
            },
            "userAssignedIdentities": {
              "additionalProperties": {
                "description": "Properties of user assigned identity.",
                "properties": {
                  "clientId": {
                    "description": "ClientId: Get the client id for the user assigned identity",
                    "type": "string"
                  },
                  "principalId": {
                    "description": "PrincipalId: Get the principal id for the user assigned identity",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "description": "UserAssignedIdentities: Get or set the user assigned identities",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "kind": {
          "description": "Kind: The kind of the service, it can be SignalR or RawWebSockets",
          "type": "string"
        },
        "location": {
          "description": "Location: The GEO location of the resource. e.g. West US | East US | North Central US | South Central US.",
          "type": "string"
        },
        "name": {
          "description": "Name: The name of the resource.",
          "type": "string"
        },
        "networkACLs": {
          "description": "NetworkACLs: Network ACLs for the resource",
          "properties": {
            "defaultAction": {
              "description": "DefaultAction: Azure Networking ACL Action.",
              "type": "string"
            },
            "privateEndpoints": {
              "description": "PrivateEndpoints: ACLs for requests from private endpoints",
              "items": {
                "description": "ACL for a private endpoint",
                "properties": {
                  "allow": {
                    "description": "Allow: Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.",
                    "items": {
                      "description": "The incoming request type to the service",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "deny": {
                    "description": "Deny: Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.",
                    "items": {
                      "description": "The incoming request type to the service",
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "Name: Name of the private endpoint connection",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "publicNetwork": {
              "description": "PublicNetwork: Network ACL",
              "properties": {
                "allow": {
                  "description": "Allow: Allowed request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.",
                  "items": {
                    "description": "The incoming request type to the service",
                    "type": "string"
                  },
                  "type": "array"
                },
                "deny": {
                  "description": "Deny: Denied request types. The value can be one or more of: ClientConnection, ServerConnection, RESTAPI.",
                  "items": {
                    "description": "The incoming request type to the service",
                    "type": "string"
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "privateEndpointConnections": {
          "description": "PrivateEndpointConnections: Private endpoint connections to the resource.",
          "items": {
            "description": "A private endpoint connection to an azure resource",
            "properties": {
              "id": {
                "description": "Id: Fully qualified resource Id for the resource.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "provisioningState": {
          "description": "ProvisioningState: Provisioning state of the resource.",
          "type": "string"
        },
        "publicNetworkAccess": {
          "description": "PublicNetworkAccess: Enable or disable public network access. Default to \"Enabled\".\nWhen it's Enabled, network ACLs still apply.\nWhen it's Disabled, public network access is always disabled no matter what you set in network ACLs.",
          "type": "string"
        },
        "publicPort": {
          "description": "PublicPort: The publicly accessible port of the resource which is designed for browser/client side usage.",
          "type": "integer"
        },
        "resourceLogConfiguration": {
          "description": "ResourceLogConfiguration: Resource log configuration of a Microsoft.SignalRService resource.",
          "properties": {
            "categories": {
              "description": "Categories: Gets or sets the list of category configurations.",
              "items": {
                "description": "Resource log category configuration of a Microsoft.SignalRService resource.",
                "properties": {
                  "enabled": {
                    "description": "Enabled: Indicates whether or the resource log category is enabled.\nAvailable values: true, false.\nCase insensitive.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name: Gets or sets the resource log category's name.\nAvailable values: ConnectivityLogs, MessagingLogs.\nCase insensitive.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "serverPort": {
          "description": "ServerPort: The publicly accessible port of the resource which is designed for customer server side usage.",
          "type": "integer"
        },
        "sharedPrivateLinkResources": {
          "description": "SharedPrivateLinkResources: The list of shared private link resources.",
          "items": {
            "description": "Describes a Shared Private Link Resource",
            "properties": {
              "id": {
                "description": "Id: Fully qualified resource Id for the resource.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "sku": {
          "description": "Sku: The billing information of the resource.",
          "properties": {
            "capacity": {
              "description": "Capacity: Optional, integer. The unit count of the resource. 1 by default.\nIf present, following values are allowed:\nFree: 1\nStandard: 1,2,5,10,20,50,100",
              "type": "integer"
            },
            "family": {
              "description": "Family: Not used. Retained for future use.",
              "type": "string"
            },
            "name": {
              "description": "Name: The name of the SKU. Required.\nAllowed values: Standard_S1, Free_F1",
              "type": "string"
            },
            "size": {
              "description": "Size: Not used. Retained for future use.",
              "type": "string"
            },
            "tier": {
              "description": "Tier: Optional tier of this particular SKU. 'Standard' or 'Free'.\n`Basic` is deprecated, use `Standard` instead.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "systemData": {
          "description": "SystemData: Metadata pertaining to creation and last modification of the resource.",
          "properties": {
            "createdAt": {
              "description": "CreatedAt: The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "createdBy": {
              "description": "CreatedBy: The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "CreatedByType: The type of identity that created the resource.",
              "type": "string"
            },
            "lastModifiedAt": {
              "description": "LastModifiedAt: The timestamp of resource last modification (UTC)",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "LastModifiedBy: The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "LastModifiedByType: The type of identity that last modified the resource.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Tags of the service which is a list of key value pairs that describe the resource.",
          "type": "object"
        },
        "tls": {
          "description": "Tls: TLS settings for the resource",
          "properties": {
            "clientCertEnabled": {
              "description": "ClientCertEnabled: Request client certificate during TLS handshake if enabled",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "type": {
          "description": "Type: The type of the resource - e.g. \"Microsoft.SignalRService/SignalR\"",
          "type": "string"
        },
        "upstream": {
          "description": "Upstream: The settings for the Upstream when the service is in server-less mode.",
          "properties": {
            "templates": {
              "description": "Templates: Gets or sets the list of Upstream URL templates. Order matters, and the first matching template takes effects.",
              "items": {
                "description": "Upstream template item settings. It defines the Upstream URL of the incoming requests.\nThe template defines the pattern\nof the event, the hub or the category of the incoming request that matches current URL template.",
                "properties": {
                  "auth": {
                    "description": "Auth: Upstream auth settings. If not set, no auth is used for upstream messages.",
                    "properties": {
                      "managedIdentity": {
                        "description": "ManagedIdentity: Managed identity settings for upstream.",
                        "properties": {
                          "resource": {
                            "description": "Resource: The Resource indicating the App ID URI of the target resource.\nIt also appears in the aud (audience) claim of the issued token.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": {
                        "description": "Type: Upstream auth type enum.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "categoryPattern": {
                    "description": "CategoryPattern: Gets or sets the matching pattern for category names. If not set, it matches any category.\nThere are 3 kind of patterns supported:\n1. \"*\", it to matches any category name\n2. Combine multiple categories with \",\", for example \"connections,messages\", it matches category \"connections\" and\n\"messages\"\n3. The single category name, for example, \"connections\", it matches the category \"connections\"",
                    "type": "string"
                  },
                  "eventPattern": {
                    "description": "EventPattern: Gets or sets the matching pattern for event names. If not set, it matches any event.\nThere are 3 kind of patterns supported:\n1. \"*\", it to matches any event name\n2. Combine multiple events with \",\", for example \"connect,disconnect\", it matches event \"connect\" and \"disconnect\"\n3. The single event name, for example, \"connect\", it matches \"connect\"",
                    "type": "string"
                  },
                  "hubPattern": {
                    "description": "HubPattern: Gets or sets the matching pattern for hub names. If not set, it matches any hub.\nThere are 3 kind of patterns supported:\n1. \"*\", it to matches any hub name\n2. Combine multiple hubs with \",\", for example \"hub1,hub2\", it matches \"hub1\" and \"hub2\"\n3. The single hub name, for example, \"hub1\", it matches \"hub1\"",
                    "type": "string"
                  },
                  "urlTemplate": {
                    "description": "UrlTemplate: Gets or sets the Upstream URL template. You can use 3 predefined parameters {hub}, {category} {event}\ninside the template, the value of the Upstream URL is dynamically calculated when the client request comes in.\nFor example, if the urlTemplate is `http://example.com/{hub}/api/{event}`, with a client request from hub `chat`\nconnects, it will first POST to this URL: `http://example.com/chat/api/connect`.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "version": {
          "description": "Version: Version of the resource. Probably you need the same or higher version of client SDKs.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
