{
  "description": "Generator information:\n- Generated from: /apimanagement/resource-manager/Microsoft.ApiManagement/preview/2023-05-01-preview/apimsubscriptions.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ApiManagement/service/{serviceName}/subscriptions/{sid}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "allowTracing": {
          "description": "AllowTracing: Determines whether tracing can be enabled",
          "type": "boolean"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "maxLength": 256,
          "pattern": "^[^*#&+:<>?]+$",
          "type": "string"
        },
        "displayName": {
          "description": "DisplayName: Subscription name.",
          "maxLength": 100,
          "minLength": 1,
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secrets": {
              "description": "Secrets: configures where to place Azure generated secrets.",
              "properties": {
                "primaryKey": {
                  "description": "PrimaryKey: indicates where the PrimaryKey secret should be placed. If omitted, the secret will not be retrieved from\nAzure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "secondaryKey": {
                  "description": "SecondaryKey: indicates where the SecondaryKey secret should be placed. If omitted, the secret will not be retrieved\nfrom Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a apimanagement.azure.com/Service resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "ownerReference": {
          "description": "OwnerReference: User (user id path) for whom subscription is being created in form /users/{userId}",
          "properties": {
            "armId": {
              "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "group": {
              "description": "Group is the Kubernetes group of the resource.",
              "type": "string"
            },
            "kind": {
              "description": "Kind is the Kubernetes kind of the resource.",
              "type": "string"
            },
            "name": {
              "description": "Name is the Kubernetes name of the resource.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "primaryKey": {
          "description": "PrimaryKey: Primary subscription key. If not specified during request key will be generated automatically.",
          "properties": {
            "key": {
              "description": "Key is the key in the Kubernetes secret being referenced",
              "type": "string"
            },
            "name": {
              "description": "Name is the name of the Kubernetes secret being referenced.\nThe secret must be in the same namespace as the resource",
              "type": "string"
            }
          },
          "required": [
            "key",
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "scope": {
          "description": "Scope: Scope like /products/{productId} or /apis or /apis/{apiId}.",
          "type": "string"
        },
        "secondaryKey": {
          "description": "SecondaryKey: Secondary subscription key. If not specified during request key will be generated automatically.",
          "properties": {
            "key": {
              "description": "Key is the key in the Kubernetes secret being referenced",
              "type": "string"
            },
            "name": {
              "description": "Name is the name of the Kubernetes secret being referenced.\nThe secret must be in the same namespace as the resource",
              "type": "string"
            }
          },
          "required": [
            "key",
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "state": {
          "description": "State: Initial subscription state. If no value is specified, subscription is created with Submitted state. Possible\nstates are * active \u2013 the subscription is active, * suspended \u2013 the subscription is blocked, and the subscriber\ncannot call any APIs of the product, * submitted \u2013 the subscription request has been made by the developer, but has\nnot yet been approved or rejected, * rejected \u2013 the subscription request has been denied by an administrator, *\ncancelled \u2013 the subscription has been cancelled by the developer or administrator, * expired \u2013 the subscription\nreached its expiration date and was deactivated.",
          "enum": [
            "active",
            "cancelled",
            "expired",
            "rejected",
            "submitted",
            "suspended"
          ],
          "type": "string"
        }
      },
      "required": [
        "displayName",
        "owner",
        "scope"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "allowTracing": {
          "description": "AllowTracing: Determines whether tracing is enabled",
          "type": "boolean"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "createdDate": {
          "description": "CreatedDate: Subscription creation date. The date conforms to the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified\nby the ISO 8601 standard.",
          "type": "string"
        },
        "displayName": {
          "description": "DisplayName: The name of the subscription, or null if the subscription has no name.",
          "type": "string"
        },
        "endDate": {
          "description": "EndDate: Date when subscription was cancelled or expired. The setting is for audit purposes only and the subscription is\nnot automatically cancelled. The subscription lifecycle can be managed by using the `state` property. The date conforms\nto the following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.",
          "type": "string"
        },
        "expirationDate": {
          "description": "ExpirationDate: Subscription expiration date. The setting is for audit purposes only and the subscription is not\nautomatically expired. The subscription lifecycle can be managed by using the `state` property. The date conforms to the\nfollowing format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.",
          "type": "string"
        },
        "id": {
          "description": "Id: Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string"
        },
        "name": {
          "description": "Name: The name of the resource",
          "type": "string"
        },
        "notificationDate": {
          "description": "NotificationDate: Upcoming subscription expiration notification date. The date conforms to the following format:\n`yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.",
          "type": "string"
        },
        "ownerId": {
          "description": "OwnerId: The user resource identifier of the subscription owner. The value is a valid relative URL in the format of\n/users/{userId} where {userId} is a user identifier.",
          "type": "string"
        },
        "scope": {
          "description": "Scope: Scope like /products/{productId} or /apis or /apis/{apiId}.",
          "type": "string"
        },
        "startDate": {
          "description": "StartDate: Subscription activation date. The setting is for audit purposes only and the subscription is not\nautomatically activated. The subscription lifecycle can be managed by using the `state` property. The date conforms to\nthe following format: `yyyy-MM-ddTHH:mm:ssZ` as specified by the ISO 8601 standard.",
          "type": "string"
        },
        "state": {
          "description": "State: Subscription state. Possible states are * active \u2013 the subscription is active, * suspended \u2013 the subscription\nis blocked, and the subscriber cannot call any APIs of the product, * submitted \u2013 the subscription request has been\nmade by the developer, but has not yet been approved or rejected, * rejected \u2013 the subscription request has been\ndenied by an administrator, * cancelled \u2013 the subscription has been cancelled by the developer or administrator, *\nexpired \u2013 the subscription reached its expiration date and was deactivated.",
          "type": "string"
        },
        "stateComment": {
          "description": "StateComment: Optional subscription comment added by an administrator when the state is changed to the 'rejected'.",
          "type": "string"
        },
        "type": {
          "description": "Type: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
