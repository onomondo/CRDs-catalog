{
  "description": "Generator information:\n- Generated from: /compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2020-12-01/compute.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/virtualMachineScaleSets/{vmScaleSetName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "additionalCapabilities": {
          "description": "AdditionalCapabilities: Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual\nMachine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data\ndisks with UltraSSD_LRS storage account type.",
          "properties": {
            "ultraSSDEnabled": {
              "description": "UltraSSDEnabled: The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS\nstorage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual\nmachine or virtual machine scale set only if this property is enabled.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "automaticRepairsPolicy": {
          "description": "AutomaticRepairsPolicy: Policy for automatic repairs.",
          "properties": {
            "enabled": {
              "description": "Enabled: Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is\nfalse.",
              "type": "boolean"
            },
            "gracePeriod": {
              "description": "GracePeriod: The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time\nstarts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should\nbe specified in ISO 8601 format. The minimum allowed grace period is 30 minutes (PT30M), which is also the default\nvalue. The maximum allowed grace period is 90 minutes (PT90M).",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "doNotRunExtensionsOnOverprovisionedVMs": {
          "description": "DoNotRunExtensionsOnOverprovisionedVMs: When Overprovision is enabled, extensions are launched only on the requested\nnumber of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra\noverprovisioned VMs.",
          "type": "boolean"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: The extended location of the Virtual Machine Scale Set.",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "enum": [
                "EdgeZone"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "hostGroup": {
          "description": "HostGroup: Specifies information about the dedicated host group that the virtual machine scale set resides in.\nMinimum api-version: 2020-06-01.",
          "properties": {
            "reference": {
              "description": "Reference: Resource Id",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "identity": {
          "description": "Identity: The identity of the virtual machine scale set, if configured.",
          "properties": {
            "type": {
              "description": "Type: The type of identity used for the virtual machine scale set. The type 'SystemAssigned, UserAssigned' includes both\nan implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from\nthe virtual machine scale set.",
              "enum": [
                "None",
                "SystemAssigned",
                "SystemAssigned, UserAssigned",
                "UserAssigned"
              ],
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "UserAssignedIdentities: The list of user identities associated with the virtual machine scale set. The user identity\ndictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
              "items": {
                "description": "Information about the user assigned identity for the resource",
                "properties": {
                  "reference": {
                    "description": "ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "location": {
          "description": "Location: Resource location",
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "orchestrationMode": {
          "description": "OrchestrationMode: Specifies the orchestration mode for the virtual machine scale set.",
          "enum": [
            "Flexible",
            "Uniform"
          ],
          "type": "string"
        },
        "overprovision": {
          "description": "Overprovision: Specifies whether the Virtual Machine Scale Set should be overprovisioned.",
          "type": "boolean"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "plan": {
          "description": "Plan: Specifies information about the marketplace image used to create the virtual machine. This element is only used\nfor marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic\nuse.  In the Azure portal, find the marketplace image that you want to use and then click Want to deploy\nprogrammatically, Get Started ->. Enter any required information and then click Save.",
          "properties": {
            "name": {
              "description": "Name: The plan ID.",
              "type": "string"
            },
            "product": {
              "description": "Product: Specifies the product of the image from the marketplace. This is the same value as Offer under the\nimageReference element.",
              "type": "string"
            },
            "promotionCode": {
              "description": "PromotionCode: The promotion code.",
              "type": "string"
            },
            "publisher": {
              "description": "Publisher: The publisher ID.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "platformFaultDomainCount": {
          "description": "PlatformFaultDomainCount: Fault Domain count for each placement group.",
          "type": "integer"
        },
        "proximityPlacementGroup": {
          "description": "ProximityPlacementGroup: Specifies information about the proximity placement group that the virtual machine scale set\nshould be assigned to.\nMinimum api-version: 2018-04-01.",
          "properties": {
            "reference": {
              "description": "Reference: Resource Id",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "scaleInPolicy": {
          "description": "ScaleInPolicy: Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual\nMachine Scale Set is scaled-in.",
          "properties": {
            "rules": {
              "description": "Rules: The rules to be followed when scaling-in a virtual machine scale set.\nPossible values are:\nDefault When a virtual machine scale set is scaled in, the scale set will first be balanced across zones if it is a\nzonal scale set. Then, it will be balanced across Fault Domains as far as possible. Within each Fault Domain, the\nvirtual machines chosen for removal will be the newest ones that are not protected from scale-in.\nOldestVM When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not protected from\nscale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across\nzones. Within each zone, the oldest virtual machines that are not protected will be chosen for removal.\nNewestVM When a virtual machine scale set is being scaled-in, the newest virtual machines that are not protected from\nscale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across\nzones. Within each zone, the newest virtual machines that are not protected will be chosen for removal.",
              "items": {
                "enum": [
                  "Default",
                  "NewestVM",
                  "OldestVM"
                ],
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "singlePlacementGroup": {
          "description": "SinglePlacementGroup: When true this limits the scale set to a single placement group, of max size 100 virtual machines.\nNOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may\nnot be modified to true.",
          "type": "boolean"
        },
        "sku": {
          "description": "Sku: The virtual machine scale set sku.",
          "properties": {
            "capacity": {
              "description": "Capacity: Specifies the number of virtual machines in the scale set.",
              "type": "integer"
            },
            "name": {
              "description": "Name: The sku name.",
              "type": "string"
            },
            "tier": {
              "description": "Tier: Specifies the tier of virtual machines in a scale set.\nPossible Values:\nStandard\nBasic",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags",
          "type": "object"
        },
        "upgradePolicy": {
          "description": "UpgradePolicy: The upgrade policy.",
          "properties": {
            "automaticOSUpgradePolicy": {
              "description": "AutomaticOSUpgradePolicy: Configuration parameters used for performing automatic OS Upgrade.",
              "properties": {
                "disableAutomaticRollback": {
                  "description": "DisableAutomaticRollback: Whether OS image rollback feature should be disabled. Default value is false.",
                  "type": "boolean"
                },
                "enableAutomaticOSUpgrade": {
                  "description": "EnableAutomaticOSUpgrade: Indicates whether OS upgrades should automatically be applied to scale set instances in a\nrolling fashion when a newer version of the OS image becomes available. Default value is false.\nIf this is set to true for Windows based scale sets,\n[enableAutomaticUpdates](https://docs.microsoft.com/dotnet/api/microsoft.azure.management.compute.models.windowsconfiguration.enableautomaticupdates?view=azure-dotnet)\nis automatically set to false and cannot be set to true.",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "mode": {
              "description": "Mode: Specifies the mode of an upgrade to virtual machines in the scale set.\nPossible values are:\nManual - You  control the application of updates to virtual machines in the scale set. You do this by using the\nmanualUpgrade action.\nAutomatic - All virtual machines in the scale set are  automatically updated at the same time.",
              "enum": [
                "Automatic",
                "Manual",
                "Rolling"
              ],
              "type": "string"
            },
            "rollingUpgradePolicy": {
              "description": "RollingUpgradePolicy: The configuration parameters used while performing a rolling upgrade.",
              "properties": {
                "enableCrossZoneUpgrade": {
                  "description": "EnableCrossZoneUpgrade: Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration\nthe Update Domain and maxBatchInstancePercent to determine the batch size.",
                  "type": "boolean"
                },
                "maxBatchInstancePercent": {
                  "description": "MaxBatchInstancePercent: The maximum percent of total virtual machine instances that will be upgraded simultaneously by\nthe rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the\npercentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%.",
                  "maximum": 100,
                  "minimum": 5,
                  "type": "integer"
                },
                "maxUnhealthyInstancePercent": {
                  "description": "MaxUnhealthyInstancePercent: The maximum percentage of the total virtual machine instances in the scale set that can be\nsimultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual\nmachine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch.\nThe default value for this parameter is 20%.",
                  "maximum": 100,
                  "minimum": 5,
                  "type": "integer"
                },
                "maxUnhealthyUpgradedInstancePercent": {
                  "description": "MaxUnhealthyUpgradedInstancePercent: The maximum percentage of upgraded virtual machine instances that can be found to\nbe in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the\nrolling update aborts. The default value for this parameter is 20%.",
                  "maximum": 100,
                  "minimum": 0,
                  "type": "integer"
                },
                "pauseTimeBetweenBatches": {
                  "description": "PauseTimeBetweenBatches: The wait time between completing the update for all virtual machines in one batch and starting\nthe next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S).",
                  "type": "string"
                },
                "prioritizeUnhealthyInstances": {
                  "description": "PrioritizeUnhealthyInstances: Upgrade all unhealthy instances in a scale set before any healthy instances.",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "virtualMachineProfile": {
          "description": "VirtualMachineProfile: The virtual machine profile.",
          "properties": {
            "billingProfile": {
              "description": "BillingProfile: Specifies the billing related details of a Azure Spot VMSS.\nMinimum api-version: 2019-03-01.",
              "properties": {
                "maxPrice": {
                  "description": "MaxPrice: Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars.\nThis price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time\nof create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current\nAzure Spot price.\nThe maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the\nmaxPrice after creation of VM/VMSS.\nPossible values are:\n- Any decimal value greater than zero. Example: 0.01538\n-1 \u2013 indicates default price to be up-to on-demand.\nYou can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also,\nthe default max price is -1 if it is not provided by you.\nMinimum api-version: 2019-03-01.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "diagnosticsProfile": {
              "description": "DiagnosticsProfile: Specifies the boot diagnostic settings state.\nMinimum api-version: 2015-06-15.",
              "properties": {
                "bootDiagnostics": {
                  "description": "BootDiagnostics: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to\ndiagnose VM status.\nYou can easily view the output of your console log.\nAzure also enables you to see a screenshot of the VM from the hypervisor.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: Whether boot diagnostics should be enabled on the Virtual Machine.",
                      "type": "boolean"
                    },
                    "storageUri": {
                      "description": "StorageUri: Uri of the storage account to use for placing the console output and screenshot.\nIf storageUri is not specified while enabling boot diagnostics, managed storage will be used.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "evictionPolicy": {
              "description": "EvictionPolicy: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set.\nFor Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01.\nFor Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is\n2017-10-30-preview.",
              "enum": [
                "Deallocate",
                "Delete"
              ],
              "type": "string"
            },
            "extensionProfile": {
              "description": "ExtensionProfile: Specifies a collection of settings for extensions installed on virtual machines in the scale set.",
              "properties": {
                "extensions": {
                  "description": "Extensions: The virtual machine scale set child extension resources.",
                  "items": {
                    "description": "Describes a Virtual Machine Scale Set Extension.",
                    "properties": {
                      "autoUpgradeMinorVersion": {
                        "description": "AutoUpgradeMinorVersion: Indicates whether the extension should use a newer minor version if one is available at\ndeployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this\nproperty set to true.",
                        "type": "boolean"
                      },
                      "enableAutomaticUpgrade": {
                        "description": "EnableAutomaticUpgrade: Indicates whether the extension should be automatically upgraded by the platform if there is a\nnewer version of the extension available.",
                        "type": "boolean"
                      },
                      "forceUpdateTag": {
                        "description": "ForceUpdateTag: If a value is provided and is different from the previous value, the extension handler will be forced to\nupdate even if the extension configuration has not changed.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name: The name of the extension.",
                        "type": "string"
                      },
                      "protectedSettings": {
                        "description": "ProtectedSettings: The extension can contain either protectedSettings or protectedSettingsFromKeyVault or no protected\nsettings at all.",
                        "properties": {
                          "name": {
                            "description": "Name is the name of the Kubernetes secret being referenced.\nThe secret must be in the same namespace as the resource",
                            "type": "string"
                          }
                        },
                        "required": [
                          "name"
                        ],
                        "type": "object",
                        "additionalProperties": false
                      },
                      "provisionAfterExtensions": {
                        "description": "ProvisionAfterExtensions: Collection of extension names after which this extension needs to be provisioned.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "publisher": {
                        "description": "Publisher: The name of the extension handler publisher.",
                        "type": "string"
                      },
                      "settings": {
                        "additionalProperties": {
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "description": "Settings: Json formatted public settings for the extension.",
                        "type": "object"
                      },
                      "type": {
                        "description": "Type: Specifies the type of the extension; an example is \"CustomScriptExtension\".",
                        "type": "string"
                      },
                      "typeHandlerVersion": {
                        "description": "TypeHandlerVersion: Specifies the version of the script handler.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "extensionsTimeBudget": {
                  "description": "ExtensionsTimeBudget: Specifies the time alloted for all extensions to start. The time duration should be between 15\nminutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes\n(PT1H30M).\nMinimum api-version: 2020-06-01",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "licenseType": {
              "description": "LicenseType: Specifies that the image or disk that is being used was licensed on-premises.\nPossible values for Windows Server operating system are:\nWindows_Client\nWindows_Server\nPossible values for Linux Server operating system are:\nRHEL_BYOS (for RHEL)\nSLES_BYOS (for SUSE)\nFor more information, see [Azure Hybrid Use Benefit for Windows\nServer](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)\n[Azure Hybrid Use Benefit for Linux\nServer](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)\nMinimum api-version: 2015-06-15",
              "type": "string"
            },
            "networkProfile": {
              "description": "NetworkProfile: Specifies properties of the network interfaces of the virtual machines in the scale set.",
              "properties": {
                "healthProbe": {
                  "description": "HealthProbe: A reference to a load balancer probe used to determine the health of an instance in the virtual machine\nscale set. The reference will be in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.",
                  "properties": {
                    "reference": {
                      "description": "Reference: The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...",
                      "properties": {
                        "armId": {
                          "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                          "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                          "type": "string"
                        },
                        "group": {
                          "description": "Group is the Kubernetes group of the resource.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the Kubernetes kind of the resource.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the Kubernetes name of the resource.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "networkInterfaceConfigurations": {
                  "description": "NetworkInterfaceConfigurations: The list of network configurations.",
                  "items": {
                    "description": "Describes a virtual machine scale set network profile's network configurations.",
                    "properties": {
                      "dnsSettings": {
                        "description": "DnsSettings: The dns settings to be applied on the network interfaces.",
                        "properties": {
                          "dnsServers": {
                            "description": "DnsServers: List of DNS servers IP addresses",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "enableAcceleratedNetworking": {
                        "description": "EnableAcceleratedNetworking: Specifies whether the network interface is accelerated networking-enabled.",
                        "type": "boolean"
                      },
                      "enableFpga": {
                        "description": "EnableFpga: Specifies whether the network interface is FPGA networking-enabled.",
                        "type": "boolean"
                      },
                      "enableIPForwarding": {
                        "description": "EnableIPForwarding: Whether IP forwarding enabled on this NIC.",
                        "type": "boolean"
                      },
                      "ipConfigurations": {
                        "description": "IpConfigurations: Specifies the IP configurations of the network interface.",
                        "items": {
                          "description": "Describes a virtual machine scale set network profile's IP configuration.",
                          "properties": {
                            "applicationGatewayBackendAddressPools": {
                              "description": "ApplicationGatewayBackendAddressPools: Specifies an array of references to backend address pools of application\ngateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot\nuse the same application gateway.",
                              "items": {
                                "properties": {
                                  "reference": {
                                    "description": "Reference: Resource Id",
                                    "properties": {
                                      "armId": {
                                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                                        "type": "string"
                                      },
                                      "group": {
                                        "description": "Group is the Kubernetes group of the resource.",
                                        "type": "string"
                                      },
                                      "kind": {
                                        "description": "Kind is the Kubernetes kind of the resource.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name is the Kubernetes name of the resource.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "applicationSecurityGroups": {
                              "description": "ApplicationSecurityGroups: Specifies an array of references to application security group.",
                              "items": {
                                "properties": {
                                  "reference": {
                                    "description": "Reference: Resource Id",
                                    "properties": {
                                      "armId": {
                                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                                        "type": "string"
                                      },
                                      "group": {
                                        "description": "Group is the Kubernetes group of the resource.",
                                        "type": "string"
                                      },
                                      "kind": {
                                        "description": "Kind is the Kubernetes kind of the resource.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name is the Kubernetes name of the resource.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "loadBalancerBackendAddressPools": {
                              "description": "LoadBalancerBackendAddressPools: Specifies an array of references to backend address pools of load balancers. A scale\nset can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the\nsame basic sku load balancer.",
                              "items": {
                                "properties": {
                                  "reference": {
                                    "description": "Reference: Resource Id",
                                    "properties": {
                                      "armId": {
                                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                                        "type": "string"
                                      },
                                      "group": {
                                        "description": "Group is the Kubernetes group of the resource.",
                                        "type": "string"
                                      },
                                      "kind": {
                                        "description": "Kind is the Kubernetes kind of the resource.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name is the Kubernetes name of the resource.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "loadBalancerInboundNatPools": {
                              "description": "LoadBalancerInboundNatPools: Specifies an array of references to inbound Nat pools of the load balancers. A scale set\ncan reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same\nbasic sku load balancer.",
                              "items": {
                                "properties": {
                                  "reference": {
                                    "description": "Reference: Resource Id",
                                    "properties": {
                                      "armId": {
                                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                                        "type": "string"
                                      },
                                      "group": {
                                        "description": "Group is the Kubernetes group of the resource.",
                                        "type": "string"
                                      },
                                      "kind": {
                                        "description": "Kind is the Kubernetes kind of the resource.",
                                        "type": "string"
                                      },
                                      "name": {
                                        "description": "Name is the Kubernetes name of the resource.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "Name: The IP configuration name.",
                              "type": "string"
                            },
                            "primary": {
                              "description": "Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.",
                              "type": "boolean"
                            },
                            "privateIPAddressVersion": {
                              "description": "PrivateIPAddressVersion: Available from Api-Version 2017-03-30 onwards, it represents whether the specific\nipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.",
                              "enum": [
                                "IPv4",
                                "IPv6"
                              ],
                              "type": "string"
                            },
                            "publicIPAddressConfiguration": {
                              "description": "PublicIPAddressConfiguration: The publicIPAddressConfiguration.",
                              "properties": {
                                "dnsSettings": {
                                  "description": "DnsSettings: The dns settings to be applied on the publicIP addresses .",
                                  "properties": {
                                    "domainNameLabel": {
                                      "description": "DomainNameLabel: The Domain name label.The concatenation of the domain name label and vm index will be the domain name\nlabels of the PublicIPAddress resources that will be created",
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "domainNameLabel"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "idleTimeoutInMinutes": {
                                  "description": "IdleTimeoutInMinutes: The idle timeout of the public IP address.",
                                  "type": "integer"
                                },
                                "ipTags": {
                                  "description": "IpTags: The list of IP tags associated with the public IP address.",
                                  "items": {
                                    "description": "Contains the IP tag associated with the public IP address.",
                                    "properties": {
                                      "ipTagType": {
                                        "description": "IpTagType: IP tag type. Example: FirstPartyUsage.",
                                        "type": "string"
                                      },
                                      "tag": {
                                        "description": "Tag: IP tag associated with the public IP. Example: SQL, Storage etc.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "name": {
                                  "description": "Name: The publicIP address configuration name.",
                                  "type": "string"
                                },
                                "publicIPAddressVersion": {
                                  "description": "PublicIPAddressVersion: Available from Api-Version 2019-07-01 onwards, it represents whether the specific\nipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'.",
                                  "enum": [
                                    "IPv4",
                                    "IPv6"
                                  ],
                                  "type": "string"
                                },
                                "publicIPPrefix": {
                                  "description": "PublicIPPrefix: The PublicIPPrefix from which to allocate publicIP addresses.",
                                  "properties": {
                                    "reference": {
                                      "description": "Reference: Resource Id",
                                      "properties": {
                                        "armId": {
                                          "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                                          "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                                          "type": "string"
                                        },
                                        "group": {
                                          "description": "Group is the Kubernetes group of the resource.",
                                          "type": "string"
                                        },
                                        "kind": {
                                          "description": "Kind is the Kubernetes kind of the resource.",
                                          "type": "string"
                                        },
                                        "name": {
                                          "description": "Name is the Kubernetes name of the resource.",
                                          "type": "string"
                                        }
                                      },
                                      "type": "object",
                                      "additionalProperties": false
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                }
                              },
                              "required": [
                                "name"
                              ],
                              "type": "object",
                              "additionalProperties": false
                            },
                            "reference": {
                              "description": "Reference: Resource Id",
                              "properties": {
                                "armId": {
                                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                                  "type": "string"
                                },
                                "group": {
                                  "description": "Group is the Kubernetes group of the resource.",
                                  "type": "string"
                                },
                                "kind": {
                                  "description": "Kind is the Kubernetes kind of the resource.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name is the Kubernetes name of the resource.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "subnet": {
                              "description": "Subnet: Specifies the identifier of the subnet.",
                              "properties": {
                                "reference": {
                                  "description": "Reference: The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...",
                                  "properties": {
                                    "armId": {
                                      "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                                      "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                                      "type": "string"
                                    },
                                    "group": {
                                      "description": "Group is the Kubernetes group of the resource.",
                                      "type": "string"
                                    },
                                    "kind": {
                                      "description": "Kind is the Kubernetes kind of the resource.",
                                      "type": "string"
                                    },
                                    "name": {
                                      "description": "Name is the Kubernetes name of the resource.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "required": [
                            "name"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "type": "array"
                      },
                      "name": {
                        "description": "Name: The network configuration name.",
                        "type": "string"
                      },
                      "networkSecurityGroup": {
                        "description": "NetworkSecurityGroup: The network security group.",
                        "properties": {
                          "reference": {
                            "description": "Reference: Resource Id",
                            "properties": {
                              "armId": {
                                "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                                "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                                "type": "string"
                              },
                              "group": {
                                "description": "Group is the Kubernetes group of the resource.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind is the Kubernetes kind of the resource.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name is the Kubernetes name of the resource.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "primary": {
                        "description": "Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.",
                        "type": "boolean"
                      },
                      "reference": {
                        "description": "Reference: Resource Id",
                        "properties": {
                          "armId": {
                            "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                            "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                            "type": "string"
                          },
                          "group": {
                            "description": "Group is the Kubernetes group of the resource.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind is the Kubernetes kind of the resource.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name is the Kubernetes name of the resource.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "required": [
                      "ipConfigurations",
                      "name"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "osProfile": {
              "description": "OsProfile: Specifies the operating system settings for the virtual machines in the scale set.",
              "properties": {
                "adminPassword": {
                  "description": "AdminPassword: Specifies the password of the administrator account.\nMinimum-length (Windows): 8 characters\nMinimum-length (Linux): 6 characters\nMax-length (Windows): 123 characters\nMax-length (Linux): 72 characters\nComplexity requirements: 3 out of 4 conditions below need to be fulfilled\nHas lower characters\nHas upper characters\nHas a digit\nHas a special character (Regex match [\\W_])\nDisallowed values: \"abc@123\", \"P@$$w0rd\", \"P@ssw0rd\", \"P@ssword123\", \"Pa$$word\", \"pass@word1\", \"Password!\", \"Password1\",\n\"Password22\", \"iloveyou!\"\nFor resetting the password, see [How to reset the Remote Desktop service or its login password in a Windows\nVM](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-reset-rdp?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json)\nFor resetting root password, see [Manage users, SSH, and check or repair disks on Azure Linux VMs using the VMAccess\nExtension](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-vmaccess-extension?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json#reset-root-password)",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret being referenced.\nThe secret must be in the same namespace as the resource",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "adminUsername": {
                  "description": "AdminUsername: Specifies the name of the administrator account.\nWindows-only restriction: Cannot end in \".\"\nDisallowed values: \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\",\n\"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\",\n\"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\".\nMinimum-length (Linux): 1  character\nMax-length (Linux): 64 characters\nMax-length (Windows): 20 characters\n<li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in\nAzure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)\n<li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for\nLinux on\nAzure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)",
                  "type": "string"
                },
                "computerNamePrefix": {
                  "description": "ComputerNamePrefix: Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name\nprefixes must be 1 to 15 characters long.",
                  "type": "string"
                },
                "customData": {
                  "description": "CustomData: Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array\nthat is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes.\nFor using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during\ncreation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)",
                  "type": "string"
                },
                "linuxConfiguration": {
                  "description": "LinuxConfiguration: Specifies the Linux operating system settings on the virtual machine.\nFor a list of supported Linux distributions, see [Linux on Azure-Endorsed\nDistributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)\nFor running non-endorsed distributions, see [Information for Non-Endorsed\nDistributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).",
                  "properties": {
                    "disablePasswordAuthentication": {
                      "description": "DisablePasswordAuthentication: Specifies whether password authentication should be disabled.",
                      "type": "boolean"
                    },
                    "patchSettings": {
                      "description": "PatchSettings: [Preview Feature] Specifies settings related to VM Guest Patching on Linux.",
                      "properties": {
                        "patchMode": {
                          "description": "PatchMode: Specifies the mode of VM Guest Patching to IaaS virtual machine.\nPossible values are:\nImageDefault - The virtual machine's default patching configuration is used.\nAutomaticByPlatform - The virtual machine will be automatically updated by the platform. The property provisionVMAgent\nmust be true",
                          "enum": [
                            "AutomaticByPlatform",
                            "ImageDefault"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "provisionVMAgent": {
                      "description": "ProvisionVMAgent: Indicates whether virtual machine agent should be provisioned on the virtual machine.\nWhen this property is not specified in the request body, default behavior is to set it to true.  This will ensure that\nVM Agent is installed on the VM so that extensions can be added to the VM later.",
                      "type": "boolean"
                    },
                    "ssh": {
                      "description": "Ssh: Specifies the ssh key configuration for a Linux OS.",
                      "properties": {
                        "publicKeys": {
                          "description": "PublicKeys: The list of SSH public keys used to authenticate with linux based VMs.",
                          "items": {
                            "description": "Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.",
                            "properties": {
                              "keyData": {
                                "description": "KeyData: SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit\nand in ssh-rsa format.\nFor creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in\nAzure](https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).",
                                "type": "string"
                              },
                              "path": {
                                "description": "Path: Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the\nspecified key is appended to the file. Example: /home/user/.ssh/authorized_keys",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "secrets": {
                  "description": "Secrets: Specifies set of certificates that should be installed onto the virtual machines in the scale set.",
                  "items": {
                    "description": "Describes a set of certificates which are all in the same Key Vault.",
                    "properties": {
                      "sourceVault": {
                        "description": "SourceVault: The relative URL of the Key Vault containing all of the certificates in VaultCertificates.",
                        "properties": {
                          "reference": {
                            "description": "Reference: Resource Id",
                            "properties": {
                              "armId": {
                                "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                                "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                                "type": "string"
                              },
                              "group": {
                                "description": "Group is the Kubernetes group of the resource.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind is the Kubernetes kind of the resource.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name is the Kubernetes name of the resource.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "vaultCertificates": {
                        "description": "VaultCertificates: The list of key vault references in SourceVault which contain certificates.",
                        "items": {
                          "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.",
                          "properties": {
                            "certificateStore": {
                              "description": "CertificateStore: For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate\nshould be added. The specified certificate store is implicitly in the LocalMachine account.\nFor Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name\n&lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both\nof these files are .pem formatted.",
                              "type": "string"
                            },
                            "certificateUrl": {
                              "description": "CertificateUrl: This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to\nthe Key Vault, see [Add a key or secret to the key\nvault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to\nbe It is the Base64 encoding of the following JSON Object which is encoded in UTF-8:\n{\n\"data\":\"<Base64-encoded-certificate>\",\n\"dataType\":\"pfx\",\n\"password\":\"<pfx-file-password>\"\n}",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "type": "array"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "windowsConfiguration": {
                  "description": "WindowsConfiguration: Specifies Windows operating system settings on the virtual machine.",
                  "properties": {
                    "additionalUnattendContent": {
                      "description": "AdditionalUnattendContent: Specifies additional base-64 encoded XML formatted information that can be included in the\nUnattend.xml file, which is used by Windows Setup.",
                      "items": {
                        "description": "Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows\nSetup. Contents are defined by setting name, component name, and the pass in which the content is applied.",
                        "properties": {
                          "componentName": {
                            "description": "ComponentName: The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.",
                            "enum": [
                              "Microsoft-Windows-Shell-Setup"
                            ],
                            "type": "string"
                          },
                          "content": {
                            "description": "Content: Specifies the XML formatted content that is added to the unattend.xml file for the specified path and\ncomponent. The XML must be less than 4KB and must include the root element for the setting or feature that is being\ninserted.",
                            "type": "string"
                          },
                          "passName": {
                            "description": "PassName: The pass name. Currently, the only allowable value is OobeSystem.",
                            "enum": [
                              "OobeSystem"
                            ],
                            "type": "string"
                          },
                          "settingName": {
                            "description": "SettingName: Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and\nAutoLogon.",
                            "enum": [
                              "AutoLogon",
                              "FirstLogonCommands"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "enableAutomaticUpdates": {
                      "description": "EnableAutomaticUpdates: Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is\ntrue.\nFor virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.",
                      "type": "boolean"
                    },
                    "patchSettings": {
                      "description": "PatchSettings: [Preview Feature] Specifies settings related to VM Guest Patching on Windows.",
                      "properties": {
                        "enableHotpatching": {
                          "description": "EnableHotpatching: Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the\n'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'.",
                          "type": "boolean"
                        },
                        "patchMode": {
                          "description": "PatchMode: Specifies the mode of VM Guest Patching to IaaS virtual machine.\nPossible values are:\nManual - You  control the application of patches to a virtual machine. You do this by applying patches manually inside\nthe VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be\nfalse\nAutomaticByOS - The virtual machine will automatically be updated by the OS. The property\nWindowsConfiguration.enableAutomaticUpdates must be true.\nAutomaticByPlatform - the virtual machine will automatically updated by the platform. The properties provisionVMAgent\nand WindowsConfiguration.enableAutomaticUpdates must be true",
                          "enum": [
                            "AutomaticByOS",
                            "AutomaticByPlatform",
                            "Manual"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "provisionVMAgent": {
                      "description": "ProvisionVMAgent: Indicates whether virtual machine agent should be provisioned on the virtual machine.\nWhen this property is not specified in the request body, default behavior is to set it to true.  This will ensure that\nVM Agent is installed on the VM so that extensions can be added to the VM later.",
                      "type": "boolean"
                    },
                    "timeZone": {
                      "description": "TimeZone: Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\".\nPossible values can be\n[TimeZoneInfo.Id](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from\ntime zones returned by\n[TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.getsystemtimezones).",
                      "type": "string"
                    },
                    "winRM": {
                      "description": "WinRM: Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.",
                      "properties": {
                        "listeners": {
                          "description": "Listeners: The list of Windows Remote Management listeners",
                          "items": {
                            "description": "Describes Protocol and thumbprint of Windows Remote Management listener",
                            "properties": {
                              "certificateUrl": {
                                "description": "CertificateUrl: This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to\nthe Key Vault, see [Add a key or secret to the key\nvault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to\nbe It is the Base64 encoding of the following JSON Object which is encoded in UTF-8:\n{\n\"data\":\"<Base64-encoded-certificate>\",\n\"dataType\":\"pfx\",\n\"password\":\"<pfx-file-password>\"\n}",
                                "type": "string"
                              },
                              "protocol": {
                                "description": "Protocol: Specifies the protocol of WinRM listener.\nPossible values are:\nhttp\nhttps",
                                "enum": [
                                  "Http",
                                  "Https"
                                ],
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "priority": {
              "description": "Priority: Specifies the priority for the virtual machines in the scale set.\nMinimum api-version: 2017-10-30-preview",
              "enum": [
                "Low",
                "Regular",
                "Spot"
              ],
              "type": "string"
            },
            "scheduledEventsProfile": {
              "description": "ScheduledEventsProfile: Specifies Scheduled Event related configurations.",
              "properties": {
                "terminateNotificationProfile": {
                  "description": "TerminateNotificationProfile: Specifies Terminate Scheduled Event related configurations.",
                  "properties": {
                    "enable": {
                      "description": "Enable: Specifies whether the Terminate Scheduled event is enabled or disabled.",
                      "type": "boolean"
                    },
                    "notBeforeTimeout": {
                      "description": "NotBeforeTimeout: Configurable length of time a Virtual Machine being deleted will have to potentially approve the\nTerminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601\nformat, the default value is 5 minutes (PT5M)",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "securityProfile": {
              "description": "SecurityProfile: Specifies the Security related profile settings for the virtual machines in the scale set.",
              "properties": {
                "encryptionAtHost": {
                  "description": "EncryptionAtHost: This property can be used by user in the request to enable or disable the Host Encryption for the\nvirtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp\ndisk at host itself.\nDefault: The Encryption at host will be disabled unless this property is set to true for the resource.",
                  "type": "boolean"
                },
                "securityType": {
                  "description": "SecurityType: Specifies the SecurityType of the virtual machine. It is set as TrustedLaunch to enable UefiSettings.\nDefault: UefiSettings will not be enabled unless this property is set as TrustedLaunch.",
                  "enum": [
                    "TrustedLaunch"
                  ],
                  "type": "string"
                },
                "uefiSettings": {
                  "description": "UefiSettings: Specifies the security settings like secure boot and vTPM used while creating the virtual machine.\nMinimum api-version: 2020-12-01",
                  "properties": {
                    "secureBootEnabled": {
                      "description": "SecureBootEnabled: Specifies whether secure boot should be enabled on the virtual machine.\nMinimum api-version: 2020-12-01",
                      "type": "boolean"
                    },
                    "vTpmEnabled": {
                      "description": "VTpmEnabled: Specifies whether vTPM should be enabled on the virtual machine.\nMinimum api-version: 2020-12-01",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "storageProfile": {
              "description": "StorageProfile: Specifies the storage settings for the virtual machine disks.",
              "properties": {
                "dataDisks": {
                  "description": "DataDisks: Specifies the parameters that are used to add data disks to the virtual machines in the scale set.\nFor more information about disks, see [About disks and VHDs for Azure virtual\nmachines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).",
                  "items": {
                    "description": "Describes a virtual machine scale set data disk.",
                    "properties": {
                      "caching": {
                        "description": "Caching: Specifies the caching requirements.\nPossible values are:\nNone\nReadOnly\nReadWrite\nDefault: None for Standard storage. ReadOnly for Premium storage",
                        "enum": [
                          "None",
                          "ReadOnly",
                          "ReadWrite"
                        ],
                        "type": "string"
                      },
                      "createOption": {
                        "description": "CreateOption: The create option.",
                        "enum": [
                          "Attach",
                          "Empty",
                          "FromImage"
                        ],
                        "type": "string"
                      },
                      "diskIOPSReadWrite": {
                        "description": "DiskIOPSReadWrite: Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is\nUltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.",
                        "type": "integer"
                      },
                      "diskMBpsReadWrite": {
                        "description": "DiskMBpsReadWrite: Specifies the bandwidth in MB per second for the managed disk. Should be used only when\nStorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.",
                        "type": "integer"
                      },
                      "diskSizeGB": {
                        "description": "DiskSizeGB: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the\ndisk in a virtual machine image.\nThis value cannot be larger than 1023 GB",
                        "type": "integer"
                      },
                      "lun": {
                        "description": "Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and\ntherefore must be unique for each data disk attached to a VM.",
                        "type": "integer"
                      },
                      "managedDisk": {
                        "description": "ManagedDisk: The managed disk parameters.",
                        "properties": {
                          "diskEncryptionSet": {
                            "description": "DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed disk.",
                            "properties": {
                              "reference": {
                                "description": "Reference: Resource Id",
                                "properties": {
                                  "armId": {
                                    "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                                    "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                                    "type": "string"
                                  },
                                  "group": {
                                    "description": "Group is the Kubernetes group of the resource.",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "Kind is the Kubernetes kind of the resource.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name is the Kubernetes name of the resource.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "storageAccountType": {
                            "description": "StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with\ndata disks, it cannot be used with OS Disk.",
                            "enum": [
                              "Premium_LRS",
                              "Premium_ZRS",
                              "StandardSSD_LRS",
                              "StandardSSD_ZRS",
                              "Standard_LRS",
                              "UltraSSD_LRS"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name: The disk name.",
                        "type": "string"
                      },
                      "writeAcceleratorEnabled": {
                        "description": "WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.",
                        "type": "boolean"
                      }
                    },
                    "required": [
                      "createOption",
                      "lun"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "imageReference": {
                  "description": "ImageReference: Specifies information about the image to use. You can specify information about platform images,\nmarketplace images, or virtual machine images. This element is required when you want to use a platform image,\nmarketplace image, or virtual machine image, but is not used in other creation operations.",
                  "properties": {
                    "offer": {
                      "description": "Offer: Specifies the offer of the platform image or marketplace image used to create the virtual machine.",
                      "type": "string"
                    },
                    "publisher": {
                      "description": "Publisher: The image publisher.",
                      "type": "string"
                    },
                    "reference": {
                      "description": "Reference: Resource Id",
                      "properties": {
                        "armId": {
                          "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                          "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                          "type": "string"
                        },
                        "group": {
                          "description": "Group is the Kubernetes group of the resource.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the Kubernetes kind of the resource.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the Kubernetes name of the resource.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "sku": {
                      "description": "Sku: The image SKU.",
                      "type": "string"
                    },
                    "version": {
                      "description": "Version: Specifies the version of the platform image or marketplace image used to create the virtual machine. The\nallowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use\nthe latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically\nupdate after deploy time even if a new version becomes available.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "osDisk": {
                  "description": "OsDisk: Specifies information about the operating system disk used by the virtual machines in the scale set.\nFor more information about disks, see [About disks and VHDs for Azure virtual\nmachines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).",
                  "properties": {
                    "caching": {
                      "description": "Caching: Specifies the caching requirements.\nPossible values are:\nNone\nReadOnly\nReadWrite\nDefault: None for Standard storage. ReadOnly for Premium storage",
                      "enum": [
                        "None",
                        "ReadOnly",
                        "ReadWrite"
                      ],
                      "type": "string"
                    },
                    "createOption": {
                      "description": "CreateOption: Specifies how the virtual machines in the scale set should be created.\nThe only allowed value is: FromImage \\u2013 This value is used when you are using an image to create the virtual\nmachine. If you are using a platform image, you also use the imageReference element described above. If you are using a\nmarketplace image, you  also use the plan element previously described.",
                      "enum": [
                        "Attach",
                        "Empty",
                        "FromImage"
                      ],
                      "type": "string"
                    },
                    "diffDiskSettings": {
                      "description": "DiffDiskSettings: Specifies the ephemeral disk Settings for the operating system disk used by the virtual machine scale\nset.",
                      "properties": {
                        "option": {
                          "description": "Option: Specifies the ephemeral disk settings for operating system disk.",
                          "enum": [
                            "Local"
                          ],
                          "type": "string"
                        },
                        "placement": {
                          "description": "Placement: Specifies the ephemeral disk placement for operating system disk.\nPossible values are:\nCacheDisk\nResourceDisk\nDefault: CacheDisk if one is configured for the VM size otherwise ResourceDisk is used.\nRefer to VM size documentation for Windows VM at https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes\nand Linux VM at https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes to check which VM sizes exposes a\ncache disk.",
                          "enum": [
                            "CacheDisk",
                            "ResourceDisk"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "diskSizeGB": {
                      "description": "DiskSizeGB: Specifies the size of the operating system disk in gigabytes. This element can be used to overwrite the size\nof the disk in a virtual machine image.\nThis value cannot be larger than 1023 GB",
                      "type": "integer"
                    },
                    "image": {
                      "description": "Image: Specifies information about the unmanaged user image to base the scale set on.",
                      "properties": {
                        "uri": {
                          "description": "Uri: Specifies the virtual hard disk's uri.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "managedDisk": {
                      "description": "ManagedDisk: The managed disk parameters.",
                      "properties": {
                        "diskEncryptionSet": {
                          "description": "DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed disk.",
                          "properties": {
                            "reference": {
                              "description": "Reference: Resource Id",
                              "properties": {
                                "armId": {
                                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                                  "type": "string"
                                },
                                "group": {
                                  "description": "Group is the Kubernetes group of the resource.",
                                  "type": "string"
                                },
                                "kind": {
                                  "description": "Kind is the Kubernetes kind of the resource.",
                                  "type": "string"
                                },
                                "name": {
                                  "description": "Name is the Kubernetes name of the resource.",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "storageAccountType": {
                          "description": "StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with\ndata disks, it cannot be used with OS Disk.",
                          "enum": [
                            "Premium_LRS",
                            "Premium_ZRS",
                            "StandardSSD_LRS",
                            "StandardSSD_ZRS",
                            "Standard_LRS",
                            "UltraSSD_LRS"
                          ],
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "name": {
                      "description": "Name: The disk name.",
                      "type": "string"
                    },
                    "osType": {
                      "description": "OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from\nuser-image or a specialized VHD.\nPossible values are:\nWindows\nLinux",
                      "enum": [
                        "Linux",
                        "Windows"
                      ],
                      "type": "string"
                    },
                    "vhdContainers": {
                      "description": "VhdContainers: Specifies the container urls that are used to store operating system disks for the scale set.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "writeAcceleratorEnabled": {
                      "description": "WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.",
                      "type": "boolean"
                    }
                  },
                  "required": [
                    "createOption"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "zoneBalance": {
          "description": "ZoneBalance: Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.",
          "type": "boolean"
        },
        "zones": {
          "description": "Zones: The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "location",
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "Describes a Virtual Machine Scale Set.",
      "properties": {
        "additionalCapabilities": {
          "description": "AdditionalCapabilities: Specifies additional capabilities enabled or disabled on the Virtual Machines in the Virtual\nMachine Scale Set. For instance: whether the Virtual Machines have the capability to support attaching managed data\ndisks with UltraSSD_LRS storage account type.",
          "properties": {
            "ultraSSDEnabled": {
              "description": "UltraSSDEnabled: The flag that enables or disables a capability to have one or more managed data disks with UltraSSD_LRS\nstorage account type on the VM or VMSS. Managed disks with storage account type UltraSSD_LRS can be added to a virtual\nmachine or virtual machine scale set only if this property is enabled.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "automaticRepairsPolicy": {
          "description": "AutomaticRepairsPolicy: Policy for automatic repairs.",
          "properties": {
            "enabled": {
              "description": "Enabled: Specifies whether automatic repairs should be enabled on the virtual machine scale set. The default value is\nfalse.",
              "type": "boolean"
            },
            "gracePeriod": {
              "description": "GracePeriod: The amount of time for which automatic repairs are suspended due to a state change on VM. The grace time\nstarts after the state change has completed. This helps avoid premature or accidental repairs. The time duration should\nbe specified in ISO 8601 format. The minimum allowed grace period is 30 minutes (PT30M), which is also the default\nvalue. The maximum allowed grace period is 90 minutes (PT90M).",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "doNotRunExtensionsOnOverprovisionedVMs": {
          "description": "DoNotRunExtensionsOnOverprovisionedVMs: When Overprovision is enabled, extensions are launched only on the requested\nnumber of VMs which are finally kept. This property will hence ensure that the extensions do not run on the extra\noverprovisioned VMs.",
          "type": "boolean"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: The extended location of the Virtual Machine Scale Set.",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "hostGroup": {
          "description": "HostGroup: Specifies information about the dedicated host group that the virtual machine scale set resides in.\nMinimum api-version: 2020-06-01.",
          "properties": {
            "id": {
              "description": "Id: Resource Id",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "id": {
          "description": "Id: Resource Id",
          "type": "string"
        },
        "identity": {
          "description": "Identity: The identity of the virtual machine scale set, if configured.",
          "properties": {
            "principalId": {
              "description": "PrincipalId: The principal id of virtual machine scale set identity. This property will only be provided for a system\nassigned identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "TenantId: The tenant id associated with the virtual machine scale set. This property will only be provided for a system\nassigned identity.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of identity used for the virtual machine scale set. The type 'SystemAssigned, UserAssigned' includes both\nan implicitly created identity and a set of user assigned identities. The type 'None' will remove any identities from\nthe virtual machine scale set.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "additionalProperties": {
                "properties": {
                  "clientId": {
                    "description": "ClientId: The client id of user assigned identity.",
                    "type": "string"
                  },
                  "principalId": {
                    "description": "PrincipalId: The principal id of user assigned identity.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "description": "UserAssignedIdentities: The list of user identities associated with the virtual machine scale set. The user identity\ndictionary key references will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "location": {
          "description": "Location: Resource location",
          "type": "string"
        },
        "name": {
          "description": "Name: Resource name",
          "type": "string"
        },
        "orchestrationMode": {
          "description": "OrchestrationMode: Specifies the orchestration mode for the virtual machine scale set.",
          "type": "string"
        },
        "overprovision": {
          "description": "Overprovision: Specifies whether the Virtual Machine Scale Set should be overprovisioned.",
          "type": "boolean"
        },
        "plan": {
          "description": "Plan: Specifies information about the marketplace image used to create the virtual machine. This element is only used\nfor marketplace images. Before you can use a marketplace image from an API, you must enable the image for programmatic\nuse.  In the Azure portal, find the marketplace image that you want to use and then click Want to deploy\nprogrammatically, Get Started ->. Enter any required information and then click Save.",
          "properties": {
            "name": {
              "description": "Name: The plan ID.",
              "type": "string"
            },
            "product": {
              "description": "Product: Specifies the product of the image from the marketplace. This is the same value as Offer under the\nimageReference element.",
              "type": "string"
            },
            "promotionCode": {
              "description": "PromotionCode: The promotion code.",
              "type": "string"
            },
            "publisher": {
              "description": "Publisher: The publisher ID.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "platformFaultDomainCount": {
          "description": "PlatformFaultDomainCount: Fault Domain count for each placement group.",
          "type": "integer"
        },
        "provisioningState": {
          "description": "ProvisioningState: The provisioning state, which only appears in the response.",
          "type": "string"
        },
        "proximityPlacementGroup": {
          "description": "ProximityPlacementGroup: Specifies information about the proximity placement group that the virtual machine scale set\nshould be assigned to.\nMinimum api-version: 2018-04-01.",
          "properties": {
            "id": {
              "description": "Id: Resource Id",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "scaleInPolicy": {
          "description": "ScaleInPolicy: Specifies the scale-in policy that decides which virtual machines are chosen for removal when a Virtual\nMachine Scale Set is scaled-in.",
          "properties": {
            "rules": {
              "description": "Rules: The rules to be followed when scaling-in a virtual machine scale set.\nPossible values are:\nDefault When a virtual machine scale set is scaled in, the scale set will first be balanced across zones if it is a\nzonal scale set. Then, it will be balanced across Fault Domains as far as possible. Within each Fault Domain, the\nvirtual machines chosen for removal will be the newest ones that are not protected from scale-in.\nOldestVM When a virtual machine scale set is being scaled-in, the oldest virtual machines that are not protected from\nscale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across\nzones. Within each zone, the oldest virtual machines that are not protected will be chosen for removal.\nNewestVM When a virtual machine scale set is being scaled-in, the newest virtual machines that are not protected from\nscale-in will be chosen for removal. For zonal virtual machine scale sets, the scale set will first be balanced across\nzones. Within each zone, the newest virtual machines that are not protected will be chosen for removal.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "singlePlacementGroup": {
          "description": "SinglePlacementGroup: When true this limits the scale set to a single placement group, of max size 100 virtual machines.\nNOTE: If singlePlacementGroup is true, it may be modified to false. However, if singlePlacementGroup is false, it may\nnot be modified to true.",
          "type": "boolean"
        },
        "sku": {
          "description": "Sku: The virtual machine scale set sku.",
          "properties": {
            "capacity": {
              "description": "Capacity: Specifies the number of virtual machines in the scale set.",
              "type": "integer"
            },
            "name": {
              "description": "Name: The sku name.",
              "type": "string"
            },
            "tier": {
              "description": "Tier: Specifies the tier of virtual machines in a scale set.\nPossible Values:\nStandard\nBasic",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags",
          "type": "object"
        },
        "type": {
          "description": "Type: Resource type",
          "type": "string"
        },
        "uniqueId": {
          "description": "UniqueId: Specifies the ID which uniquely identifies a Virtual Machine Scale Set.",
          "type": "string"
        },
        "upgradePolicy": {
          "description": "UpgradePolicy: The upgrade policy.",
          "properties": {
            "automaticOSUpgradePolicy": {
              "description": "AutomaticOSUpgradePolicy: Configuration parameters used for performing automatic OS Upgrade.",
              "properties": {
                "disableAutomaticRollback": {
                  "description": "DisableAutomaticRollback: Whether OS image rollback feature should be disabled. Default value is false.",
                  "type": "boolean"
                },
                "enableAutomaticOSUpgrade": {
                  "description": "EnableAutomaticOSUpgrade: Indicates whether OS upgrades should automatically be applied to scale set instances in a\nrolling fashion when a newer version of the OS image becomes available. Default value is false.\nIf this is set to true for Windows based scale sets,\n[enableAutomaticUpdates](https://docs.microsoft.com/dotnet/api/microsoft.azure.management.compute.models.windowsconfiguration.enableautomaticupdates?view=azure-dotnet)\nis automatically set to false and cannot be set to true.",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "mode": {
              "description": "Mode: Specifies the mode of an upgrade to virtual machines in the scale set.\nPossible values are:\nManual - You  control the application of updates to virtual machines in the scale set. You do this by using the\nmanualUpgrade action.\nAutomatic - All virtual machines in the scale set are  automatically updated at the same time.",
              "type": "string"
            },
            "rollingUpgradePolicy": {
              "description": "RollingUpgradePolicy: The configuration parameters used while performing a rolling upgrade.",
              "properties": {
                "enableCrossZoneUpgrade": {
                  "description": "EnableCrossZoneUpgrade: Allow VMSS to ignore AZ boundaries when constructing upgrade batches. Take into consideration\nthe Update Domain and maxBatchInstancePercent to determine the batch size.",
                  "type": "boolean"
                },
                "maxBatchInstancePercent": {
                  "description": "MaxBatchInstancePercent: The maximum percent of total virtual machine instances that will be upgraded simultaneously by\nthe rolling upgrade in one batch. As this is a maximum, unhealthy instances in previous or future batches can cause the\npercentage of instances in a batch to decrease to ensure higher reliability. The default value for this parameter is 20%.",
                  "type": "integer"
                },
                "maxUnhealthyInstancePercent": {
                  "description": "MaxUnhealthyInstancePercent: The maximum percentage of the total virtual machine instances in the scale set that can be\nsimultaneously unhealthy, either as a result of being upgraded, or by being found in an unhealthy state by the virtual\nmachine health checks before the rolling upgrade aborts. This constraint will be checked prior to starting any batch.\nThe default value for this parameter is 20%.",
                  "type": "integer"
                },
                "maxUnhealthyUpgradedInstancePercent": {
                  "description": "MaxUnhealthyUpgradedInstancePercent: The maximum percentage of upgraded virtual machine instances that can be found to\nbe in an unhealthy state. This check will happen after each batch is upgraded. If this percentage is ever exceeded, the\nrolling update aborts. The default value for this parameter is 20%.",
                  "type": "integer"
                },
                "pauseTimeBetweenBatches": {
                  "description": "PauseTimeBetweenBatches: The wait time between completing the update for all virtual machines in one batch and starting\nthe next batch. The time duration should be specified in ISO 8601 format. The default value is 0 seconds (PT0S).",
                  "type": "string"
                },
                "prioritizeUnhealthyInstances": {
                  "description": "PrioritizeUnhealthyInstances: Upgrade all unhealthy instances in a scale set before any healthy instances.",
                  "type": "boolean"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "virtualMachineProfile": {
          "description": "VirtualMachineProfile: The virtual machine profile.",
          "properties": {
            "billingProfile": {
              "description": "BillingProfile: Specifies the billing related details of a Azure Spot VMSS.\nMinimum api-version: 2019-03-01.",
              "properties": {
                "maxPrice": {
                  "description": "MaxPrice: Specifies the maximum price you are willing to pay for a Azure Spot VM/VMSS. This price is in US Dollars.\nThis price will be compared with the current Azure Spot price for the VM size. Also, the prices are compared at the time\nof create/update of Azure Spot VM/VMSS and the operation will only succeed if  the maxPrice is greater than the current\nAzure Spot price.\nThe maxPrice will also be used for evicting a Azure Spot VM/VMSS if the current Azure Spot price goes beyond the\nmaxPrice after creation of VM/VMSS.\nPossible values are:\n- Any decimal value greater than zero. Example: 0.01538\n-1 \u2013 indicates default price to be up-to on-demand.\nYou can set the maxPrice to -1 to indicate that the Azure Spot VM/VMSS should not be evicted for price reasons. Also,\nthe default max price is -1 if it is not provided by you.\nMinimum api-version: 2019-03-01.",
                  "type": "number"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "diagnosticsProfile": {
              "description": "DiagnosticsProfile: Specifies the boot diagnostic settings state.\nMinimum api-version: 2015-06-15.",
              "properties": {
                "bootDiagnostics": {
                  "description": "BootDiagnostics: Boot Diagnostics is a debugging feature which allows you to view Console Output and Screenshot to\ndiagnose VM status.\nYou can easily view the output of your console log.\nAzure also enables you to see a screenshot of the VM from the hypervisor.",
                  "properties": {
                    "enabled": {
                      "description": "Enabled: Whether boot diagnostics should be enabled on the Virtual Machine.",
                      "type": "boolean"
                    },
                    "storageUri": {
                      "description": "StorageUri: Uri of the storage account to use for placing the console output and screenshot.\nIf storageUri is not specified while enabling boot diagnostics, managed storage will be used.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "evictionPolicy": {
              "description": "EvictionPolicy: Specifies the eviction policy for the Azure Spot virtual machine and Azure Spot scale set.\nFor Azure Spot virtual machines, both 'Deallocate' and 'Delete' are supported and the minimum api-version is 2019-03-01.\nFor Azure Spot scale sets, both 'Deallocate' and 'Delete' are supported and the minimum api-version is\n2017-10-30-preview.",
              "type": "string"
            },
            "extensionProfile": {
              "description": "ExtensionProfile: Specifies a collection of settings for extensions installed on virtual machines in the scale set.",
              "properties": {
                "extensions": {
                  "description": "Extensions: The virtual machine scale set child extension resources.",
                  "items": {
                    "description": "Describes a Virtual Machine Scale Set Extension.",
                    "properties": {
                      "autoUpgradeMinorVersion": {
                        "description": "AutoUpgradeMinorVersion: Indicates whether the extension should use a newer minor version if one is available at\ndeployment time. Once deployed, however, the extension will not upgrade minor versions unless redeployed, even with this\nproperty set to true.",
                        "type": "boolean"
                      },
                      "enableAutomaticUpgrade": {
                        "description": "EnableAutomaticUpgrade: Indicates whether the extension should be automatically upgraded by the platform if there is a\nnewer version of the extension available.",
                        "type": "boolean"
                      },
                      "forceUpdateTag": {
                        "description": "ForceUpdateTag: If a value is provided and is different from the previous value, the extension handler will be forced to\nupdate even if the extension configuration has not changed.",
                        "type": "string"
                      },
                      "id": {
                        "description": "Id: Resource Id",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name: The name of the extension.",
                        "type": "string"
                      },
                      "properties_type": {
                        "description": "PropertiesType: Specifies the type of the extension; an example is \"CustomScriptExtension\".",
                        "type": "string"
                      },
                      "provisionAfterExtensions": {
                        "description": "ProvisionAfterExtensions: Collection of extension names after which this extension needs to be provisioned.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "provisioningState": {
                        "description": "ProvisioningState: The provisioning state, which only appears in the response.",
                        "type": "string"
                      },
                      "publisher": {
                        "description": "Publisher: The name of the extension handler publisher.",
                        "type": "string"
                      },
                      "settings": {
                        "additionalProperties": {
                          "x-kubernetes-preserve-unknown-fields": true
                        },
                        "description": "Settings: Json formatted public settings for the extension.",
                        "type": "object"
                      },
                      "type": {
                        "description": "Type: Resource type",
                        "type": "string"
                      },
                      "typeHandlerVersion": {
                        "description": "TypeHandlerVersion: Specifies the version of the script handler.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "extensionsTimeBudget": {
                  "description": "ExtensionsTimeBudget: Specifies the time alloted for all extensions to start. The time duration should be between 15\nminutes and 120 minutes (inclusive) and should be specified in ISO 8601 format. The default value is 90 minutes\n(PT1H30M).\nMinimum api-version: 2020-06-01",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "licenseType": {
              "description": "LicenseType: Specifies that the image or disk that is being used was licensed on-premises.\nPossible values for Windows Server operating system are:\nWindows_Client\nWindows_Server\nPossible values for Linux Server operating system are:\nRHEL_BYOS (for RHEL)\nSLES_BYOS (for SUSE)\nFor more information, see [Azure Hybrid Use Benefit for Windows\nServer](https://docs.microsoft.com/azure/virtual-machines/windows/hybrid-use-benefit-licensing)\n[Azure Hybrid Use Benefit for Linux\nServer](https://docs.microsoft.com/azure/virtual-machines/linux/azure-hybrid-benefit-linux)\nMinimum api-version: 2015-06-15",
              "type": "string"
            },
            "networkProfile": {
              "description": "NetworkProfile: Specifies properties of the network interfaces of the virtual machines in the scale set.",
              "properties": {
                "healthProbe": {
                  "description": "HealthProbe: A reference to a load balancer probe used to determine the health of an instance in the virtual machine\nscale set. The reference will be in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}/probes/{probeName}'.",
                  "properties": {
                    "id": {
                      "description": "Id: The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "networkInterfaceConfigurations": {
                  "description": "NetworkInterfaceConfigurations: The list of network configurations.",
                  "items": {
                    "description": "Describes a virtual machine scale set network profile's network configurations.",
                    "properties": {
                      "dnsSettings": {
                        "description": "DnsSettings: The dns settings to be applied on the network interfaces.",
                        "properties": {
                          "dnsServers": {
                            "description": "DnsServers: List of DNS servers IP addresses",
                            "items": {
                              "type": "string"
                            },
                            "type": "array"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "enableAcceleratedNetworking": {
                        "description": "EnableAcceleratedNetworking: Specifies whether the network interface is accelerated networking-enabled.",
                        "type": "boolean"
                      },
                      "enableFpga": {
                        "description": "EnableFpga: Specifies whether the network interface is FPGA networking-enabled.",
                        "type": "boolean"
                      },
                      "enableIPForwarding": {
                        "description": "EnableIPForwarding: Whether IP forwarding enabled on this NIC.",
                        "type": "boolean"
                      },
                      "id": {
                        "description": "Id: Resource Id",
                        "type": "string"
                      },
                      "ipConfigurations": {
                        "description": "IpConfigurations: Specifies the IP configurations of the network interface.",
                        "items": {
                          "description": "Describes a virtual machine scale set network profile's IP configuration.",
                          "properties": {
                            "applicationGatewayBackendAddressPools": {
                              "description": "ApplicationGatewayBackendAddressPools: Specifies an array of references to backend address pools of application\ngateways. A scale set can reference backend address pools of multiple application gateways. Multiple scale sets cannot\nuse the same application gateway.",
                              "items": {
                                "properties": {
                                  "id": {
                                    "description": "Id: Resource Id",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "applicationSecurityGroups": {
                              "description": "ApplicationSecurityGroups: Specifies an array of references to application security group.",
                              "items": {
                                "properties": {
                                  "id": {
                                    "description": "Id: Resource Id",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "id": {
                              "description": "Id: Resource Id",
                              "type": "string"
                            },
                            "loadBalancerBackendAddressPools": {
                              "description": "LoadBalancerBackendAddressPools: Specifies an array of references to backend address pools of load balancers. A scale\nset can reference backend address pools of one public and one internal load balancer. Multiple scale sets cannot use the\nsame basic sku load balancer.",
                              "items": {
                                "properties": {
                                  "id": {
                                    "description": "Id: Resource Id",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "loadBalancerInboundNatPools": {
                              "description": "LoadBalancerInboundNatPools: Specifies an array of references to inbound Nat pools of the load balancers. A scale set\ncan reference inbound nat pools of one public and one internal load balancer. Multiple scale sets cannot use the same\nbasic sku load balancer.",
                              "items": {
                                "properties": {
                                  "id": {
                                    "description": "Id: Resource Id",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              },
                              "type": "array"
                            },
                            "name": {
                              "description": "Name: The IP configuration name.",
                              "type": "string"
                            },
                            "primary": {
                              "description": "Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.",
                              "type": "boolean"
                            },
                            "privateIPAddressVersion": {
                              "description": "PrivateIPAddressVersion: Available from Api-Version 2017-03-30 onwards, it represents whether the specific\nipconfiguration is IPv4 or IPv6. Default is taken as IPv4.  Possible values are: 'IPv4' and 'IPv6'.",
                              "type": "string"
                            },
                            "publicIPAddressConfiguration": {
                              "description": "PublicIPAddressConfiguration: The publicIPAddressConfiguration.",
                              "properties": {
                                "dnsSettings": {
                                  "description": "DnsSettings: The dns settings to be applied on the publicIP addresses .",
                                  "properties": {
                                    "domainNameLabel": {
                                      "description": "DomainNameLabel: The Domain name label.The concatenation of the domain name label and vm index will be the domain name\nlabels of the PublicIPAddress resources that will be created",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "idleTimeoutInMinutes": {
                                  "description": "IdleTimeoutInMinutes: The idle timeout of the public IP address.",
                                  "type": "integer"
                                },
                                "ipTags": {
                                  "description": "IpTags: The list of IP tags associated with the public IP address.",
                                  "items": {
                                    "description": "Contains the IP tag associated with the public IP address.",
                                    "properties": {
                                      "ipTagType": {
                                        "description": "IpTagType: IP tag type. Example: FirstPartyUsage.",
                                        "type": "string"
                                      },
                                      "tag": {
                                        "description": "Tag: IP tag associated with the public IP. Example: SQL, Storage etc.",
                                        "type": "string"
                                      }
                                    },
                                    "type": "object",
                                    "additionalProperties": false
                                  },
                                  "type": "array"
                                },
                                "name": {
                                  "description": "Name: The publicIP address configuration name.",
                                  "type": "string"
                                },
                                "publicIPAddressVersion": {
                                  "description": "PublicIPAddressVersion: Available from Api-Version 2019-07-01 onwards, it represents whether the specific\nipconfiguration is IPv4 or IPv6. Default is taken as IPv4. Possible values are: 'IPv4' and 'IPv6'.",
                                  "type": "string"
                                },
                                "publicIPPrefix": {
                                  "description": "PublicIPPrefix: The PublicIPPrefix from which to allocate publicIP addresses.",
                                  "properties": {
                                    "id": {
                                      "description": "Id: Resource Id",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            },
                            "subnet": {
                              "description": "Subnet: Specifies the identifier of the subnet.",
                              "properties": {
                                "id": {
                                  "description": "Id: The ARM resource id in the form of /subscriptions/{SubscriptionId}/resourceGroups/{ResourceGroupName}/...",
                                  "type": "string"
                                }
                              },
                              "type": "object",
                              "additionalProperties": false
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "type": "array"
                      },
                      "name": {
                        "description": "Name: The network configuration name.",
                        "type": "string"
                      },
                      "networkSecurityGroup": {
                        "description": "NetworkSecurityGroup: The network security group.",
                        "properties": {
                          "id": {
                            "description": "Id: Resource Id",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "primary": {
                        "description": "Primary: Specifies the primary network interface in case the virtual machine has more than 1 network interface.",
                        "type": "boolean"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "osProfile": {
              "description": "OsProfile: Specifies the operating system settings for the virtual machines in the scale set.",
              "properties": {
                "adminUsername": {
                  "description": "AdminUsername: Specifies the name of the administrator account.\nWindows-only restriction: Cannot end in \".\"\nDisallowed values: \"administrator\", \"admin\", \"user\", \"user1\", \"test\", \"user2\", \"test1\", \"user3\", \"admin1\", \"1\", \"123\",\n\"a\", \"actuser\", \"adm\", \"admin2\", \"aspnet\", \"backup\", \"console\", \"david\", \"guest\", \"john\", \"owner\", \"root\", \"server\",\n\"sql\", \"support\", \"support_388945a0\", \"sys\", \"test2\", \"test3\", \"user4\", \"user5\".\nMinimum-length (Linux): 1  character\nMax-length (Linux): 64 characters\nMax-length (Windows): 20 characters\n<li> For root access to the Linux VM, see [Using root privileges on Linux virtual machines in\nAzure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-use-root-privileges?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)\n<li> For a list of built-in system users on Linux that should not be used in this field, see [Selecting User Names for\nLinux on\nAzure](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-usernames?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)",
                  "type": "string"
                },
                "computerNamePrefix": {
                  "description": "ComputerNamePrefix: Specifies the computer name prefix for all of the virtual machines in the scale set. Computer name\nprefixes must be 1 to 15 characters long.",
                  "type": "string"
                },
                "customData": {
                  "description": "CustomData: Specifies a base-64 encoded string of custom data. The base-64 encoded string is decoded to a binary array\nthat is saved as a file on the Virtual Machine. The maximum length of the binary array is 65535 bytes.\nFor using cloud-init for your VM, see [Using cloud-init to customize a Linux VM during\ncreation](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-using-cloud-init?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)",
                  "type": "string"
                },
                "linuxConfiguration": {
                  "description": "LinuxConfiguration: Specifies the Linux operating system settings on the virtual machine.\nFor a list of supported Linux distributions, see [Linux on Azure-Endorsed\nDistributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-endorsed-distros?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json)\nFor running non-endorsed distributions, see [Information for Non-Endorsed\nDistributions](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-linux-create-upload-generic?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).",
                  "properties": {
                    "disablePasswordAuthentication": {
                      "description": "DisablePasswordAuthentication: Specifies whether password authentication should be disabled.",
                      "type": "boolean"
                    },
                    "patchSettings": {
                      "description": "PatchSettings: [Preview Feature] Specifies settings related to VM Guest Patching on Linux.",
                      "properties": {
                        "patchMode": {
                          "description": "PatchMode: Specifies the mode of VM Guest Patching to IaaS virtual machine.\nPossible values are:\nImageDefault - The virtual machine's default patching configuration is used.\nAutomaticByPlatform - The virtual machine will be automatically updated by the platform. The property provisionVMAgent\nmust be true",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "provisionVMAgent": {
                      "description": "ProvisionVMAgent: Indicates whether virtual machine agent should be provisioned on the virtual machine.\nWhen this property is not specified in the request body, default behavior is to set it to true.  This will ensure that\nVM Agent is installed on the VM so that extensions can be added to the VM later.",
                      "type": "boolean"
                    },
                    "ssh": {
                      "description": "Ssh: Specifies the ssh key configuration for a Linux OS.",
                      "properties": {
                        "publicKeys": {
                          "description": "PublicKeys: The list of SSH public keys used to authenticate with linux based VMs.",
                          "items": {
                            "description": "Contains information about SSH certificate public key and the path on the Linux VM where the public key is placed.",
                            "properties": {
                              "keyData": {
                                "description": "KeyData: SSH public key certificate used to authenticate with the VM through ssh. The key needs to be at least 2048-bit\nand in ssh-rsa format.\nFor creating ssh keys, see [Create SSH keys on Linux and Mac for Linux VMs in\nAzure](https://docs.microsoft.com/en-us/azure/virtual-machines/linux/mac-create-ssh-keys?toc=%2fazure%2fvirtual-machines%2flinux%2ftoc.json).",
                                "type": "string"
                              },
                              "path": {
                                "description": "Path: Specifies the full path on the created VM where ssh public key is stored. If the file already exists, the\nspecified key is appended to the file. Example: /home/user/.ssh/authorized_keys",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "secrets": {
                  "description": "Secrets: Specifies set of certificates that should be installed onto the virtual machines in the scale set.",
                  "items": {
                    "description": "Describes a set of certificates which are all in the same Key Vault.",
                    "properties": {
                      "sourceVault": {
                        "description": "SourceVault: The relative URL of the Key Vault containing all of the certificates in VaultCertificates.",
                        "properties": {
                          "id": {
                            "description": "Id: Resource Id",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "vaultCertificates": {
                        "description": "VaultCertificates: The list of key vault references in SourceVault which contain certificates.",
                        "items": {
                          "description": "Describes a single certificate reference in a Key Vault, and where the certificate should reside on the VM.",
                          "properties": {
                            "certificateStore": {
                              "description": "CertificateStore: For Windows VMs, specifies the certificate store on the Virtual Machine to which the certificate\nshould be added. The specified certificate store is implicitly in the LocalMachine account.\nFor Linux VMs, the certificate file is placed under the /var/lib/waagent directory, with the file name\n&lt;UppercaseThumbprint&gt;.crt for the X509 certificate file and &lt;UppercaseThumbprint&gt;.prv for private key. Both\nof these files are .pem formatted.",
                              "type": "string"
                            },
                            "certificateUrl": {
                              "description": "CertificateUrl: This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to\nthe Key Vault, see [Add a key or secret to the key\nvault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to\nbe It is the Base64 encoding of the following JSON Object which is encoded in UTF-8:\n{\n\"data\":\"<Base64-encoded-certificate>\",\n\"dataType\":\"pfx\",\n\"password\":\"<pfx-file-password>\"\n}",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "type": "array"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "windowsConfiguration": {
                  "description": "WindowsConfiguration: Specifies Windows operating system settings on the virtual machine.",
                  "properties": {
                    "additionalUnattendContent": {
                      "description": "AdditionalUnattendContent: Specifies additional base-64 encoded XML formatted information that can be included in the\nUnattend.xml file, which is used by Windows Setup.",
                      "items": {
                        "description": "Specifies additional XML formatted information that can be included in the Unattend.xml file, which is used by Windows\nSetup. Contents are defined by setting name, component name, and the pass in which the content is applied.",
                        "properties": {
                          "componentName": {
                            "description": "ComponentName: The component name. Currently, the only allowable value is Microsoft-Windows-Shell-Setup.",
                            "type": "string"
                          },
                          "content": {
                            "description": "Content: Specifies the XML formatted content that is added to the unattend.xml file for the specified path and\ncomponent. The XML must be less than 4KB and must include the root element for the setting or feature that is being\ninserted.",
                            "type": "string"
                          },
                          "passName": {
                            "description": "PassName: The pass name. Currently, the only allowable value is OobeSystem.",
                            "type": "string"
                          },
                          "settingName": {
                            "description": "SettingName: Specifies the name of the setting to which the content applies. Possible values are: FirstLogonCommands and\nAutoLogon.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "enableAutomaticUpdates": {
                      "description": "EnableAutomaticUpdates: Indicates whether Automatic Updates is enabled for the Windows virtual machine. Default value is\ntrue.\nFor virtual machine scale sets, this property can be updated and updates will take effect on OS reprovisioning.",
                      "type": "boolean"
                    },
                    "patchSettings": {
                      "description": "PatchSettings: [Preview Feature] Specifies settings related to VM Guest Patching on Windows.",
                      "properties": {
                        "enableHotpatching": {
                          "description": "EnableHotpatching: Enables customers to patch their Azure VMs without requiring a reboot. For enableHotpatching, the\n'provisionVMAgent' must be set to true and 'patchMode' must be set to 'AutomaticByPlatform'.",
                          "type": "boolean"
                        },
                        "patchMode": {
                          "description": "PatchMode: Specifies the mode of VM Guest Patching to IaaS virtual machine.\nPossible values are:\nManual - You  control the application of patches to a virtual machine. You do this by applying patches manually inside\nthe VM. In this mode, automatic updates are disabled; the property WindowsConfiguration.enableAutomaticUpdates must be\nfalse\nAutomaticByOS - The virtual machine will automatically be updated by the OS. The property\nWindowsConfiguration.enableAutomaticUpdates must be true.\nAutomaticByPlatform - the virtual machine will automatically updated by the platform. The properties provisionVMAgent\nand WindowsConfiguration.enableAutomaticUpdates must be true",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "provisionVMAgent": {
                      "description": "ProvisionVMAgent: Indicates whether virtual machine agent should be provisioned on the virtual machine.\nWhen this property is not specified in the request body, default behavior is to set it to true.  This will ensure that\nVM Agent is installed on the VM so that extensions can be added to the VM later.",
                      "type": "boolean"
                    },
                    "timeZone": {
                      "description": "TimeZone: Specifies the time zone of the virtual machine. e.g. \"Pacific Standard Time\".\nPossible values can be\n[TimeZoneInfo.Id](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.id?#System_TimeZoneInfo_Id) value from\ntime zones returned by\n[TimeZoneInfo.GetSystemTimeZones](https://docs.microsoft.com/en-us/dotnet/api/system.timezoneinfo.getsystemtimezones).",
                      "type": "string"
                    },
                    "winRM": {
                      "description": "WinRM: Specifies the Windows Remote Management listeners. This enables remote Windows PowerShell.",
                      "properties": {
                        "listeners": {
                          "description": "Listeners: The list of Windows Remote Management listeners",
                          "items": {
                            "description": "Describes Protocol and thumbprint of Windows Remote Management listener",
                            "properties": {
                              "certificateUrl": {
                                "description": "CertificateUrl: This is the URL of a certificate that has been uploaded to Key Vault as a secret. For adding a secret to\nthe Key Vault, see [Add a key or secret to the key\nvault](https://docs.microsoft.com/azure/key-vault/key-vault-get-started/#add). In this case, your certificate needs to\nbe It is the Base64 encoding of the following JSON Object which is encoded in UTF-8:\n{\n\"data\":\"<Base64-encoded-certificate>\",\n\"dataType\":\"pfx\",\n\"password\":\"<pfx-file-password>\"\n}",
                                "type": "string"
                              },
                              "protocol": {
                                "description": "Protocol: Specifies the protocol of WinRM listener.\nPossible values are:\nhttp\nhttps",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "priority": {
              "description": "Priority: Specifies the priority for the virtual machines in the scale set.\nMinimum api-version: 2017-10-30-preview",
              "type": "string"
            },
            "scheduledEventsProfile": {
              "description": "ScheduledEventsProfile: Specifies Scheduled Event related configurations.",
              "properties": {
                "terminateNotificationProfile": {
                  "description": "TerminateNotificationProfile: Specifies Terminate Scheduled Event related configurations.",
                  "properties": {
                    "enable": {
                      "description": "Enable: Specifies whether the Terminate Scheduled event is enabled or disabled.",
                      "type": "boolean"
                    },
                    "notBeforeTimeout": {
                      "description": "NotBeforeTimeout: Configurable length of time a Virtual Machine being deleted will have to potentially approve the\nTerminate Scheduled Event before the event is auto approved (timed out). The configuration must be specified in ISO 8601\nformat, the default value is 5 minutes (PT5M)",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "securityProfile": {
              "description": "SecurityProfile: Specifies the Security related profile settings for the virtual machines in the scale set.",
              "properties": {
                "encryptionAtHost": {
                  "description": "EncryptionAtHost: This property can be used by user in the request to enable or disable the Host Encryption for the\nvirtual machine or virtual machine scale set. This will enable the encryption for all the disks including Resource/Temp\ndisk at host itself.\nDefault: The Encryption at host will be disabled unless this property is set to true for the resource.",
                  "type": "boolean"
                },
                "securityType": {
                  "description": "SecurityType: Specifies the SecurityType of the virtual machine. It is set as TrustedLaunch to enable UefiSettings.\nDefault: UefiSettings will not be enabled unless this property is set as TrustedLaunch.",
                  "type": "string"
                },
                "uefiSettings": {
                  "description": "UefiSettings: Specifies the security settings like secure boot and vTPM used while creating the virtual machine.\nMinimum api-version: 2020-12-01",
                  "properties": {
                    "secureBootEnabled": {
                      "description": "SecureBootEnabled: Specifies whether secure boot should be enabled on the virtual machine.\nMinimum api-version: 2020-12-01",
                      "type": "boolean"
                    },
                    "vTpmEnabled": {
                      "description": "VTpmEnabled: Specifies whether vTPM should be enabled on the virtual machine.\nMinimum api-version: 2020-12-01",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "storageProfile": {
              "description": "StorageProfile: Specifies the storage settings for the virtual machine disks.",
              "properties": {
                "dataDisks": {
                  "description": "DataDisks: Specifies the parameters that are used to add data disks to the virtual machines in the scale set.\nFor more information about disks, see [About disks and VHDs for Azure virtual\nmachines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).",
                  "items": {
                    "description": "Describes a virtual machine scale set data disk.",
                    "properties": {
                      "caching": {
                        "description": "Caching: Specifies the caching requirements.\nPossible values are:\nNone\nReadOnly\nReadWrite\nDefault: None for Standard storage. ReadOnly for Premium storage",
                        "type": "string"
                      },
                      "createOption": {
                        "description": "CreateOption: The create option.",
                        "type": "string"
                      },
                      "diskIOPSReadWrite": {
                        "description": "DiskIOPSReadWrite: Specifies the Read-Write IOPS for the managed disk. Should be used only when StorageAccountType is\nUltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.",
                        "type": "integer"
                      },
                      "diskMBpsReadWrite": {
                        "description": "DiskMBpsReadWrite: Specifies the bandwidth in MB per second for the managed disk. Should be used only when\nStorageAccountType is UltraSSD_LRS. If not specified, a default value would be assigned based on diskSizeGB.",
                        "type": "integer"
                      },
                      "diskSizeGB": {
                        "description": "DiskSizeGB: Specifies the size of an empty data disk in gigabytes. This element can be used to overwrite the size of the\ndisk in a virtual machine image.\nThis value cannot be larger than 1023 GB",
                        "type": "integer"
                      },
                      "lun": {
                        "description": "Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and\ntherefore must be unique for each data disk attached to a VM.",
                        "type": "integer"
                      },
                      "managedDisk": {
                        "description": "ManagedDisk: The managed disk parameters.",
                        "properties": {
                          "diskEncryptionSet": {
                            "description": "DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed disk.",
                            "properties": {
                              "id": {
                                "description": "Id: Resource Id",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "storageAccountType": {
                            "description": "StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with\ndata disks, it cannot be used with OS Disk.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "name": {
                        "description": "Name: The disk name.",
                        "type": "string"
                      },
                      "writeAcceleratorEnabled": {
                        "description": "WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.",
                        "type": "boolean"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "type": "array"
                },
                "imageReference": {
                  "description": "ImageReference: Specifies information about the image to use. You can specify information about platform images,\nmarketplace images, or virtual machine images. This element is required when you want to use a platform image,\nmarketplace image, or virtual machine image, but is not used in other creation operations.",
                  "properties": {
                    "exactVersion": {
                      "description": "ExactVersion: Specifies in decimal numbers, the version of platform image or marketplace image used to create the\nvirtual machine. This readonly field differs from 'version', only if the value specified in 'version' field is 'latest'.",
                      "type": "string"
                    },
                    "id": {
                      "description": "Id: Resource Id",
                      "type": "string"
                    },
                    "offer": {
                      "description": "Offer: Specifies the offer of the platform image or marketplace image used to create the virtual machine.",
                      "type": "string"
                    },
                    "publisher": {
                      "description": "Publisher: The image publisher.",
                      "type": "string"
                    },
                    "sku": {
                      "description": "Sku: The image SKU.",
                      "type": "string"
                    },
                    "version": {
                      "description": "Version: Specifies the version of the platform image or marketplace image used to create the virtual machine. The\nallowed formats are Major.Minor.Build or 'latest'. Major, Minor, and Build are decimal numbers. Specify 'latest' to use\nthe latest version of an image available at deploy time. Even if you use 'latest', the VM image will not automatically\nupdate after deploy time even if a new version becomes available.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "osDisk": {
                  "description": "OsDisk: Specifies information about the operating system disk used by the virtual machines in the scale set.\nFor more information about disks, see [About disks and VHDs for Azure virtual\nmachines](https://docs.microsoft.com/azure/virtual-machines/virtual-machines-windows-about-disks-vhds?toc=%2fazure%2fvirtual-machines%2fwindows%2ftoc.json).",
                  "properties": {
                    "caching": {
                      "description": "Caching: Specifies the caching requirements.\nPossible values are:\nNone\nReadOnly\nReadWrite\nDefault: None for Standard storage. ReadOnly for Premium storage",
                      "type": "string"
                    },
                    "createOption": {
                      "description": "CreateOption: Specifies how the virtual machines in the scale set should be created.\nThe only allowed value is: FromImage \\u2013 This value is used when you are using an image to create the virtual\nmachine. If you are using a platform image, you also use the imageReference element described above. If you are using a\nmarketplace image, you  also use the plan element previously described.",
                      "type": "string"
                    },
                    "diffDiskSettings": {
                      "description": "DiffDiskSettings: Specifies the ephemeral disk Settings for the operating system disk used by the virtual machine scale\nset.",
                      "properties": {
                        "option": {
                          "description": "Option: Specifies the ephemeral disk settings for operating system disk.",
                          "type": "string"
                        },
                        "placement": {
                          "description": "Placement: Specifies the ephemeral disk placement for operating system disk.\nPossible values are:\nCacheDisk\nResourceDisk\nDefault: CacheDisk if one is configured for the VM size otherwise ResourceDisk is used.\nRefer to VM size documentation for Windows VM at https://docs.microsoft.com/en-us/azure/virtual-machines/windows/sizes\nand Linux VM at https://docs.microsoft.com/en-us/azure/virtual-machines/linux/sizes to check which VM sizes exposes a\ncache disk.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "diskSizeGB": {
                      "description": "DiskSizeGB: Specifies the size of the operating system disk in gigabytes. This element can be used to overwrite the size\nof the disk in a virtual machine image.\nThis value cannot be larger than 1023 GB",
                      "type": "integer"
                    },
                    "image": {
                      "description": "Image: Specifies information about the unmanaged user image to base the scale set on.",
                      "properties": {
                        "uri": {
                          "description": "Uri: Specifies the virtual hard disk's uri.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "managedDisk": {
                      "description": "ManagedDisk: The managed disk parameters.",
                      "properties": {
                        "diskEncryptionSet": {
                          "description": "DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed disk.",
                          "properties": {
                            "id": {
                              "description": "Id: Resource Id",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "storageAccountType": {
                          "description": "StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with\ndata disks, it cannot be used with OS Disk.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "name": {
                      "description": "Name: The disk name.",
                      "type": "string"
                    },
                    "osType": {
                      "description": "OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from\nuser-image or a specialized VHD.\nPossible values are:\nWindows\nLinux",
                      "type": "string"
                    },
                    "vhdContainers": {
                      "description": "VhdContainers: Specifies the container urls that are used to store operating system disks for the scale set.",
                      "items": {
                        "type": "string"
                      },
                      "type": "array"
                    },
                    "writeAcceleratorEnabled": {
                      "description": "WriteAcceleratorEnabled: Specifies whether writeAccelerator should be enabled or disabled on the disk.",
                      "type": "boolean"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "zoneBalance": {
          "description": "ZoneBalance: Whether to force strictly even Virtual Machine distribution cross x-zones in case there is zone outage.",
          "type": "boolean"
        },
        "zones": {
          "description": "Zones: The virtual machine scale set zones. NOTE: Availability zones can only be set when you create the scale set",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
