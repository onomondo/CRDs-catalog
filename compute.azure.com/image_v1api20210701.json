{
  "description": "Generator information:\n- Generated from: /compute/resource-manager/Microsoft.Compute/ComputeRP/stable/2021-07-01/compute.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Compute/images/{imageName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: The extended location of the Image.",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "enum": [
                "EdgeZone"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "hyperVGeneration": {
          "description": "HyperVGeneration: Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version\n2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource\nlike disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed\nresource.",
          "enum": [
            "V1",
            "V2"
          ],
          "type": "string"
        },
        "location": {
          "description": "Location: Resource location",
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "sourceVirtualMachine": {
          "description": "SourceVirtualMachine: The source virtual machine from which Image is created.",
          "properties": {
            "reference": {
              "description": "Reference: Resource Id",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "storageProfile": {
          "description": "StorageProfile: Specifies the storage settings for the virtual machine disks.",
          "properties": {
            "dataDisks": {
              "description": "DataDisks: Specifies the parameters that are used to add a data disk to a virtual machine.\nFor more information about disks, see [About disks and VHDs for Azure virtual\nmachines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).",
              "items": {
                "description": "Describes a data disk.",
                "properties": {
                  "blobUri": {
                    "description": "BlobUri: The Virtual Hard Disk.",
                    "type": "string"
                  },
                  "caching": {
                    "description": "Caching: Specifies the caching requirements.\nPossible values are:\nNone\nReadOnly\nReadWrite\nDefault: None for Standard storage. ReadOnly for Premium storage",
                    "enum": [
                      "None",
                      "ReadOnly",
                      "ReadWrite"
                    ],
                    "type": "string"
                  },
                  "diskEncryptionSet": {
                    "description": "DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed image disk.",
                    "properties": {
                      "reference": {
                        "description": "Reference: Resource Id",
                        "properties": {
                          "armId": {
                            "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                            "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                            "type": "string"
                          },
                          "group": {
                            "description": "Group is the Kubernetes group of the resource.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind is the Kubernetes kind of the resource.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name is the Kubernetes name of the resource.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "diskSizeGB": {
                    "description": "DiskSizeGB: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the\ndisk in a virtual machine image.\nThis value cannot be larger than 1023 GB",
                    "type": "integer"
                  },
                  "lun": {
                    "description": "Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and\ntherefore must be unique for each data disk attached to a VM.",
                    "type": "integer"
                  },
                  "managedDisk": {
                    "description": "ManagedDisk: The managedDisk.",
                    "properties": {
                      "reference": {
                        "description": "Reference: Resource Id",
                        "properties": {
                          "armId": {
                            "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                            "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                            "type": "string"
                          },
                          "group": {
                            "description": "Group is the Kubernetes group of the resource.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind is the Kubernetes kind of the resource.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name is the Kubernetes name of the resource.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "snapshot": {
                    "description": "Snapshot: The snapshot.",
                    "properties": {
                      "reference": {
                        "description": "Reference: Resource Id",
                        "properties": {
                          "armId": {
                            "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                            "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                            "type": "string"
                          },
                          "group": {
                            "description": "Group is the Kubernetes group of the resource.",
                            "type": "string"
                          },
                          "kind": {
                            "description": "Kind is the Kubernetes kind of the resource.",
                            "type": "string"
                          },
                          "name": {
                            "description": "Name is the Kubernetes name of the resource.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "storageAccountType": {
                    "description": "StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with\ndata disks, it cannot be used with OS Disk.",
                    "enum": [
                      "Premium_LRS",
                      "Premium_ZRS",
                      "StandardSSD_LRS",
                      "StandardSSD_ZRS",
                      "Standard_LRS",
                      "UltraSSD_LRS"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "lun"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "osDisk": {
              "description": "OsDisk: Specifies information about the operating system disk used by the virtual machine.\nFor more information about disks, see [About disks and VHDs for Azure virtual\nmachines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).",
              "properties": {
                "blobUri": {
                  "description": "BlobUri: The Virtual Hard Disk.",
                  "type": "string"
                },
                "caching": {
                  "description": "Caching: Specifies the caching requirements.\nPossible values are:\nNone\nReadOnly\nReadWrite\nDefault: None for Standard storage. ReadOnly for Premium storage",
                  "enum": [
                    "None",
                    "ReadOnly",
                    "ReadWrite"
                  ],
                  "type": "string"
                },
                "diskEncryptionSet": {
                  "description": "DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed image disk.",
                  "properties": {
                    "reference": {
                      "description": "Reference: Resource Id",
                      "properties": {
                        "armId": {
                          "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                          "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                          "type": "string"
                        },
                        "group": {
                          "description": "Group is the Kubernetes group of the resource.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the Kubernetes kind of the resource.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the Kubernetes name of the resource.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "diskSizeGB": {
                  "description": "DiskSizeGB: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the\ndisk in a virtual machine image.\nThis value cannot be larger than 1023 GB",
                  "type": "integer"
                },
                "managedDisk": {
                  "description": "ManagedDisk: The managedDisk.",
                  "properties": {
                    "reference": {
                      "description": "Reference: Resource Id",
                      "properties": {
                        "armId": {
                          "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                          "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                          "type": "string"
                        },
                        "group": {
                          "description": "Group is the Kubernetes group of the resource.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the Kubernetes kind of the resource.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the Kubernetes name of the resource.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "osState": {
                  "description": "OsState: The OS State.",
                  "enum": [
                    "Generalized",
                    "Specialized"
                  ],
                  "type": "string"
                },
                "osType": {
                  "description": "OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from a\ncustom image.\nPossible values are:\nWindows\nLinux",
                  "enum": [
                    "Linux",
                    "Windows"
                  ],
                  "type": "string"
                },
                "snapshot": {
                  "description": "Snapshot: The snapshot.",
                  "properties": {
                    "reference": {
                      "description": "Reference: Resource Id",
                      "properties": {
                        "armId": {
                          "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                          "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                          "type": "string"
                        },
                        "group": {
                          "description": "Group is the Kubernetes group of the resource.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the Kubernetes kind of the resource.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the Kubernetes name of the resource.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "storageAccountType": {
                  "description": "StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with\ndata disks, it cannot be used with OS Disk.",
                  "enum": [
                    "Premium_LRS",
                    "Premium_ZRS",
                    "StandardSSD_LRS",
                    "StandardSSD_ZRS",
                    "Standard_LRS",
                    "UltraSSD_LRS"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "osState",
                "osType"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "zoneResilient": {
              "description": "ZoneResilient: Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be\ncreated only in regions that provide Zone Redundant Storage (ZRS).",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags",
          "type": "object"
        }
      },
      "required": [
        "location",
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "The source user image virtual hard disk. The virtual hard disk will be copied before being attached to the virtual\nmachine. If SourceImage is provided, the destination virtual hard drive must not exist.",
      "properties": {
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: The extended location of the Image.",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "hyperVGeneration": {
          "description": "HyperVGeneration: Specifies the HyperVGenerationType of the VirtualMachine created from the image. From API Version\n2019-03-01 if the image source is a blob, then we need the user to specify the value, if the source is managed resource\nlike disk or snapshot, we may require the user to specify the property if we cannot deduce it from the source managed\nresource.",
          "type": "string"
        },
        "id": {
          "description": "Id: Resource Id",
          "type": "string"
        },
        "location": {
          "description": "Location: Resource location",
          "type": "string"
        },
        "name": {
          "description": "Name: Resource name",
          "type": "string"
        },
        "provisioningState": {
          "description": "ProvisioningState: The provisioning state.",
          "type": "string"
        },
        "sourceVirtualMachine": {
          "description": "SourceVirtualMachine: The source virtual machine from which Image is created.",
          "properties": {
            "id": {
              "description": "Id: Resource Id",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "storageProfile": {
          "description": "StorageProfile: Specifies the storage settings for the virtual machine disks.",
          "properties": {
            "dataDisks": {
              "description": "DataDisks: Specifies the parameters that are used to add a data disk to a virtual machine.\nFor more information about disks, see [About disks and VHDs for Azure virtual\nmachines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).",
              "items": {
                "description": "Describes a data disk.",
                "properties": {
                  "blobUri": {
                    "description": "BlobUri: The Virtual Hard Disk.",
                    "type": "string"
                  },
                  "caching": {
                    "description": "Caching: Specifies the caching requirements.\nPossible values are:\nNone\nReadOnly\nReadWrite\nDefault: None for Standard storage. ReadOnly for Premium storage",
                    "type": "string"
                  },
                  "diskEncryptionSet": {
                    "description": "DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed image disk.",
                    "properties": {
                      "id": {
                        "description": "Id: Resource Id",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "diskSizeGB": {
                    "description": "DiskSizeGB: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the\ndisk in a virtual machine image.\nThis value cannot be larger than 1023 GB",
                    "type": "integer"
                  },
                  "lun": {
                    "description": "Lun: Specifies the logical unit number of the data disk. This value is used to identify data disks within the VM and\ntherefore must be unique for each data disk attached to a VM.",
                    "type": "integer"
                  },
                  "managedDisk": {
                    "description": "ManagedDisk: The managedDisk.",
                    "properties": {
                      "id": {
                        "description": "Id: Resource Id",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "snapshot": {
                    "description": "Snapshot: The snapshot.",
                    "properties": {
                      "id": {
                        "description": "Id: Resource Id",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "storageAccountType": {
                    "description": "StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with\ndata disks, it cannot be used with OS Disk.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "osDisk": {
              "description": "OsDisk: Specifies information about the operating system disk used by the virtual machine.\nFor more information about disks, see [About disks and VHDs for Azure virtual\nmachines](https://docs.microsoft.com/azure/virtual-machines/managed-disks-overview).",
              "properties": {
                "blobUri": {
                  "description": "BlobUri: The Virtual Hard Disk.",
                  "type": "string"
                },
                "caching": {
                  "description": "Caching: Specifies the caching requirements.\nPossible values are:\nNone\nReadOnly\nReadWrite\nDefault: None for Standard storage. ReadOnly for Premium storage",
                  "type": "string"
                },
                "diskEncryptionSet": {
                  "description": "DiskEncryptionSet: Specifies the customer managed disk encryption set resource id for the managed image disk.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource Id",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "diskSizeGB": {
                  "description": "DiskSizeGB: Specifies the size of empty data disks in gigabytes. This element can be used to overwrite the name of the\ndisk in a virtual machine image.\nThis value cannot be larger than 1023 GB",
                  "type": "integer"
                },
                "managedDisk": {
                  "description": "ManagedDisk: The managedDisk.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource Id",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "osState": {
                  "description": "OsState: The OS State.",
                  "type": "string"
                },
                "osType": {
                  "description": "OsType: This property allows you to specify the type of the OS that is included in the disk if creating a VM from a\ncustom image.\nPossible values are:\nWindows\nLinux",
                  "type": "string"
                },
                "snapshot": {
                  "description": "Snapshot: The snapshot.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource Id",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "storageAccountType": {
                  "description": "StorageAccountType: Specifies the storage account type for the managed disk. NOTE: UltraSSD_LRS can only be used with\ndata disks, it cannot be used with OS Disk.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "zoneResilient": {
              "description": "ZoneResilient: Specifies whether an image is zone resilient or not. Default is false. Zone resilient images can be\ncreated only in regions that provide Zone Redundant Storage (ZRS).",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags",
          "type": "object"
        },
        "type": {
          "description": "Type: Resource type",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
