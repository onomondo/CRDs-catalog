{
  "description": "Generator information:\n- Generated from: /servicebus/resource-manager/Microsoft.ServiceBus/preview/2021-01-01-preview/Queue.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ServiceBus/namespaces/{namespaceName}/queues/{queueName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "autoDeleteOnIdle": {
          "description": "AutoDeleteOnIdle: ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration\nis 5 minutes.",
          "type": "string"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "minLength": 1,
          "type": "string"
        },
        "deadLetteringOnMessageExpiration": {
          "description": "DeadLetteringOnMessageExpiration: A value that indicates whether this queue has dead letter support when a message\nexpires.",
          "type": "boolean"
        },
        "defaultMessageTimeToLive": {
          "description": "DefaultMessageTimeToLive: ISO 8601 default message timespan to live value. This is the duration after which the message\nexpires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not\nset on a message itself.",
          "type": "string"
        },
        "duplicateDetectionHistoryTimeWindow": {
          "description": "DuplicateDetectionHistoryTimeWindow: ISO 8601 timeSpan structure that defines the duration of the duplicate detection\nhistory. The default value is 10 minutes.",
          "type": "string"
        },
        "enableBatchedOperations": {
          "description": "EnableBatchedOperations: Value that indicates whether server-side batched operations are enabled.",
          "type": "boolean"
        },
        "enableExpress": {
          "description": "EnableExpress: A value that indicates whether Express Entities are enabled. An express queue holds a message in memory\ntemporarily before writing it to persistent storage.",
          "type": "boolean"
        },
        "enablePartitioning": {
          "description": "EnablePartitioning: A value that indicates whether the queue is to be partitioned across multiple message brokers.",
          "type": "boolean"
        },
        "forwardDeadLetteredMessagesTo": {
          "description": "ForwardDeadLetteredMessagesTo: Queue/Topic name to forward the Dead Letter message",
          "type": "string"
        },
        "forwardTo": {
          "description": "ForwardTo: Queue/Topic name to forward the messages",
          "type": "string"
        },
        "lockDuration": {
          "description": "LockDuration: ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for\nother receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.",
          "type": "string"
        },
        "maxDeliveryCount": {
          "description": "MaxDeliveryCount: The maximum delivery count. A message is automatically deadlettered after this number of deliveries.\ndefault value is 10.",
          "type": "integer"
        },
        "maxSizeInMegabytes": {
          "description": "MaxSizeInMegabytes: The maximum size of the queue in megabytes, which is the size of memory allocated for the queue.\nDefault is 1024.",
          "type": "integer"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a servicebus.azure.com/Namespace resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "requiresDuplicateDetection": {
          "description": "RequiresDuplicateDetection: A value indicating if this queue requires duplicate detection.",
          "type": "boolean"
        },
        "requiresSession": {
          "description": "RequiresSession: A value that indicates whether the queue supports the concept of sessions.",
          "type": "boolean"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "accessedAt": {
          "description": "AccessedAt: Last time a message was sent, or the last time there was a receive request to this queue.",
          "type": "string"
        },
        "autoDeleteOnIdle": {
          "description": "AutoDeleteOnIdle: ISO 8061 timeSpan idle interval after which the queue is automatically deleted. The minimum duration\nis 5 minutes.",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "countDetails": {
          "description": "CountDetails: Message Count Details.",
          "properties": {
            "activeMessageCount": {
              "description": "ActiveMessageCount: Number of active messages in the queue, topic, or subscription.",
              "type": "integer"
            },
            "deadLetterMessageCount": {
              "description": "DeadLetterMessageCount: Number of messages that are dead lettered.",
              "type": "integer"
            },
            "scheduledMessageCount": {
              "description": "ScheduledMessageCount: Number of scheduled messages.",
              "type": "integer"
            },
            "transferDeadLetterMessageCount": {
              "description": "TransferDeadLetterMessageCount: Number of messages transferred into dead letters.",
              "type": "integer"
            },
            "transferMessageCount": {
              "description": "TransferMessageCount: Number of messages transferred to another queue, topic, or subscription.",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "createdAt": {
          "description": "CreatedAt: The exact time the message was created.",
          "type": "string"
        },
        "deadLetteringOnMessageExpiration": {
          "description": "DeadLetteringOnMessageExpiration: A value that indicates whether this queue has dead letter support when a message\nexpires.",
          "type": "boolean"
        },
        "defaultMessageTimeToLive": {
          "description": "DefaultMessageTimeToLive: ISO 8601 default message timespan to live value. This is the duration after which the message\nexpires, starting from when the message is sent to Service Bus. This is the default value used when TimeToLive is not\nset on a message itself.",
          "type": "string"
        },
        "duplicateDetectionHistoryTimeWindow": {
          "description": "DuplicateDetectionHistoryTimeWindow: ISO 8601 timeSpan structure that defines the duration of the duplicate detection\nhistory. The default value is 10 minutes.",
          "type": "string"
        },
        "enableBatchedOperations": {
          "description": "EnableBatchedOperations: Value that indicates whether server-side batched operations are enabled.",
          "type": "boolean"
        },
        "enableExpress": {
          "description": "EnableExpress: A value that indicates whether Express Entities are enabled. An express queue holds a message in memory\ntemporarily before writing it to persistent storage.",
          "type": "boolean"
        },
        "enablePartitioning": {
          "description": "EnablePartitioning: A value that indicates whether the queue is to be partitioned across multiple message brokers.",
          "type": "boolean"
        },
        "forwardDeadLetteredMessagesTo": {
          "description": "ForwardDeadLetteredMessagesTo: Queue/Topic name to forward the Dead Letter message",
          "type": "string"
        },
        "forwardTo": {
          "description": "ForwardTo: Queue/Topic name to forward the messages",
          "type": "string"
        },
        "id": {
          "description": "Id: Resource Id",
          "type": "string"
        },
        "lockDuration": {
          "description": "LockDuration: ISO 8601 timespan duration of a peek-lock; that is, the amount of time that the message is locked for\nother receivers. The maximum value for LockDuration is 5 minutes; the default value is 1 minute.",
          "type": "string"
        },
        "maxDeliveryCount": {
          "description": "MaxDeliveryCount: The maximum delivery count. A message is automatically deadlettered after this number of deliveries.\ndefault value is 10.",
          "type": "integer"
        },
        "maxSizeInMegabytes": {
          "description": "MaxSizeInMegabytes: The maximum size of the queue in megabytes, which is the size of memory allocated for the queue.\nDefault is 1024.",
          "type": "integer"
        },
        "messageCount": {
          "description": "MessageCount: The number of messages in the queue.",
          "type": "integer"
        },
        "name": {
          "description": "Name: Resource name",
          "type": "string"
        },
        "requiresDuplicateDetection": {
          "description": "RequiresDuplicateDetection: A value indicating if this queue requires duplicate detection.",
          "type": "boolean"
        },
        "requiresSession": {
          "description": "RequiresSession: A value that indicates whether the queue supports the concept of sessions.",
          "type": "boolean"
        },
        "sizeInBytes": {
          "description": "SizeInBytes: The size of the queue, in bytes.",
          "type": "integer"
        },
        "status": {
          "description": "Status: Enumerates the possible values for the status of a messaging entity.",
          "type": "string"
        },
        "systemData": {
          "description": "SystemData: The system meta data relating to this resource.",
          "properties": {
            "createdAt": {
              "description": "CreatedAt: The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "createdBy": {
              "description": "CreatedBy: The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "CreatedByType: The type of identity that created the resource.",
              "type": "string"
            },
            "lastModifiedAt": {
              "description": "LastModifiedAt: The type of identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "LastModifiedBy: The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "LastModifiedByType: The type of identity that last modified the resource.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "type": {
          "description": "Type: Resource type",
          "type": "string"
        },
        "updatedAt": {
          "description": "UpdatedAt: The exact time the message was updated.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
