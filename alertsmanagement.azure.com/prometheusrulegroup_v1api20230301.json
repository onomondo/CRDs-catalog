{
  "description": "Generator information:\n- Generated from: /alertsmanagement/resource-manager/Microsoft.AlertsManagement/stable/2023-03-01/PrometheusRuleGroups.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.AlertsManagement/prometheusRuleGroups/{ruleGroupName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "pattern": "^[^:@/#{}%&+*<>?]+$",
          "type": "string"
        },
        "clusterName": {
          "description": "ClusterName: Apply rule to data from a specific cluster.",
          "type": "string"
        },
        "description": {
          "description": "Description: Rule group description.",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled: Enable/disable rule group.",
          "type": "boolean"
        },
        "interval": {
          "description": "Interval: The interval in which to run the Prometheus rule group represented in ISO 8601 duration format. Should be\nbetween 1 and 15 minutes",
          "type": "string"
        },
        "location": {
          "description": "Location: The geo-location where the resource lives",
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "rules": {
          "description": "Rules: Defines the rules in the Prometheus rule group.",
          "items": {
            "description": "An Azure Prometheus alerting or recording rule.",
            "properties": {
              "actions": {
                "description": "Actions: Actions that are performed when the alert rule becomes active, and when an alert condition is resolved.",
                "items": {
                  "description": "An alert action. Only relevant for alerts.",
                  "properties": {
                    "actionGroupReference": {
                      "description": "ActionGroupReference: The resource id of the action group to use.",
                      "properties": {
                        "armId": {
                          "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                          "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                          "type": "string"
                        },
                        "group": {
                          "description": "Group is the Kubernetes group of the resource.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the Kubernetes kind of the resource.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the Kubernetes name of the resource.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "actionProperties": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "ActionProperties: The properties of an action group object.",
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "alert": {
                "description": "Alert: Alert rule name.",
                "type": "string"
              },
              "annotations": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Annotations: The annotations clause specifies a set of informational labels that can be used to store longer additional\ninformation such as alert descriptions or runbook links. The annotation values can be templated.",
                "type": "object"
              },
              "enabled": {
                "description": "Enabled: Enable/disable rule.",
                "type": "boolean"
              },
              "expression": {
                "description": "Expression: The PromQL expression to evaluate. https://prometheus.io/docs/prometheus/latest/querying/basics/. Evaluated\nperiodically as given by 'interval', and the result recorded as a new set of time series with the metric name as given\nby 'record'.",
                "type": "string"
              },
              "for": {
                "description": "For: The amount of time alert must be active before firing.",
                "type": "string"
              },
              "labels": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Labels: Labels to add or overwrite before storing the result.",
                "type": "object"
              },
              "record": {
                "description": "Record: Recorded metrics name.",
                "type": "string"
              },
              "resolveConfiguration": {
                "description": "ResolveConfiguration: Defines the configuration for resolving fired alerts. Only relevant for alerts.",
                "properties": {
                  "autoResolved": {
                    "description": "AutoResolved: Enable alert auto-resolution.",
                    "type": "boolean"
                  },
                  "timeToResolve": {
                    "description": "TimeToResolve: Alert auto-resolution timeout.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "severity": {
                "description": "Severity: The severity of the alerts fired by the rule. Must be between 0 and 4.",
                "type": "integer"
              }
            },
            "required": [
              "expression"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "scopesReferences": {
          "description": "ScopesReferences: Target Azure Monitor workspaces resource ids. This api-version is currently limited to creating with\none scope. This may change in future.",
          "items": {
            "description": "ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID",
            "properties": {
              "armId": {
                "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                "type": "string"
              },
              "group": {
                "description": "Group is the Kubernetes group of the resource.",
                "type": "string"
              },
              "kind": {
                "description": "Kind is the Kubernetes kind of the resource.",
                "type": "string"
              },
              "name": {
                "description": "Name is the Kubernetes name of the resource.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        }
      },
      "required": [
        "location",
        "owner",
        "rules",
        "scopesReferences"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "clusterName": {
          "description": "ClusterName: Apply rule to data from a specific cluster.",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "description": {
          "description": "Description: Rule group description.",
          "type": "string"
        },
        "enabled": {
          "description": "Enabled: Enable/disable rule group.",
          "type": "boolean"
        },
        "id": {
          "description": "Id: Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string"
        },
        "interval": {
          "description": "Interval: The interval in which to run the Prometheus rule group represented in ISO 8601 duration format. Should be\nbetween 1 and 15 minutes",
          "type": "string"
        },
        "location": {
          "description": "Location: The geo-location where the resource lives",
          "type": "string"
        },
        "name": {
          "description": "Name: The name of the resource",
          "type": "string"
        },
        "rules": {
          "description": "Rules: Defines the rules in the Prometheus rule group.",
          "items": {
            "description": "An Azure Prometheus alerting or recording rule.",
            "properties": {
              "actions": {
                "description": "Actions: Actions that are performed when the alert rule becomes active, and when an alert condition is resolved.",
                "items": {
                  "description": "An alert action. Only relevant for alerts.",
                  "properties": {
                    "actionGroupId": {
                      "description": "ActionGroupId: The resource id of the action group to use.",
                      "type": "string"
                    },
                    "actionProperties": {
                      "additionalProperties": {
                        "type": "string"
                      },
                      "description": "ActionProperties: The properties of an action group object.",
                      "type": "object"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "alert": {
                "description": "Alert: Alert rule name.",
                "type": "string"
              },
              "annotations": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Annotations: The annotations clause specifies a set of informational labels that can be used to store longer additional\ninformation such as alert descriptions or runbook links. The annotation values can be templated.",
                "type": "object"
              },
              "enabled": {
                "description": "Enabled: Enable/disable rule.",
                "type": "boolean"
              },
              "expression": {
                "description": "Expression: The PromQL expression to evaluate. https://prometheus.io/docs/prometheus/latest/querying/basics/. Evaluated\nperiodically as given by 'interval', and the result recorded as a new set of time series with the metric name as given\nby 'record'.",
                "type": "string"
              },
              "for": {
                "description": "For: The amount of time alert must be active before firing.",
                "type": "string"
              },
              "labels": {
                "additionalProperties": {
                  "type": "string"
                },
                "description": "Labels: Labels to add or overwrite before storing the result.",
                "type": "object"
              },
              "record": {
                "description": "Record: Recorded metrics name.",
                "type": "string"
              },
              "resolveConfiguration": {
                "description": "ResolveConfiguration: Defines the configuration for resolving fired alerts. Only relevant for alerts.",
                "properties": {
                  "autoResolved": {
                    "description": "AutoResolved: Enable alert auto-resolution.",
                    "type": "boolean"
                  },
                  "timeToResolve": {
                    "description": "TimeToResolve: Alert auto-resolution timeout.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "severity": {
                "description": "Severity: The severity of the alerts fired by the rule. Must be between 0 and 4.",
                "type": "integer"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "scopes": {
          "description": "Scopes: Target Azure Monitor workspaces resource ids. This api-version is currently limited to creating with one scope.\nThis may change in future.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "systemData": {
          "description": "SystemData: Azure Resource Manager metadata containing createdBy and modifiedBy information.",
          "properties": {
            "createdAt": {
              "description": "CreatedAt: The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "createdBy": {
              "description": "CreatedBy: The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "CreatedByType: The type of identity that created the resource.",
              "type": "string"
            },
            "lastModifiedAt": {
              "description": "LastModifiedAt: The timestamp of resource last modification (UTC)",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "LastModifiedBy: The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "LastModifiedByType: The type of identity that last modified the resource.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "type": {
          "description": "Type: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
