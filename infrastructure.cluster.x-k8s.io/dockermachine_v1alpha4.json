{
  "description": "DockerMachine is the Schema for the dockermachines API.\n\nDeprecated: This type will be removed in one of the next releases.",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "description": "DockerMachineSpec defines the desired state of DockerMachine.",
      "properties": {
        "bootstrapped": {
          "description": "Bootstrapped is true when the kubeadm bootstrapping has been run\nagainst this machine",
          "type": "boolean"
        },
        "customImage": {
          "description": "CustomImage allows customizing the container image that is used for\nrunning the machine",
          "type": "string"
        },
        "extraMounts": {
          "description": "ExtraMounts describes additional mount points for the node container\nThese may be used to bind a hostPath",
          "items": {
            "description": "Mount specifies a host volume to mount into a container.\nThis is a simplified version of kind v1alpha4.Mount types.",
            "properties": {
              "containerPath": {
                "description": "Path of the mount within the container.",
                "type": "string"
              },
              "hostPath": {
                "description": "Path of the mount on the host. If the hostPath doesn't exist, then runtimes\nshould report error. If the hostpath is a symbolic link, runtimes should\nfollow the symlink and mount the real destination to container.",
                "type": "string"
              },
              "readOnly": {
                "description": "If set, the mount is read-only.",
                "type": "boolean"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "preLoadImages": {
          "description": "PreLoadImages allows to pre-load images in a newly created machine. This can be used to\nspeed up tests by avoiding e.g. to download CNI images on all the containers.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "providerID": {
          "description": "ProviderID will be the container name in ProviderID format (docker:////<containername>)",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "DockerMachineStatus defines the observed state of DockerMachine.",
      "properties": {
        "addresses": {
          "description": "Addresses contains the associated addresses for the docker machine.",
          "items": {
            "description": "MachineAddress contains information for the node's address.",
            "properties": {
              "address": {
                "description": "address is the machine address.",
                "type": "string"
              },
              "type": {
                "description": "type is the machine address type, one of Hostname, ExternalIP or InternalIP.",
                "type": "string"
              }
            },
            "required": [
              "address",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "conditions": {
          "description": "Conditions defines current service state of the DockerMachine.",
          "items": {
            "description": "Condition defines an observation of a Cluster API resource operational state.",
            "properties": {
              "lastTransitionTime": {
                "description": "lastTransitionTime is the last time the condition transitioned from one status to another.\nThis should be when the underlying condition changed. If that is not known, then using the time when\nthe API field changed is acceptable.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "message is a human readable message indicating details about the transition.\nThis field may be empty.",
                "type": "string"
              },
              "reason": {
                "description": "reason is the reason for the condition's last transition in CamelCase.\nThe specific API may choose whether or not this field is considered a guaranteed API.\nThis field may not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "severity provides an explicit classification of Reason code, so the users or machines can immediately\nunderstand the current situation and act accordingly.\nThe Severity field MUST be set only when Status=False.",
                "type": "string"
              },
              "status": {
                "description": "status of the condition, one of True, False, Unknown.",
                "type": "string"
              },
              "type": {
                "description": "type of condition in CamelCase or in foo.example.com/CamelCase.\nMany .condition.type values are consistent across resources like Available, but because arbitrary conditions\ncan be useful (see .node.status.conditions), the ability to deconflict is important.",
                "type": "string"
              }
            },
            "required": [
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "loadBalancerConfigured": {
          "description": "LoadBalancerConfigured denotes that the machine has been\nadded to the load balancer",
          "type": "boolean"
        },
        "ready": {
          "description": "Ready denotes that the machine (docker container) is ready",
          "type": "boolean"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
