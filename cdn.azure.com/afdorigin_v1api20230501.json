{
  "description": "Generator information:\n- Generated from: /cdn/resource-manager/Microsoft.Cdn/stable/2023-05-01/afdx.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/originGroups/{originGroupName}/origins/{originName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "azureOrigin": {
          "description": "AzureOrigin: Resource reference to the Azure origin resource.",
          "properties": {
            "reference": {
              "description": "Reference: Resource ID.",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "enabledState": {
          "description": "EnabledState: Whether to enable health probes to be made against backends defined under backendPools. Health probes can\nonly be disabled if there is a single enabled backend in single enabled backend pool.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string"
        },
        "enforceCertificateNameCheck": {
          "description": "EnforceCertificateNameCheck: Whether to enable certificate name check at origin level",
          "type": "boolean"
        },
        "hostName": {
          "description": "HostName: The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be\nunique across all origins in an endpoint.",
          "type": "string"
        },
        "hostNameFromConfig": {
          "description": "HostNameFromConfig: The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This\nshould be unique across all origins in an endpoint.",
          "properties": {
            "key": {
              "description": "Key is the key in the Kubernetes configmap being referenced",
              "type": "string"
            },
            "name": {
              "description": "Name is the name of the Kubernetes configmap being referenced.\nThe configmap must be in the same namespace as the resource",
              "type": "string"
            }
          },
          "required": [
            "key",
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "httpPort": {
          "description": "HttpPort: The value of the HTTP port. Must be between 1 and 65535.",
          "maximum": 65535,
          "minimum": 1,
          "type": "integer"
        },
        "httpsPort": {
          "description": "HttpsPort: The value of the HTTPS port. Must be between 1 and 65535.",
          "maximum": 65535,
          "minimum": 1,
          "type": "integer"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "originHostHeader": {
          "description": "OriginHostHeader: The host header value sent to the origin with each request. If you leave this blank, the request\nhostname determines this value. Azure Front Door origins, such as Web Apps, Blob Storage, and Cloud Services require\nthis host header value to match the origin hostname by default. This overrides the host header defined at Endpoint",
          "type": "string"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a cdn.azure.com/AfdOriginGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "priority": {
          "description": "Priority: Priority of origin in given origin group for load balancing. Higher priorities will not be used for load\nbalancing if any lower priority origin is healthy.Must be between 1 and 5",
          "maximum": 5,
          "minimum": 1,
          "type": "integer"
        },
        "sharedPrivateLinkResource": {
          "description": "SharedPrivateLinkResource: The properties of the private link resource for private origin.",
          "properties": {
            "groupId": {
              "description": "GroupId: The group id from the provider of resource the shared private link resource is for.",
              "type": "string"
            },
            "privateLink": {
              "description": "PrivateLink: The resource id of the resource the shared private link resource is for.",
              "properties": {
                "reference": {
                  "description": "Reference: Resource ID.",
                  "properties": {
                    "armId": {
                      "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                      "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                      "type": "string"
                    },
                    "group": {
                      "description": "Group is the Kubernetes group of the resource.",
                      "type": "string"
                    },
                    "kind": {
                      "description": "Kind is the Kubernetes kind of the resource.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the Kubernetes name of the resource.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "privateLinkLocation": {
              "description": "PrivateLinkLocation: The location of the shared private link resource",
              "type": "string"
            },
            "requestMessage": {
              "description": "RequestMessage: The request message for requesting approval of the shared private link resource.",
              "type": "string"
            },
            "status": {
              "description": "Status: Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.",
              "enum": [
                "Approved",
                "Disconnected",
                "Pending",
                "Rejected",
                "Timeout"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "weight": {
          "description": "Weight: Weight of the origin in given origin group for load balancing. Must be between 1 and 1000",
          "maximum": 1000,
          "minimum": 1,
          "type": "integer"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "azureOrigin": {
          "description": "AzureOrigin: Resource reference to the Azure origin resource.",
          "properties": {
            "id": {
              "description": "Id: Resource ID.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "deploymentStatus": {
          "type": "string"
        },
        "enabledState": {
          "description": "EnabledState: Whether to enable health probes to be made against backends defined under backendPools. Health probes can\nonly be disabled if there is a single enabled backend in single enabled backend pool.",
          "type": "string"
        },
        "enforceCertificateNameCheck": {
          "description": "EnforceCertificateNameCheck: Whether to enable certificate name check at origin level",
          "type": "boolean"
        },
        "hostName": {
          "description": "HostName: The address of the origin. Domain names, IPv4 addresses, and IPv6 addresses are supported.This should be\nunique across all origins in an endpoint.",
          "type": "string"
        },
        "httpPort": {
          "description": "HttpPort: The value of the HTTP port. Must be between 1 and 65535.",
          "type": "integer"
        },
        "httpsPort": {
          "description": "HttpsPort: The value of the HTTPS port. Must be between 1 and 65535.",
          "type": "integer"
        },
        "id": {
          "description": "Id: Resource ID.",
          "type": "string"
        },
        "name": {
          "description": "Name: Resource name.",
          "type": "string"
        },
        "originGroupName": {
          "description": "OriginGroupName: The name of the origin group which contains this origin.",
          "type": "string"
        },
        "originHostHeader": {
          "description": "OriginHostHeader: The host header value sent to the origin with each request. If you leave this blank, the request\nhostname determines this value. Azure Front Door origins, such as Web Apps, Blob Storage, and Cloud Services require\nthis host header value to match the origin hostname by default. This overrides the host header defined at Endpoint",
          "type": "string"
        },
        "priority": {
          "description": "Priority: Priority of origin in given origin group for load balancing. Higher priorities will not be used for load\nbalancing if any lower priority origin is healthy.Must be between 1 and 5",
          "type": "integer"
        },
        "provisioningState": {
          "description": "ProvisioningState: Provisioning status",
          "type": "string"
        },
        "sharedPrivateLinkResource": {
          "description": "SharedPrivateLinkResource: The properties of the private link resource for private origin.",
          "properties": {
            "groupId": {
              "description": "GroupId: The group id from the provider of resource the shared private link resource is for.",
              "type": "string"
            },
            "privateLink": {
              "description": "PrivateLink: The resource id of the resource the shared private link resource is for.",
              "properties": {
                "id": {
                  "description": "Id: Resource ID.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "privateLinkLocation": {
              "description": "PrivateLinkLocation: The location of the shared private link resource",
              "type": "string"
            },
            "requestMessage": {
              "description": "RequestMessage: The request message for requesting approval of the shared private link resource.",
              "type": "string"
            },
            "status": {
              "description": "Status: Status of the shared private link resource. Can be Pending, Approved, Rejected, Disconnected, or Timeout.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "systemData": {
          "description": "SystemData: Read only system data",
          "properties": {
            "createdAt": {
              "description": "CreatedAt: The timestamp of resource creation (UTC)",
              "type": "string"
            },
            "createdBy": {
              "description": "CreatedBy: An identifier for the identity that created the resource",
              "type": "string"
            },
            "createdByType": {
              "description": "CreatedByType: The type of identity that created the resource",
              "type": "string"
            },
            "lastModifiedAt": {
              "description": "LastModifiedAt: The timestamp of resource last modification (UTC)",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "LastModifiedBy: An identifier for the identity that last modified the resource",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "LastModifiedByType: The type of identity that last modified the resource",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "type": {
          "description": "Type: Resource type.",
          "type": "string"
        },
        "weight": {
          "description": "Weight: Weight of the origin in given origin group for load balancing. Must be between 1 and 1000",
          "type": "integer"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
