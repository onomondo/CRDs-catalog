{
  "description": "Generator information:\n- Generated from: /cdn/resource-manager/Microsoft.Cdn/stable/2023-05-01/afdx.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Cdn/profiles/{profileName}/ruleSets/{ruleSetName}/rules/{ruleName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "actions": {
          "description": "Actions: A list of actions that are executed when all the conditions of a rule are satisfied.",
          "items": {
            "description": "An action for the delivery rule.",
            "properties": {
              "cacheExpiration": {
                "description": "CacheExpiration: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "enum": [
                      "CacheExpiration"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "cacheBehavior": {
                        "description": "CacheBehavior: Caching behavior for the requests",
                        "enum": [
                          "BypassCache",
                          "Override",
                          "SetIfMissing"
                        ],
                        "type": "string"
                      },
                      "cacheDuration": {
                        "description": "CacheDuration: The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss",
                        "type": "string"
                      },
                      "cacheType": {
                        "description": "CacheType: The level at which the content needs to be cached.",
                        "enum": [
                          "All"
                        ],
                        "type": "string"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleCacheExpirationActionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "cacheBehavior",
                      "cacheType",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "cacheKeyQueryString": {
                "description": "CacheKeyQueryString: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "enum": [
                      "CacheKeyQueryString"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "queryParameters": {
                        "description": "QueryParameters: query parameters to include or exclude (comma separated).",
                        "type": "string"
                      },
                      "queryStringBehavior": {
                        "description": "QueryStringBehavior: Caching behavior for the requests",
                        "enum": [
                          "Exclude",
                          "ExcludeAll",
                          "Include",
                          "IncludeAll"
                        ],
                        "type": "string"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleCacheKeyQueryStringBehaviorActionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "queryStringBehavior",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "modifyRequestHeader": {
                "description": "ModifyRequestHeader: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "enum": [
                      "ModifyRequestHeader"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "headerAction": {
                        "description": "HeaderAction: Action to perform",
                        "enum": [
                          "Append",
                          "Delete",
                          "Overwrite"
                        ],
                        "type": "string"
                      },
                      "headerName": {
                        "description": "HeaderName: Name of the header to modify",
                        "type": "string"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleHeaderActionParameters"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "description": "Value: Value for the specified action",
                        "type": "string"
                      }
                    },
                    "required": [
                      "headerAction",
                      "headerName",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "modifyResponseHeader": {
                "description": "ModifyResponseHeader: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "enum": [
                      "ModifyResponseHeader"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "headerAction": {
                        "description": "HeaderAction: Action to perform",
                        "enum": [
                          "Append",
                          "Delete",
                          "Overwrite"
                        ],
                        "type": "string"
                      },
                      "headerName": {
                        "description": "HeaderName: Name of the header to modify",
                        "type": "string"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleHeaderActionParameters"
                        ],
                        "type": "string"
                      },
                      "value": {
                        "description": "Value: Value for the specified action",
                        "type": "string"
                      }
                    },
                    "required": [
                      "headerAction",
                      "headerName",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "originGroupOverride": {
                "description": "OriginGroupOverride: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "enum": [
                      "OriginGroupOverride"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "originGroup": {
                        "description": "OriginGroup: defines the OriginGroup that would override the DefaultOriginGroup.",
                        "properties": {
                          "reference": {
                            "description": "Reference: Resource ID.",
                            "properties": {
                              "armId": {
                                "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                                "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                                "type": "string"
                              },
                              "group": {
                                "description": "Group is the Kubernetes group of the resource.",
                                "type": "string"
                              },
                              "kind": {
                                "description": "Kind is the Kubernetes kind of the resource.",
                                "type": "string"
                              },
                              "name": {
                                "description": "Name is the Kubernetes name of the resource.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleOriginGroupOverrideActionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "originGroup",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "routeConfigurationOverride": {
                "description": "RouteConfigurationOverride: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "enum": [
                      "RouteConfigurationOverride"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "cacheConfiguration": {
                        "description": "CacheConfiguration: The caching configuration associated with this rule. To disable caching, do not provide a\ncacheConfiguration object.",
                        "properties": {
                          "cacheBehavior": {
                            "description": "CacheBehavior: Caching behavior for the requests",
                            "enum": [
                              "HonorOrigin",
                              "OverrideAlways",
                              "OverrideIfOriginMissing"
                            ],
                            "type": "string"
                          },
                          "cacheDuration": {
                            "description": "CacheDuration: The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss",
                            "type": "string"
                          },
                          "isCompressionEnabled": {
                            "description": "IsCompressionEnabled: Indicates whether content compression is enabled. If compression is enabled, content will be\nserved as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when\nrequested content is smaller than 1 byte or larger than 1 MB.",
                            "enum": [
                              "Disabled",
                              "Enabled"
                            ],
                            "type": "string"
                          },
                          "queryParameters": {
                            "description": "QueryParameters: query parameters to include or exclude (comma separated).",
                            "type": "string"
                          },
                          "queryStringCachingBehavior": {
                            "description": "QueryStringCachingBehavior: Defines how Frontdoor caches requests that include query strings. You can ignore any query\nstrings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query\nstrings.",
                            "enum": [
                              "IgnoreQueryString",
                              "IgnoreSpecifiedQueryStrings",
                              "IncludeSpecifiedQueryStrings",
                              "UseQueryString"
                            ],
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "originGroupOverride": {
                        "description": "OriginGroupOverride: A reference to the origin group override configuration. Leave empty to use the default origin group\non route.",
                        "properties": {
                          "forwardingProtocol": {
                            "description": "ForwardingProtocol: Protocol this rule will use when forwarding traffic to backends.",
                            "enum": [
                              "HttpOnly",
                              "HttpsOnly",
                              "MatchRequest"
                            ],
                            "type": "string"
                          },
                          "originGroup": {
                            "description": "OriginGroup: defines the OriginGroup that would override the DefaultOriginGroup on route.",
                            "properties": {
                              "reference": {
                                "description": "Reference: Resource ID.",
                                "properties": {
                                  "armId": {
                                    "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                                    "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                                    "type": "string"
                                  },
                                  "group": {
                                    "description": "Group is the Kubernetes group of the resource.",
                                    "type": "string"
                                  },
                                  "kind": {
                                    "description": "Kind is the Kubernetes kind of the resource.",
                                    "type": "string"
                                  },
                                  "name": {
                                    "description": "Name is the Kubernetes name of the resource.",
                                    "type": "string"
                                  }
                                },
                                "type": "object",
                                "additionalProperties": false
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleRouteConfigurationOverrideActionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "urlRedirect": {
                "description": "UrlRedirect: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "enum": [
                      "UrlRedirect"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "customFragment": {
                        "description": "CustomFragment: Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include\nthe #.",
                        "type": "string"
                      },
                      "customHostname": {
                        "description": "CustomHostname: Host to redirect. Leave empty to use the incoming host as the destination host.",
                        "type": "string"
                      },
                      "customPath": {
                        "description": "CustomPath: The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path\nas destination path.",
                        "type": "string"
                      },
                      "customQueryString": {
                        "description": "CustomQueryString: The set of query strings to be placed in the redirect URL. Setting this value would replace any\nexisting query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format.\n? and & will be added automatically so do not include them.",
                        "type": "string"
                      },
                      "destinationProtocol": {
                        "description": "DestinationProtocol: Protocol to use for the redirect. The default value is MatchRequest",
                        "enum": [
                          "Http",
                          "Https",
                          "MatchRequest"
                        ],
                        "type": "string"
                      },
                      "redirectType": {
                        "description": "RedirectType: The redirect type the rule will use when redirecting traffic.",
                        "enum": [
                          "Found",
                          "Moved",
                          "PermanentRedirect",
                          "TemporaryRedirect"
                        ],
                        "type": "string"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleUrlRedirectActionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "redirectType",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "urlRewrite": {
                "description": "UrlRewrite: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "enum": [
                      "UrlRewrite"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "destination": {
                        "description": "Destination: Define the relative URL to which the above requests will be rewritten by.",
                        "type": "string"
                      },
                      "preserveUnmatchedPath": {
                        "description": "PreserveUnmatchedPath: Whether to preserve unmatched path. Default value is true.",
                        "type": "boolean"
                      },
                      "sourcePattern": {
                        "description": "SourcePattern: define a request URI pattern that identifies the type of requests that may be rewritten. If value is\nblank, all strings are matched.",
                        "type": "string"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleUrlRewriteActionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "destination",
                      "sourcePattern",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "urlSigning": {
                "description": "UrlSigning: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "enum": [
                      "UrlSigning"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "algorithm": {
                        "description": "Algorithm: Algorithm to use for URL signing",
                        "enum": [
                          "SHA256"
                        ],
                        "type": "string"
                      },
                      "parameterNameOverride": {
                        "description": "ParameterNameOverride: Defines which query string parameters in the url to be considered for expires, key id etc.",
                        "items": {
                          "description": "Defines how to identify a parameter for a specific purpose e.g. expires",
                          "properties": {
                            "paramIndicator": {
                              "description": "ParamIndicator: Indicates the purpose of the parameter",
                              "enum": [
                                "Expires",
                                "KeyId",
                                "Signature"
                              ],
                              "type": "string"
                            },
                            "paramName": {
                              "description": "ParamName: Parameter name",
                              "type": "string"
                            }
                          },
                          "required": [
                            "paramIndicator",
                            "paramName"
                          ],
                          "type": "object",
                          "additionalProperties": false
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleUrlSigningActionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "matchProcessingBehavior": {
          "description": "MatchProcessingBehavior: If this rule is a match should the rules engine continue running the remaining rules or stop.\nIf not present, defaults to Continue.",
          "enum": [
            "Continue",
            "Stop"
          ],
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "order": {
          "description": "Order: The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,\u2026\u2026\u2026}. A rule with a\nlesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not\nrequire any condition and actions listed in it will always be applied.",
          "type": "integer"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a cdn.azure.com/RuleSet resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "ruleconditions": {
          "description": "RuleConditions: A list of conditions that must be matched for the actions to be executed",
          "items": {
            "description": "A condition for the delivery rule.",
            "properties": {
              "clientPort": {
                "description": "ClientPort: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "ClientPort"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Any",
                          "BeginsWith",
                          "Contains",
                          "EndsWith",
                          "Equal",
                          "GreaterThan",
                          "GreaterThanOrEqual",
                          "LessThan",
                          "LessThanOrEqual",
                          "RegEx"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleClientPortConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "cookies": {
                "description": "Cookies: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "Cookies"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Any",
                          "BeginsWith",
                          "Contains",
                          "EndsWith",
                          "Equal",
                          "GreaterThan",
                          "GreaterThanOrEqual",
                          "LessThan",
                          "LessThanOrEqual",
                          "RegEx"
                        ],
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector: Name of Cookies to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleCookiesConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "hostName": {
                "description": "HostName: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "HostName"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Any",
                          "BeginsWith",
                          "Contains",
                          "EndsWith",
                          "Equal",
                          "GreaterThan",
                          "GreaterThanOrEqual",
                          "LessThan",
                          "LessThanOrEqual",
                          "RegEx"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleHostNameConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "httpVersion": {
                "description": "HttpVersion: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "HttpVersion"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Equal"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleHttpVersionConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "isDevice": {
                "description": "IsDevice: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "IsDevice"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "enum": [
                            "Desktop",
                            "Mobile"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Equal"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleIsDeviceConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "postArgs": {
                "description": "PostArgs: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "PostArgs"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Any",
                          "BeginsWith",
                          "Contains",
                          "EndsWith",
                          "Equal",
                          "GreaterThan",
                          "GreaterThanOrEqual",
                          "LessThan",
                          "LessThanOrEqual",
                          "RegEx"
                        ],
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector: Name of PostArg to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRulePostArgsConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "queryString": {
                "description": "QueryString: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "QueryString"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Any",
                          "BeginsWith",
                          "Contains",
                          "EndsWith",
                          "Equal",
                          "GreaterThan",
                          "GreaterThanOrEqual",
                          "LessThan",
                          "LessThanOrEqual",
                          "RegEx"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleQueryStringConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "remoteAddress": {
                "description": "RemoteAddress: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "RemoteAddress"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: Match values to match against. The operator will apply to each value in here with OR semantics. If any of\nthem match the variable with the given operator this match condition is considered a match.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Any",
                          "GeoMatch",
                          "IPMatch"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleRemoteAddressConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "requestBody": {
                "description": "RequestBody: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "RequestBody"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Any",
                          "BeginsWith",
                          "Contains",
                          "EndsWith",
                          "Equal",
                          "GreaterThan",
                          "GreaterThanOrEqual",
                          "LessThan",
                          "LessThanOrEqual",
                          "RegEx"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleRequestBodyConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "requestHeader": {
                "description": "RequestHeader: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "RequestHeader"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Any",
                          "BeginsWith",
                          "Contains",
                          "EndsWith",
                          "Equal",
                          "GreaterThan",
                          "GreaterThanOrEqual",
                          "LessThan",
                          "LessThanOrEqual",
                          "RegEx"
                        ],
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector: Name of Header to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleRequestHeaderConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "requestMethod": {
                "description": "RequestMethod: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "RequestMethod"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "enum": [
                            "DELETE",
                            "GET",
                            "HEAD",
                            "OPTIONS",
                            "POST",
                            "PUT",
                            "TRACE"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Equal"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleRequestMethodConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "requestScheme": {
                "description": "RequestScheme: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "RequestScheme"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "enum": [
                            "HTTP",
                            "HTTPS"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Equal"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleRequestSchemeConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "requestUri": {
                "description": "RequestUri: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "RequestUri"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Any",
                          "BeginsWith",
                          "Contains",
                          "EndsWith",
                          "Equal",
                          "GreaterThan",
                          "GreaterThanOrEqual",
                          "LessThan",
                          "LessThanOrEqual",
                          "RegEx"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleRequestUriConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "serverPort": {
                "description": "ServerPort: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "ServerPort"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Any",
                          "BeginsWith",
                          "Contains",
                          "EndsWith",
                          "Equal",
                          "GreaterThan",
                          "GreaterThanOrEqual",
                          "LessThan",
                          "LessThanOrEqual",
                          "RegEx"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleServerPortConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "socketAddr": {
                "description": "SocketAddr: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "SocketAddr"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Any",
                          "IPMatch"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleSocketAddrConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "sslProtocol": {
                "description": "SslProtocol: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "SslProtocol"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "description": "The protocol of an established TLS connection.",
                          "enum": [
                            "TLSv1",
                            "TLSv1.1",
                            "TLSv1.2"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Equal"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleSslProtocolConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "urlFileExtension": {
                "description": "UrlFileExtension: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "UrlFileExtension"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Any",
                          "BeginsWith",
                          "Contains",
                          "EndsWith",
                          "Equal",
                          "GreaterThan",
                          "GreaterThanOrEqual",
                          "LessThan",
                          "LessThanOrEqual",
                          "RegEx"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleUrlFileExtensionMatchConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "urlFileName": {
                "description": "UrlFileName: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "UrlFileName"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Any",
                          "BeginsWith",
                          "Contains",
                          "EndsWith",
                          "Equal",
                          "GreaterThan",
                          "GreaterThanOrEqual",
                          "LessThan",
                          "LessThanOrEqual",
                          "RegEx"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleUrlFilenameConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "urlPath": {
                "description": "UrlPath: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "enum": [
                      "UrlPath"
                    ],
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "enum": [
                          "Any",
                          "BeginsWith",
                          "Contains",
                          "EndsWith",
                          "Equal",
                          "GreaterThan",
                          "GreaterThanOrEqual",
                          "LessThan",
                          "LessThanOrEqual",
                          "RegEx",
                          "Wildcard"
                        ],
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "enum": [
                            "Lowercase",
                            "RemoveNulls",
                            "Trim",
                            "Uppercase",
                            "UrlDecode",
                            "UrlEncode"
                          ],
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "enum": [
                          "DeliveryRuleUrlPathMatchConditionParameters"
                        ],
                        "type": "string"
                      }
                    },
                    "required": [
                      "operator",
                      "typeName"
                    ],
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "required": [
                  "name",
                  "parameters"
                ],
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "actions": {
          "description": "Actions: A list of actions that are executed when all the conditions of a rule are satisfied.",
          "items": {
            "description": "An action for the delivery rule.",
            "properties": {
              "cacheExpiration": {
                "description": "CacheExpiration: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "cacheBehavior": {
                        "description": "CacheBehavior: Caching behavior for the requests",
                        "type": "string"
                      },
                      "cacheDuration": {
                        "description": "CacheDuration: The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss",
                        "type": "string"
                      },
                      "cacheType": {
                        "description": "CacheType: The level at which the content needs to be cached.",
                        "type": "string"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "cacheKeyQueryString": {
                "description": "CacheKeyQueryString: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "queryParameters": {
                        "description": "QueryParameters: query parameters to include or exclude (comma separated).",
                        "type": "string"
                      },
                      "queryStringBehavior": {
                        "description": "QueryStringBehavior: Caching behavior for the requests",
                        "type": "string"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "modifyRequestHeader": {
                "description": "ModifyRequestHeader: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "headerAction": {
                        "description": "HeaderAction: Action to perform",
                        "type": "string"
                      },
                      "headerName": {
                        "description": "HeaderName: Name of the header to modify",
                        "type": "string"
                      },
                      "typeName": {
                        "type": "string"
                      },
                      "value": {
                        "description": "Value: Value for the specified action",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "modifyResponseHeader": {
                "description": "ModifyResponseHeader: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "headerAction": {
                        "description": "HeaderAction: Action to perform",
                        "type": "string"
                      },
                      "headerName": {
                        "description": "HeaderName: Name of the header to modify",
                        "type": "string"
                      },
                      "typeName": {
                        "type": "string"
                      },
                      "value": {
                        "description": "Value: Value for the specified action",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "originGroupOverride": {
                "description": "OriginGroupOverride: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "originGroup": {
                        "description": "OriginGroup: defines the OriginGroup that would override the DefaultOriginGroup.",
                        "properties": {
                          "id": {
                            "description": "Id: Resource ID.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "routeConfigurationOverride": {
                "description": "RouteConfigurationOverride: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "cacheConfiguration": {
                        "description": "CacheConfiguration: The caching configuration associated with this rule. To disable caching, do not provide a\ncacheConfiguration object.",
                        "properties": {
                          "cacheBehavior": {
                            "description": "CacheBehavior: Caching behavior for the requests",
                            "type": "string"
                          },
                          "cacheDuration": {
                            "description": "CacheDuration: The duration for which the content needs to be cached. Allowed format is [d.]hh:mm:ss",
                            "type": "string"
                          },
                          "isCompressionEnabled": {
                            "description": "IsCompressionEnabled: Indicates whether content compression is enabled. If compression is enabled, content will be\nserved as compressed if user requests for a compressed version. Content won't be compressed on AzureFrontDoor when\nrequested content is smaller than 1 byte or larger than 1 MB.",
                            "type": "string"
                          },
                          "queryParameters": {
                            "description": "QueryParameters: query parameters to include or exclude (comma separated).",
                            "type": "string"
                          },
                          "queryStringCachingBehavior": {
                            "description": "QueryStringCachingBehavior: Defines how Frontdoor caches requests that include query strings. You can ignore any query\nstrings when caching, ignore specific query strings, cache every request with a unique URL, or cache specific query\nstrings.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "originGroupOverride": {
                        "description": "OriginGroupOverride: A reference to the origin group override configuration. Leave empty to use the default origin group\non route.",
                        "properties": {
                          "forwardingProtocol": {
                            "description": "ForwardingProtocol: Protocol this rule will use when forwarding traffic to backends.",
                            "type": "string"
                          },
                          "originGroup": {
                            "description": "OriginGroup: defines the OriginGroup that would override the DefaultOriginGroup on route.",
                            "properties": {
                              "id": {
                                "description": "Id: Resource ID.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "urlRedirect": {
                "description": "UrlRedirect: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "customFragment": {
                        "description": "CustomFragment: Fragment to add to the redirect URL. Fragment is the part of the URL that comes after #. Do not include\nthe #.",
                        "type": "string"
                      },
                      "customHostname": {
                        "description": "CustomHostname: Host to redirect. Leave empty to use the incoming host as the destination host.",
                        "type": "string"
                      },
                      "customPath": {
                        "description": "CustomPath: The full path to redirect. Path cannot be empty and must start with /. Leave empty to use the incoming path\nas destination path.",
                        "type": "string"
                      },
                      "customQueryString": {
                        "description": "CustomQueryString: The set of query strings to be placed in the redirect URL. Setting this value would replace any\nexisting query string; leave empty to preserve the incoming query string. Query string must be in <key>=<value> format.\n? and & will be added automatically so do not include them.",
                        "type": "string"
                      },
                      "destinationProtocol": {
                        "description": "DestinationProtocol: Protocol to use for the redirect. The default value is MatchRequest",
                        "type": "string"
                      },
                      "redirectType": {
                        "description": "RedirectType: The redirect type the rule will use when redirecting traffic.",
                        "type": "string"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "urlRewrite": {
                "description": "UrlRewrite: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "destination": {
                        "description": "Destination: Define the relative URL to which the above requests will be rewritten by.",
                        "type": "string"
                      },
                      "preserveUnmatchedPath": {
                        "description": "PreserveUnmatchedPath: Whether to preserve unmatched path. Default value is true.",
                        "type": "boolean"
                      },
                      "sourcePattern": {
                        "description": "SourcePattern: define a request URI pattern that identifies the type of requests that may be rewritten. If value is\nblank, all strings are matched.",
                        "type": "string"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "urlSigning": {
                "description": "UrlSigning: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the action for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the action.",
                    "properties": {
                      "algorithm": {
                        "description": "Algorithm: Algorithm to use for URL signing",
                        "type": "string"
                      },
                      "parameterNameOverride": {
                        "description": "ParameterNameOverride: Defines which query string parameters in the url to be considered for expires, key id etc.",
                        "items": {
                          "description": "Defines how to identify a parameter for a specific purpose e.g. expires",
                          "properties": {
                            "paramIndicator": {
                              "description": "ParamIndicator: Indicates the purpose of the parameter",
                              "type": "string"
                            },
                            "paramName": {
                              "description": "ParamName: Parameter name",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "deploymentStatus": {
          "type": "string"
        },
        "id": {
          "description": "Id: Resource ID.",
          "type": "string"
        },
        "matchProcessingBehavior": {
          "description": "MatchProcessingBehavior: If this rule is a match should the rules engine continue running the remaining rules or stop.\nIf not present, defaults to Continue.",
          "type": "string"
        },
        "name": {
          "description": "Name: Resource name.",
          "type": "string"
        },
        "order": {
          "description": "Order: The order in which the rules are applied for the endpoint. Possible values {0,1,2,3,\u2026\u2026\u2026}. A rule with a\nlesser order will be applied before a rule with a greater order. Rule with order 0 is a special rule. It does not\nrequire any condition and actions listed in it will always be applied.",
          "type": "integer"
        },
        "provisioningState": {
          "description": "ProvisioningState: Provisioning status",
          "type": "string"
        },
        "ruleSetName": {
          "description": "RuleSetName: The name of the rule set containing the rule.",
          "type": "string"
        },
        "ruleconditions": {
          "description": "RuleConditions: A list of conditions that must be matched for the actions to be executed",
          "items": {
            "description": "A condition for the delivery rule.",
            "properties": {
              "clientPort": {
                "description": "ClientPort: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "cookies": {
                "description": "Cookies: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector: Name of Cookies to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "hostName": {
                "description": "HostName: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "httpVersion": {
                "description": "HttpVersion: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "isDevice": {
                "description": "IsDevice: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "postArgs": {
                "description": "PostArgs: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector: Name of PostArg to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "queryString": {
                "description": "QueryString: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "remoteAddress": {
                "description": "RemoteAddress: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: Match values to match against. The operator will apply to each value in here with OR semantics. If any of\nthem match the variable with the given operator this match condition is considered a match.",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "requestBody": {
                "description": "RequestBody: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "requestHeader": {
                "description": "RequestHeader: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "selector": {
                        "description": "Selector: Name of Header to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "requestMethod": {
                "description": "RequestMethod: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "requestScheme": {
                "description": "RequestScheme: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "requestUri": {
                "description": "RequestUri: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "serverPort": {
                "description": "ServerPort: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "socketAddr": {
                "description": "SocketAddr: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "sslProtocol": {
                "description": "SslProtocol: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "description": "The protocol of an established TLS connection.",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "urlFileExtension": {
                "description": "UrlFileExtension: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "urlFileName": {
                "description": "UrlFileName: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "urlPath": {
                "description": "UrlPath: Mutually exclusive with all other properties",
                "properties": {
                  "name": {
                    "description": "Name: The name of the condition for the delivery rule.",
                    "type": "string"
                  },
                  "parameters": {
                    "description": "Parameters: Defines the parameters for the condition.",
                    "properties": {
                      "matchValues": {
                        "description": "MatchValues: The match value for the condition of the delivery rule",
                        "items": {
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "negateCondition": {
                        "description": "NegateCondition: Describes if this is negate condition or not",
                        "type": "boolean"
                      },
                      "operator": {
                        "description": "Operator: Describes operator to be matched",
                        "type": "string"
                      },
                      "transforms": {
                        "description": "Transforms: List of transforms",
                        "items": {
                          "description": "Describes what transforms are applied before matching",
                          "type": "string"
                        },
                        "type": "array"
                      },
                      "typeName": {
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "systemData": {
          "description": "SystemData: Read only system data",
          "properties": {
            "createdAt": {
              "description": "CreatedAt: The timestamp of resource creation (UTC)",
              "type": "string"
            },
            "createdBy": {
              "description": "CreatedBy: An identifier for the identity that created the resource",
              "type": "string"
            },
            "createdByType": {
              "description": "CreatedByType: The type of identity that created the resource",
              "type": "string"
            },
            "lastModifiedAt": {
              "description": "LastModifiedAt: The timestamp of resource last modification (UTC)",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "LastModifiedBy: An identifier for the identity that last modified the resource",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "LastModifiedByType: The type of identity that last modified the resource",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "type": {
          "description": "Type: Resource type.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
