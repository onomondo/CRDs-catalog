{
  "description": "Generator information:\n- Generated from: /applicationinsights/resource-manager/Microsoft.Insights/stable/2020-02-02/components_API.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Insights/components/{resourceName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "Application_Type": {
          "description": "Application_Type: Type of application being monitored.",
          "enum": [
            "other",
            "web"
          ],
          "type": "string"
        },
        "DisableIpMasking": {
          "description": "DisableIpMasking: Disable IP masking.",
          "type": "boolean"
        },
        "DisableLocalAuth": {
          "description": "DisableLocalAuth: Disable Non-AAD based Auth.",
          "type": "boolean"
        },
        "Flow_Type": {
          "description": "Flow_Type: Used by the Application Insights system to determine what kind of flow this component was created by. This is\nto be set to 'Bluefield' when creating/updating a component via the REST API.",
          "enum": [
            "Bluefield"
          ],
          "type": "string"
        },
        "ForceCustomerStorageForProfiler": {
          "description": "ForceCustomerStorageForProfiler: Force users to create their own storage account for profiler and debugger.",
          "type": "boolean"
        },
        "HockeyAppId": {
          "description": "HockeyAppId: The unique application ID created when a new application is added to HockeyApp, used for communications\nwith HockeyApp.",
          "type": "string"
        },
        "ImmediatePurgeDataOn30Days": {
          "description": "ImmediatePurgeDataOn30Days: Purge data immediately after 30 days.",
          "type": "boolean"
        },
        "IngestionMode": {
          "description": "IngestionMode: Indicates the flow of the ingestion.",
          "enum": [
            "ApplicationInsights",
            "ApplicationInsightsWithDiagnosticSettings",
            "LogAnalytics"
          ],
          "type": "string"
        },
        "Request_Source": {
          "description": "Request_Source: Describes what tool created this Application Insights component. Customers using this API should set\nthis to the default 'rest'.",
          "enum": [
            "rest"
          ],
          "type": "string"
        },
        "RetentionInDays": {
          "description": "RetentionInDays: Retention period in days.",
          "type": "integer"
        },
        "SamplingPercentage": {
          "description": "SamplingPercentage: Percentage of the data produced by the application being monitored that is being sampled for\nApplication Insights telemetry.",
          "type": "number"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "etag": {
          "description": "Etag: Resource etag",
          "type": "string"
        },
        "kind": {
          "description": "Kind: The kind of application that this component refers to, used to customize UI. This value is a freeform string,\nvalues should typically be one of the following: web, ios, other, store, java, phone.",
          "type": "string"
        },
        "location": {
          "description": "Location: Resource location",
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "configMaps": {
              "description": "ConfigMaps: configures where to place operator written ConfigMaps.",
              "properties": {
                "connectionString": {
                  "description": "ConnectionString: indicates where the ConnectionString config map should be placed. If omitted, no config map will be\ncreated.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "instrumentationKey": {
                  "description": "InstrumentationKey: indicates where the InstrumentationKey config map should be placed. If omitted, no config map will\nbe created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "publicNetworkAccessForIngestion": {
          "description": "PublicNetworkAccessForIngestion: The network access type for accessing Application Insights ingestion.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string"
        },
        "publicNetworkAccessForQuery": {
          "description": "PublicNetworkAccessForQuery: The network access type for accessing Application Insights query.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags",
          "type": "object"
        },
        "workspaceResourceReference": {
          "description": "WorkspaceResourceReference: Resource Id of the log analytics workspace which the data will be ingested to. This property\nis required to create an application with this API version. Applications from older versions will not have this property.",
          "properties": {
            "armId": {
              "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "group": {
              "description": "Group is the Kubernetes group of the resource.",
              "type": "string"
            },
            "kind": {
              "description": "Kind is the Kubernetes kind of the resource.",
              "type": "string"
            },
            "name": {
              "description": "Name is the Kubernetes name of the resource.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "Application_Type",
        "kind",
        "location",
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "AppId": {
          "description": "AppId: Application Insights Unique ID for your Application.",
          "type": "string"
        },
        "Application_Type": {
          "description": "Application_Type: Type of application being monitored.",
          "type": "string"
        },
        "ApplicationId": {
          "description": "ApplicationId: The unique ID of your application. This field mirrors the 'Name' field and cannot be changed.",
          "type": "string"
        },
        "ConnectionString": {
          "description": "ConnectionString: Application Insights component connection string.",
          "type": "string"
        },
        "CreationDate": {
          "description": "CreationDate: Creation Date for the Application Insights component, in ISO 8601 format.",
          "type": "string"
        },
        "DisableIpMasking": {
          "description": "DisableIpMasking: Disable IP masking.",
          "type": "boolean"
        },
        "DisableLocalAuth": {
          "description": "DisableLocalAuth: Disable Non-AAD based Auth.",
          "type": "boolean"
        },
        "Flow_Type": {
          "description": "Flow_Type: Used by the Application Insights system to determine what kind of flow this component was created by. This is\nto be set to 'Bluefield' when creating/updating a component via the REST API.",
          "type": "string"
        },
        "ForceCustomerStorageForProfiler": {
          "description": "ForceCustomerStorageForProfiler: Force users to create their own storage account for profiler and debugger.",
          "type": "boolean"
        },
        "HockeyAppId": {
          "description": "HockeyAppId: The unique application ID created when a new application is added to HockeyApp, used for communications\nwith HockeyApp.",
          "type": "string"
        },
        "HockeyAppToken": {
          "description": "HockeyAppToken: Token used to authenticate communications with between Application Insights and HockeyApp.",
          "type": "string"
        },
        "ImmediatePurgeDataOn30Days": {
          "description": "ImmediatePurgeDataOn30Days: Purge data immediately after 30 days.",
          "type": "boolean"
        },
        "IngestionMode": {
          "description": "IngestionMode: Indicates the flow of the ingestion.",
          "type": "string"
        },
        "InstrumentationKey": {
          "description": "InstrumentationKey: Application Insights Instrumentation key. A read-only value that applications can use to identify\nthe destination for all telemetry sent to Azure Application Insights. This value will be supplied upon construction of\neach new Application Insights component.",
          "type": "string"
        },
        "LaMigrationDate": {
          "description": "LaMigrationDate: The date which the component got migrated to LA, in ISO 8601 format.",
          "type": "string"
        },
        "PrivateLinkScopedResources": {
          "description": "PrivateLinkScopedResources: List of linked private link scope resources.",
          "items": {
            "description": "The private link scope resource reference.",
            "properties": {
              "ResourceId": {
                "description": "ResourceId: The full resource Id of the private link scope resource.",
                "type": "string"
              },
              "ScopeId": {
                "description": "ScopeId: The private link scope unique Identifier.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "Request_Source": {
          "description": "Request_Source: Describes what tool created this Application Insights component. Customers using this API should set\nthis to the default 'rest'.",
          "type": "string"
        },
        "RetentionInDays": {
          "description": "RetentionInDays: Retention period in days.",
          "type": "integer"
        },
        "SamplingPercentage": {
          "description": "SamplingPercentage: Percentage of the data produced by the application being monitored that is being sampled for\nApplication Insights telemetry.",
          "type": "number"
        },
        "TenantId": {
          "description": "TenantId: Azure Tenant Id.",
          "type": "string"
        },
        "WorkspaceResourceId": {
          "description": "WorkspaceResourceId: Resource Id of the log analytics workspace which the data will be ingested to. This property is\nrequired to create an application with this API version. Applications from older versions will not have this property.",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "etag": {
          "description": "Etag: Resource etag",
          "type": "string"
        },
        "id": {
          "description": "Id: Azure resource Id",
          "type": "string"
        },
        "kind": {
          "description": "Kind: The kind of application that this component refers to, used to customize UI. This value is a freeform string,\nvalues should typically be one of the following: web, ios, other, store, java, phone.",
          "type": "string"
        },
        "location": {
          "description": "Location: Resource location",
          "type": "string"
        },
        "name": {
          "description": "Name: Azure resource name",
          "type": "string"
        },
        "properties_name": {
          "description": "PropertiesName: Application name.",
          "type": "string"
        },
        "provisioningState": {
          "description": "ProvisioningState: Current state of this component: whether or not is has been provisioned within the resource group it\nis defined. Users cannot change this value but are able to read from it. Values will include Succeeded, Deploying,\nCanceled, and Failed.",
          "type": "string"
        },
        "publicNetworkAccessForIngestion": {
          "description": "PublicNetworkAccessForIngestion: The network access type for accessing Application Insights ingestion.",
          "type": "string"
        },
        "publicNetworkAccessForQuery": {
          "description": "PublicNetworkAccessForQuery: The network access type for accessing Application Insights query.",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags",
          "type": "object"
        },
        "type": {
          "description": "Type: Azure resource type",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
