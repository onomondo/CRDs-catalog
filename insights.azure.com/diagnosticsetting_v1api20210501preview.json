{
  "description": "Generator information:\n- Generated from: /monitor/resource-manager/Microsoft.Insights/preview/2021-05-01-preview/diagnosticsSettings_API.json\n- ARM URI: /{resourceUri}/providers/Microsoft.Insights/diagnosticSettings/{name}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "eventHubAuthorizationRuleReference": {
          "description": "EventHubAuthorizationRuleReference: The resource Id for the event hub authorization rule.",
          "properties": {
            "armId": {
              "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "group": {
              "description": "Group is the Kubernetes group of the resource.",
              "type": "string"
            },
            "kind": {
              "description": "Kind is the Kubernetes kind of the resource.",
              "type": "string"
            },
            "name": {
              "description": "Name is the Kubernetes name of the resource.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "eventHubName": {
          "description": "EventHubName: The name of the event hub. If none is specified, the default event hub will be selected.",
          "type": "string"
        },
        "logAnalyticsDestinationType": {
          "description": "LogAnalyticsDestinationType: A string indicating whether the export to Log Analytics should use the default destination\ntype, i.e. AzureDiagnostics, or use a destination type constructed as follows: <normalized service identity>_<normalized\ncategory name>. Possible values are: Dedicated and null (null is default.)",
          "type": "string"
        },
        "logs": {
          "description": "Logs: The list of logs settings.",
          "items": {
            "description": "Part of MultiTenantDiagnosticSettings. Specifies the settings for a particular log.",
            "properties": {
              "category": {
                "description": "Category: Name of a Diagnostic Log category for a resource type this setting is applied to. To obtain the list of\nDiagnostic Log categories for a resource, first perform a GET diagnostic settings operation.",
                "type": "string"
              },
              "categoryGroup": {
                "description": "CategoryGroup: Name of a Diagnostic Log category group for a resource type this setting is applied to. To obtain the\nlist of Diagnostic Log categories for a resource, first perform a GET diagnostic settings operation.",
                "type": "string"
              },
              "enabled": {
                "description": "Enabled: a value indicating whether this log is enabled.",
                "type": "boolean"
              },
              "retentionPolicy": {
                "description": "RetentionPolicy: the retention policy for this log.",
                "properties": {
                  "days": {
                    "description": "Days: the number of days for the retention in days. A value of 0 will retain the events indefinitely.",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "enabled": {
                    "description": "Enabled: a value indicating whether the retention policy is enabled.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "days",
                  "enabled"
                ],
                "type": "object",
                "additionalProperties": false
              }
            },
            "required": [
              "enabled"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "marketplacePartnerReference": {
          "description": "MarketplacePartnerReference: The full ARM resource ID of the Marketplace resource to which you would like to send\nDiagnostic Logs.",
          "properties": {
            "armId": {
              "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "group": {
              "description": "Group is the Kubernetes group of the resource.",
              "type": "string"
            },
            "kind": {
              "description": "Kind is the Kubernetes kind of the resource.",
              "type": "string"
            },
            "name": {
              "description": "Name is the Kubernetes name of the resource.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "metrics": {
          "description": "Metrics: The list of metric settings.",
          "items": {
            "description": "Part of MultiTenantDiagnosticSettings. Specifies the settings for a particular metric.",
            "properties": {
              "category": {
                "description": "Category: Name of a Diagnostic Metric category for a resource type this setting is applied to. To obtain the list of\nDiagnostic metric categories for a resource, first perform a GET diagnostic settings operation.",
                "type": "string"
              },
              "enabled": {
                "description": "Enabled: a value indicating whether this category is enabled.",
                "type": "boolean"
              },
              "retentionPolicy": {
                "description": "RetentionPolicy: the retention policy for this category.",
                "properties": {
                  "days": {
                    "description": "Days: the number of days for the retention in days. A value of 0 will retain the events indefinitely.",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "enabled": {
                    "description": "Enabled: a value indicating whether the retention policy is enabled.",
                    "type": "boolean"
                  }
                },
                "required": [
                  "days",
                  "enabled"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "timeGrain": {
                "description": "TimeGrain: the timegrain of the metric in ISO8601 format.",
                "type": "string"
              }
            },
            "required": [
              "enabled"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. This resource is an\nextension resource, which means that any other Azure resource can be its owner.",
          "properties": {
            "armId": {
              "description": "Ownership across namespaces is not supported.",
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "group": {
              "description": "Group is the Kubernetes group of the resource.",
              "type": "string"
            },
            "kind": {
              "description": "Kind is the Kubernetes kind of the resource.",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "serviceBusRuleId": {
          "description": "ServiceBusRuleId: The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.",
          "type": "string"
        },
        "storageAccountReference": {
          "description": "StorageAccountReference: The resource ID of the storage account to which you would like to send Diagnostic Logs.",
          "properties": {
            "armId": {
              "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "group": {
              "description": "Group is the Kubernetes group of the resource.",
              "type": "string"
            },
            "kind": {
              "description": "Kind is the Kubernetes kind of the resource.",
              "type": "string"
            },
            "name": {
              "description": "Name is the Kubernetes name of the resource.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "workspaceReference": {
          "description": "WorkspaceReference: The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic\nLogs. Example:\n/subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2",
          "properties": {
            "armId": {
              "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "group": {
              "description": "Group is the Kubernetes group of the resource.",
              "type": "string"
            },
            "kind": {
              "description": "Kind is the Kubernetes kind of the resource.",
              "type": "string"
            },
            "name": {
              "description": "Name is the Kubernetes name of the resource.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "eventHubAuthorizationRuleId": {
          "description": "EventHubAuthorizationRuleId: The resource Id for the event hub authorization rule.",
          "type": "string"
        },
        "eventHubName": {
          "description": "EventHubName: The name of the event hub. If none is specified, the default event hub will be selected.",
          "type": "string"
        },
        "id": {
          "description": "Id: Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string"
        },
        "logAnalyticsDestinationType": {
          "description": "LogAnalyticsDestinationType: A string indicating whether the export to Log Analytics should use the default destination\ntype, i.e. AzureDiagnostics, or use a destination type constructed as follows: <normalized service identity>_<normalized\ncategory name>. Possible values are: Dedicated and null (null is default.)",
          "type": "string"
        },
        "logs": {
          "description": "Logs: The list of logs settings.",
          "items": {
            "description": "Part of MultiTenantDiagnosticSettings. Specifies the settings for a particular log.",
            "properties": {
              "category": {
                "description": "Category: Name of a Diagnostic Log category for a resource type this setting is applied to. To obtain the list of\nDiagnostic Log categories for a resource, first perform a GET diagnostic settings operation.",
                "type": "string"
              },
              "categoryGroup": {
                "description": "CategoryGroup: Name of a Diagnostic Log category group for a resource type this setting is applied to. To obtain the\nlist of Diagnostic Log categories for a resource, first perform a GET diagnostic settings operation.",
                "type": "string"
              },
              "enabled": {
                "description": "Enabled: a value indicating whether this log is enabled.",
                "type": "boolean"
              },
              "retentionPolicy": {
                "description": "RetentionPolicy: the retention policy for this log.",
                "properties": {
                  "days": {
                    "description": "Days: the number of days for the retention in days. A value of 0 will retain the events indefinitely.",
                    "type": "integer"
                  },
                  "enabled": {
                    "description": "Enabled: a value indicating whether the retention policy is enabled.",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "marketplacePartnerId": {
          "description": "MarketplacePartnerId: The full ARM resource ID of the Marketplace resource to which you would like to send Diagnostic\nLogs.",
          "type": "string"
        },
        "metrics": {
          "description": "Metrics: The list of metric settings.",
          "items": {
            "description": "Part of MultiTenantDiagnosticSettings. Specifies the settings for a particular metric.",
            "properties": {
              "category": {
                "description": "Category: Name of a Diagnostic Metric category for a resource type this setting is applied to. To obtain the list of\nDiagnostic metric categories for a resource, first perform a GET diagnostic settings operation.",
                "type": "string"
              },
              "enabled": {
                "description": "Enabled: a value indicating whether this category is enabled.",
                "type": "boolean"
              },
              "retentionPolicy": {
                "description": "RetentionPolicy: the retention policy for this category.",
                "properties": {
                  "days": {
                    "description": "Days: the number of days for the retention in days. A value of 0 will retain the events indefinitely.",
                    "type": "integer"
                  },
                  "enabled": {
                    "description": "Enabled: a value indicating whether the retention policy is enabled.",
                    "type": "boolean"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "timeGrain": {
                "description": "TimeGrain: the timegrain of the metric in ISO8601 format.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "name": {
          "description": "Name: The name of the resource",
          "type": "string"
        },
        "serviceBusRuleId": {
          "description": "ServiceBusRuleId: The service bus rule Id of the diagnostic setting. This is here to maintain backwards compatibility.",
          "type": "string"
        },
        "storageAccountId": {
          "description": "StorageAccountId: The resource ID of the storage account to which you would like to send Diagnostic Logs.",
          "type": "string"
        },
        "systemData": {
          "description": "SystemData: The system metadata related to this resource.",
          "properties": {
            "createdAt": {
              "description": "CreatedAt: The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "createdBy": {
              "description": "CreatedBy: The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "CreatedByType: The type of identity that created the resource.",
              "type": "string"
            },
            "lastModifiedAt": {
              "description": "LastModifiedAt: The timestamp of resource last modification (UTC)",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "LastModifiedBy: The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "LastModifiedByType: The type of identity that last modified the resource.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "type": {
          "description": "Type: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string"
        },
        "workspaceId": {
          "description": "WorkspaceId: The full ARM resource ID of the Log Analytics workspace to which you would like to send Diagnostic Logs.\nExample:\n/subscriptions/4b9e8510-67ab-4e9a-95a9-e2f1e570ea9c/resourceGroups/insights-integration/providers/Microsoft.OperationalInsights/workspaces/viruela2",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
