{
  "description": "Generator information:\n- Generated from: /subscription/resource-manager/Microsoft.Subscription/stable/2021-10-01/subscriptions.json\n- ARM URI: /providers/Microsoft.Subscription/aliases/{aliasName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "properties": {
          "description": "Properties: Put alias request properties.",
          "properties": {
            "additionalProperties": {
              "description": "AdditionalProperties: Put alias request additional properties.",
              "properties": {
                "managementGroupId": {
                  "description": "ManagementGroupId: Management group Id for the subscription.",
                  "type": "string"
                },
                "subscriptionOwnerId": {
                  "description": "SubscriptionOwnerId: Owner Id of the subscription",
                  "type": "string"
                },
                "subscriptionTenantId": {
                  "description": "SubscriptionTenantId: Tenant Id of the subscription",
                  "type": "string"
                },
                "tags": {
                  "additionalProperties": {
                    "type": "string"
                  },
                  "description": "Tags: Tags for the subscription",
                  "type": "object"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "billingScope": {
              "type": "string"
            },
            "displayName": {
              "description": "DisplayName: The friendly name of the subscription.",
              "type": "string"
            },
            "resellerId": {
              "description": "ResellerId: Reseller Id",
              "type": "string"
            },
            "subscriptionId": {
              "description": "SubscriptionId: This parameter can be used to create alias for existing subscription Id",
              "type": "string"
            },
            "workload": {
              "description": "Workload: The workload type of the subscription. It can be either Production or DevTest.",
              "enum": [
                "DevTest",
                "Production"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "additionalProperties": false
      },
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "id": {
          "description": "Id: Fully qualified ID for the alias resource.",
          "type": "string"
        },
        "name": {
          "description": "Name: Alias ID.",
          "type": "string"
        },
        "properties": {
          "description": "Properties: Subscription Alias response properties.",
          "properties": {
            "acceptOwnershipState": {
              "description": "AcceptOwnershipState: The accept ownership state of the resource.",
              "type": "string"
            },
            "acceptOwnershipUrl": {
              "description": "AcceptOwnershipUrl: Url to accept ownership of the subscription.",
              "type": "string"
            },
            "billingScope": {
              "type": "string"
            },
            "createdTime": {
              "description": "CreatedTime: Created Time",
              "type": "string"
            },
            "displayName": {
              "description": "DisplayName: The display name of the subscription.",
              "type": "string"
            },
            "managementGroupId": {
              "description": "ManagementGroupId: The Management Group Id.",
              "type": "string"
            },
            "provisioningState": {
              "description": "ProvisioningState: The provisioning state of the resource.",
              "type": "string"
            },
            "resellerId": {
              "description": "ResellerId: Reseller Id",
              "type": "string"
            },
            "subscriptionId": {
              "description": "SubscriptionId: Newly created subscription Id.",
              "type": "string"
            },
            "subscriptionOwnerId": {
              "description": "SubscriptionOwnerId: Owner Id of the subscription",
              "type": "string"
            },
            "tags": {
              "additionalProperties": {
                "type": "string"
              },
              "description": "Tags: Tags for the subscription",
              "type": "object"
            },
            "workload": {
              "description": "Workload: The workload type of the subscription. It can be either Production or DevTest.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "systemData": {
          "description": "SystemData: Metadata pertaining to creation and last modification of the resource.",
          "properties": {
            "createdAt": {
              "description": "CreatedAt: The timestamp of resource creation (UTC).",
              "type": "string"
            },
            "createdBy": {
              "description": "CreatedBy: The identity that created the resource.",
              "type": "string"
            },
            "createdByType": {
              "description": "CreatedByType: The type of identity that created the resource.",
              "type": "string"
            },
            "lastModifiedAt": {
              "description": "LastModifiedAt: The timestamp of resource last modification (UTC)",
              "type": "string"
            },
            "lastModifiedBy": {
              "description": "LastModifiedBy: The identity that last modified the resource.",
              "type": "string"
            },
            "lastModifiedByType": {
              "description": "LastModifiedByType: The type of identity that last modified the resource.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "type": {
          "description": "Type: Resource type, Microsoft.Subscription/aliases.",
          "type": "string"
        },
        "additionalProperties": false
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
