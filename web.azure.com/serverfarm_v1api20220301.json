{
  "description": "Generator information:\n- Generated from: /web/resource-manager/Microsoft.Web/stable/2022-03-01/AppServicePlans.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/serverfarms/{name}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "elasticScaleEnabled": {
          "description": "ElasticScaleEnabled: ServerFarm supports ElasticScale. Apps in this plan will scale as if the ServerFarm was\nElasticPremium sku",
          "type": "boolean"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: Extended Location.",
          "properties": {
            "name": {
              "description": "Name: Name of extended location.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "freeOfferExpirationTime": {
          "description": "FreeOfferExpirationTime: The time when the server farm free offer expires.",
          "type": "string"
        },
        "hostingEnvironmentProfile": {
          "description": "HostingEnvironmentProfile: Specification for the App Service Environment to use for the App Service plan.",
          "properties": {
            "reference": {
              "description": "Reference: Resource ID of the App Service Environment.",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "hyperV": {
          "description": "HyperV: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.",
          "type": "boolean"
        },
        "isSpot": {
          "description": "IsSpot: If <code>true</code>, this App Service Plan owns spot instances.",
          "type": "boolean"
        },
        "isXenon": {
          "description": "IsXenon: Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind: Kind of resource.",
          "type": "string"
        },
        "kubeEnvironmentProfile": {
          "description": "KubeEnvironmentProfile: Specification for the Kubernetes Environment to use for the App Service plan.",
          "properties": {
            "reference": {
              "description": "Reference: Resource ID of the Kubernetes Environment.",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "location": {
          "description": "Location: Resource Location.",
          "type": "string"
        },
        "maximumElasticWorkerCount": {
          "description": "MaximumElasticWorkerCount: Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan",
          "type": "integer"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "perSiteScaling": {
          "description": "PerSiteScaling: If <code>true</code>, apps assigned to this App Service plan can be scaled independently.\nIf <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.",
          "type": "boolean"
        },
        "reserved": {
          "description": "Reserved: If Linux app service plan <code>true</code>, <code>false</code> otherwise.",
          "type": "boolean"
        },
        "sku": {
          "description": "Sku: Description of a SKU for a scalable resource.",
          "properties": {
            "capabilities": {
              "description": "Capabilities: Capabilities of the SKU, e.g., is traffic manager enabled?",
              "items": {
                "description": "Describes the capabilities/features allowed for a specific SKU.",
                "properties": {
                  "name": {
                    "description": "Name: Name of the SKU capability.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "Reason: Reason of the SKU capability.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value: Value of the SKU capability.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "capacity": {
              "description": "Capacity: Current number of instances assigned to the resource.",
              "type": "integer"
            },
            "family": {
              "description": "Family: Family code of the resource SKU.",
              "type": "string"
            },
            "locations": {
              "description": "Locations: Locations of the SKU.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "name": {
              "description": "Name: Name of the resource SKU.",
              "type": "string"
            },
            "size": {
              "description": "Size: Size specifier of the resource SKU.",
              "type": "string"
            },
            "skuCapacity": {
              "description": "SkuCapacity: Min, max, and default scale values of the SKU.",
              "properties": {
                "default": {
                  "description": "Default: Default number of workers for this App Service plan SKU.",
                  "type": "integer"
                },
                "elasticMaximum": {
                  "description": "ElasticMaximum: Maximum number of Elastic workers for this App Service plan SKU.",
                  "type": "integer"
                },
                "maximum": {
                  "description": "Maximum: Maximum number of workers for this App Service plan SKU.",
                  "type": "integer"
                },
                "minimum": {
                  "description": "Minimum: Minimum number of workers for this App Service plan SKU.",
                  "type": "integer"
                },
                "scaleType": {
                  "description": "ScaleType: Available scale configurations for an App Service plan.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "tier": {
              "description": "Tier: Service tier of the resource SKU.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "spotExpirationTime": {
          "description": "SpotExpirationTime: The time when the server farm expires. Valid only if it is a spot server farm.",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "targetWorkerCount": {
          "description": "TargetWorkerCount: Scaling worker count.",
          "type": "integer"
        },
        "targetWorkerSizeId": {
          "description": "TargetWorkerSizeId: Scaling worker size ID.",
          "type": "integer"
        },
        "workerTierName": {
          "description": "WorkerTierName: Target worker tier assigned to the App Service plan.",
          "type": "string"
        },
        "zoneRedundant": {
          "description": "ZoneRedundant: If <code>true</code>, this App Service Plan will perform availability zone balancing.\nIf <code>false</code>, this App Service Plan will not perform availability zone balancing.",
          "type": "boolean"
        }
      },
      "required": [
        "location",
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "elasticScaleEnabled": {
          "description": "ElasticScaleEnabled: ServerFarm supports ElasticScale. Apps in this plan will scale as if the ServerFarm was\nElasticPremium sku",
          "type": "boolean"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: Extended Location.",
          "properties": {
            "name": {
              "description": "Name: Name of extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: Type of extended location.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "freeOfferExpirationTime": {
          "description": "FreeOfferExpirationTime: The time when the server farm free offer expires.",
          "type": "string"
        },
        "geoRegion": {
          "description": "GeoRegion: Geographical location for the App Service plan.",
          "type": "string"
        },
        "hostingEnvironmentProfile": {
          "description": "HostingEnvironmentProfile: Specification for the App Service Environment to use for the App Service plan.",
          "properties": {
            "id": {
              "description": "Id: Resource ID of the App Service Environment.",
              "type": "string"
            },
            "name": {
              "description": "Name: Name of the App Service Environment.",
              "type": "string"
            },
            "type": {
              "description": "Type: Resource type of the App Service Environment.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "hyperV": {
          "description": "HyperV: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.",
          "type": "boolean"
        },
        "id": {
          "description": "Id: Resource Id.",
          "type": "string"
        },
        "isSpot": {
          "description": "IsSpot: If <code>true</code>, this App Service Plan owns spot instances.",
          "type": "boolean"
        },
        "isXenon": {
          "description": "IsXenon: Obsolete: If Hyper-V container app service plan <code>true</code>, <code>false</code> otherwise.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind: Kind of resource.",
          "type": "string"
        },
        "kubeEnvironmentProfile": {
          "description": "KubeEnvironmentProfile: Specification for the Kubernetes Environment to use for the App Service plan.",
          "properties": {
            "id": {
              "description": "Id: Resource ID of the Kubernetes Environment.",
              "type": "string"
            },
            "name": {
              "description": "Name: Name of the Kubernetes Environment.",
              "type": "string"
            },
            "type": {
              "description": "Type: Resource type of the Kubernetes Environment.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "location": {
          "description": "Location: Resource Location.",
          "type": "string"
        },
        "maximumElasticWorkerCount": {
          "description": "MaximumElasticWorkerCount: Maximum number of total workers allowed for this ElasticScaleEnabled App Service Plan",
          "type": "integer"
        },
        "maximumNumberOfWorkers": {
          "description": "MaximumNumberOfWorkers: Maximum number of instances that can be assigned to this App Service plan.",
          "type": "integer"
        },
        "name": {
          "description": "Name: Resource Name.",
          "type": "string"
        },
        "numberOfSites": {
          "description": "NumberOfSites: Number of apps assigned to this App Service plan.",
          "type": "integer"
        },
        "numberOfWorkers": {
          "description": "NumberOfWorkers: The number of instances that are assigned to this App Service plan.",
          "type": "integer"
        },
        "perSiteScaling": {
          "description": "PerSiteScaling: If <code>true</code>, apps assigned to this App Service plan can be scaled independently.\nIf <code>false</code>, apps assigned to this App Service plan will scale to all instances of the plan.",
          "type": "boolean"
        },
        "provisioningState": {
          "description": "ProvisioningState: Provisioning state of the App Service Plan.",
          "type": "string"
        },
        "reserved": {
          "description": "Reserved: If Linux app service plan <code>true</code>, <code>false</code> otherwise.",
          "type": "boolean"
        },
        "resourceGroup": {
          "description": "ResourceGroup: Resource group of the App Service plan.",
          "type": "string"
        },
        "sku": {
          "description": "Sku: Description of a SKU for a scalable resource.",
          "properties": {
            "capabilities": {
              "description": "Capabilities: Capabilities of the SKU, e.g., is traffic manager enabled?",
              "items": {
                "description": "Describes the capabilities/features allowed for a specific SKU.",
                "properties": {
                  "name": {
                    "description": "Name: Name of the SKU capability.",
                    "type": "string"
                  },
                  "reason": {
                    "description": "Reason: Reason of the SKU capability.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value: Value of the SKU capability.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "capacity": {
              "description": "Capacity: Current number of instances assigned to the resource.",
              "type": "integer"
            },
            "family": {
              "description": "Family: Family code of the resource SKU.",
              "type": "string"
            },
            "locations": {
              "description": "Locations: Locations of the SKU.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "name": {
              "description": "Name: Name of the resource SKU.",
              "type": "string"
            },
            "size": {
              "description": "Size: Size specifier of the resource SKU.",
              "type": "string"
            },
            "skuCapacity": {
              "description": "SkuCapacity: Min, max, and default scale values of the SKU.",
              "properties": {
                "default": {
                  "description": "Default: Default number of workers for this App Service plan SKU.",
                  "type": "integer"
                },
                "elasticMaximum": {
                  "description": "ElasticMaximum: Maximum number of Elastic workers for this App Service plan SKU.",
                  "type": "integer"
                },
                "maximum": {
                  "description": "Maximum: Maximum number of workers for this App Service plan SKU.",
                  "type": "integer"
                },
                "minimum": {
                  "description": "Minimum: Minimum number of workers for this App Service plan SKU.",
                  "type": "integer"
                },
                "scaleType": {
                  "description": "ScaleType: Available scale configurations for an App Service plan.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "tier": {
              "description": "Tier: Service tier of the resource SKU.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "spotExpirationTime": {
          "description": "SpotExpirationTime: The time when the server farm expires. Valid only if it is a spot server farm.",
          "type": "string"
        },
        "status": {
          "description": "Status: App Service plan status.",
          "type": "string"
        },
        "subscription": {
          "description": "Subscription: App Service plan subscription.",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "targetWorkerCount": {
          "description": "TargetWorkerCount: Scaling worker count.",
          "type": "integer"
        },
        "targetWorkerSizeId": {
          "description": "TargetWorkerSizeId: Scaling worker size ID.",
          "type": "integer"
        },
        "type": {
          "description": "Type: Resource type.",
          "type": "string"
        },
        "workerTierName": {
          "description": "WorkerTierName: Target worker tier assigned to the App Service plan.",
          "type": "string"
        },
        "zoneRedundant": {
          "description": "ZoneRedundant: If <code>true</code>, this App Service Plan will perform availability zone balancing.\nIf <code>false</code>, this App Service Plan will not perform availability zone balancing.",
          "type": "boolean"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
