{
  "description": "Generator information:\n- Generated from: /web/resource-manager/Microsoft.Web/stable/2022-03-01/WebApps.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Web/sites/{name}/sourcecontrols/web",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "branch": {
          "description": "Branch: Name of branch to use for deployment.",
          "type": "string"
        },
        "deploymentRollbackEnabled": {
          "description": "DeploymentRollbackEnabled: <code>true</code> to enable deployment rollback; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "gitHubActionConfiguration": {
          "description": "GitHubActionConfiguration: If GitHub Action is selected, than the associated configuration.",
          "properties": {
            "codeConfiguration": {
              "description": "CodeConfiguration: GitHub Action code configuration.",
              "properties": {
                "runtimeStack": {
                  "description": "RuntimeStack: Runtime stack is used to determine the workflow file content for code base apps.",
                  "type": "string"
                },
                "runtimeVersion": {
                  "description": "RuntimeVersion: Runtime version is used to determine what build version to set in the workflow file.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "containerConfiguration": {
              "description": "ContainerConfiguration: GitHub Action container configuration.",
              "properties": {
                "imageName": {
                  "description": "ImageName: The image name for the build.",
                  "type": "string"
                },
                "password": {
                  "description": "Password: The password used to upload the image to the container registry.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret being referenced.\nThe secret must be in the same namespace as the resource",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "serverUrl": {
                  "description": "ServerUrl: The server URL for the container registry where the build will be hosted.",
                  "type": "string"
                },
                "username": {
                  "description": "Username: The username used to upload the image to the container registry.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "generateWorkflowFile": {
              "description": "GenerateWorkflowFile: Workflow option to determine whether the workflow file should be generated and written to the\nrepository.",
              "type": "boolean"
            },
            "isLinux": {
              "description": "IsLinux: This will help determine the workflow configuration to select.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "isGitHubAction": {
          "description": "IsGitHubAction: <code>true</code> if this is deployed via GitHub action.",
          "type": "boolean"
        },
        "isManualIntegration": {
          "description": "IsManualIntegration: <code>true</code> to limit to manual integration; <code>false</code> to enable continuous\nintegration (which configures webhooks into online repos like GitHub).",
          "type": "boolean"
        },
        "isMercurial": {
          "description": "IsMercurial: <code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind: Kind of resource.",
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a web.azure.com/Site resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "repoUrl": {
          "description": "RepoUrl: Repository or source control URL.",
          "type": "string"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "branch": {
          "description": "Branch: Name of branch to use for deployment.",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "deploymentRollbackEnabled": {
          "description": "DeploymentRollbackEnabled: <code>true</code> to enable deployment rollback; otherwise, <code>false</code>.",
          "type": "boolean"
        },
        "gitHubActionConfiguration": {
          "description": "GitHubActionConfiguration: If GitHub Action is selected, than the associated configuration.",
          "properties": {
            "codeConfiguration": {
              "description": "CodeConfiguration: GitHub Action code configuration.",
              "properties": {
                "runtimeStack": {
                  "description": "RuntimeStack: Runtime stack is used to determine the workflow file content for code base apps.",
                  "type": "string"
                },
                "runtimeVersion": {
                  "description": "RuntimeVersion: Runtime version is used to determine what build version to set in the workflow file.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "containerConfiguration": {
              "description": "ContainerConfiguration: GitHub Action container configuration.",
              "properties": {
                "imageName": {
                  "description": "ImageName: The image name for the build.",
                  "type": "string"
                },
                "serverUrl": {
                  "description": "ServerUrl: The server URL for the container registry where the build will be hosted.",
                  "type": "string"
                },
                "username": {
                  "description": "Username: The username used to upload the image to the container registry.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "generateWorkflowFile": {
              "description": "GenerateWorkflowFile: Workflow option to determine whether the workflow file should be generated and written to the\nrepository.",
              "type": "boolean"
            },
            "isLinux": {
              "description": "IsLinux: This will help determine the workflow configuration to select.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "id": {
          "description": "Id: Resource Id.",
          "type": "string"
        },
        "isGitHubAction": {
          "description": "IsGitHubAction: <code>true</code> if this is deployed via GitHub action.",
          "type": "boolean"
        },
        "isManualIntegration": {
          "description": "IsManualIntegration: <code>true</code> to limit to manual integration; <code>false</code> to enable continuous\nintegration (which configures webhooks into online repos like GitHub).",
          "type": "boolean"
        },
        "isMercurial": {
          "description": "IsMercurial: <code>true</code> for a Mercurial repository; <code>false</code> for a Git repository.",
          "type": "boolean"
        },
        "kind": {
          "description": "Kind: Kind of resource.",
          "type": "string"
        },
        "name": {
          "description": "Name: Resource Name.",
          "type": "string"
        },
        "repoUrl": {
          "description": "RepoUrl: Repository or source control URL.",
          "type": "string"
        },
        "type": {
          "description": "Type: Resource type.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
