{
  "description": "Generator information:\n- Generated from: /network/resource-manager/Microsoft.Network/stable/2024-03-01/privateEndpoint.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/privateEndpoints/{privateEndpointName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "applicationSecurityGroups": {
          "description": "ApplicationSecurityGroups: Application security groups in which the private endpoint IP configuration is included.",
          "items": {
            "description": "An application security group in a resource group.",
            "properties": {
              "reference": {
                "description": "Reference: Resource ID.",
                "properties": {
                  "armId": {
                    "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                    "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                    "type": "string"
                  },
                  "group": {
                    "description": "Group is the Kubernetes group of the resource.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind is the Kubernetes kind of the resource.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the Kubernetes name of the resource.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "customNetworkInterfaceName": {
          "description": "CustomNetworkInterfaceName: The custom name of the network interface attached to the private endpoint.",
          "type": "string"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: The extended location of the load balancer.",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "enum": [
                "EdgeZone"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "ipConfigurations": {
          "description": "IpConfigurations: A list of IP configurations of the private endpoint. This will be used to map to the First Party\nService's endpoints.",
          "items": {
            "description": "An IP Configuration of the private endpoint.",
            "properties": {
              "groupId": {
                "description": "GroupId: The ID of a group obtained from the remote resource that this private endpoint should connect to.",
                "type": "string"
              },
              "memberName": {
                "description": "MemberName: The member name of a group obtained from the remote resource that this private endpoint should connect to.",
                "type": "string"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within a resource group.",
                "type": "string"
              },
              "privateIPAddress": {
                "description": "PrivateIPAddress: A private ip address obtained from the private endpoint's subnet.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "location": {
          "description": "Location: Resource location.",
          "type": "string"
        },
        "manualPrivateLinkServiceConnections": {
          "description": "ManualPrivateLinkServiceConnections: A grouping of information about the connection to the remote resource. Used when\nthe network admin does not have access to approve connections to the remote resource.",
          "items": {
            "description": "PrivateLinkServiceConnection resource.",
            "properties": {
              "groupIds": {
                "description": "GroupIds: The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.",
                "type": "string"
              },
              "privateLinkServiceConnectionState": {
                "description": "PrivateLinkServiceConnectionState: A collection of read-only information about the state of the connection to the remote\nresource.",
                "properties": {
                  "actionsRequired": {
                    "description": "ActionsRequired: A message indicating if changes on the service provider require any updates on the consumer.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description: The reason for approval/rejection of the connection.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "privateLinkServiceReference": {
                "description": "PrivateLinkServiceReference: The resource id of private link service.",
                "properties": {
                  "armId": {
                    "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                    "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                    "type": "string"
                  },
                  "group": {
                    "description": "Group is the Kubernetes group of the resource.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind is the Kubernetes kind of the resource.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the Kubernetes name of the resource.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "requestMessage": {
                "description": "RequestMessage: A message passed to the owner of the remote resource with this connection request. Restricted to 140\nchars.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "configMaps": {
              "description": "ConfigMaps: configures where to place operator written ConfigMaps.",
              "properties": {
                "primaryNicPrivateIpAddress": {
                  "description": "PrimaryNicPrivateIpAddress: indicates where the PrimaryNicPrivateIpAddress config map should be placed. If omitted, no\nconfig map will be created.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the ConfigMap being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes ConfigMap to write to.\nThe ConfigMap will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "privateLinkServiceConnections": {
          "description": "PrivateLinkServiceConnections: A grouping of information about the connection to the remote resource.",
          "items": {
            "description": "PrivateLinkServiceConnection resource.",
            "properties": {
              "groupIds": {
                "description": "GroupIds: The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.",
                "type": "string"
              },
              "privateLinkServiceConnectionState": {
                "description": "PrivateLinkServiceConnectionState: A collection of read-only information about the state of the connection to the remote\nresource.",
                "properties": {
                  "actionsRequired": {
                    "description": "ActionsRequired: A message indicating if changes on the service provider require any updates on the consumer.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description: The reason for approval/rejection of the connection.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "privateLinkServiceReference": {
                "description": "PrivateLinkServiceReference: The resource id of private link service.",
                "properties": {
                  "armId": {
                    "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                    "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                    "type": "string"
                  },
                  "group": {
                    "description": "Group is the Kubernetes group of the resource.",
                    "type": "string"
                  },
                  "kind": {
                    "description": "Kind is the Kubernetes kind of the resource.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the Kubernetes name of the resource.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "requestMessage": {
                "description": "RequestMessage: A message passed to the owner of the remote resource with this connection request. Restricted to 140\nchars.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "subnet": {
          "description": "Subnet: The ID of the subnet from which the private IP will be allocated.",
          "properties": {
            "reference": {
              "description": "Reference: Resource ID.",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "Private endpoint resource.",
      "properties": {
        "applicationSecurityGroups": {
          "description": "ApplicationSecurityGroups: Application security groups in which the private endpoint IP configuration is included.",
          "items": {
            "description": "An application security group in a resource group.",
            "properties": {
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "customDnsConfigs": {
          "description": "CustomDnsConfigs: An array of custom dns configurations.",
          "items": {
            "description": "Contains custom Dns resolution configuration from customer.",
            "properties": {
              "fqdn": {
                "description": "Fqdn: Fqdn that resolves to private endpoint ip address.",
                "type": "string"
              },
              "ipAddresses": {
                "description": "IpAddresses: A list of private ip addresses of the private endpoint.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "customNetworkInterfaceName": {
          "description": "CustomNetworkInterfaceName: The custom name of the network interface attached to the private endpoint.",
          "type": "string"
        },
        "etag": {
          "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
          "type": "string"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: The extended location of the load balancer.",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "id": {
          "description": "Id: Resource ID.",
          "type": "string"
        },
        "ipConfigurations": {
          "description": "IpConfigurations: A list of IP configurations of the private endpoint. This will be used to map to the First Party\nService's endpoints.",
          "items": {
            "description": "An IP Configuration of the private endpoint.",
            "properties": {
              "etag": {
                "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
                "type": "string"
              },
              "groupId": {
                "description": "GroupId: The ID of a group obtained from the remote resource that this private endpoint should connect to.",
                "type": "string"
              },
              "memberName": {
                "description": "MemberName: The member name of a group obtained from the remote resource that this private endpoint should connect to.",
                "type": "string"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within a resource group.",
                "type": "string"
              },
              "privateIPAddress": {
                "description": "PrivateIPAddress: A private ip address obtained from the private endpoint's subnet.",
                "type": "string"
              },
              "type": {
                "description": "Type: The resource type.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "location": {
          "description": "Location: Resource location.",
          "type": "string"
        },
        "manualPrivateLinkServiceConnections": {
          "description": "ManualPrivateLinkServiceConnections: A grouping of information about the connection to the remote resource. Used when\nthe network admin does not have access to approve connections to the remote resource.",
          "items": {
            "description": "PrivateLinkServiceConnection resource.",
            "properties": {
              "etag": {
                "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
                "type": "string"
              },
              "groupIds": {
                "description": "GroupIds: The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.",
                "type": "string"
              },
              "privateLinkServiceConnectionState": {
                "description": "PrivateLinkServiceConnectionState: A collection of read-only information about the state of the connection to the remote\nresource.",
                "properties": {
                  "actionsRequired": {
                    "description": "ActionsRequired: A message indicating if changes on the service provider require any updates on the consumer.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description: The reason for approval/rejection of the connection.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "privateLinkServiceId": {
                "description": "PrivateLinkServiceId: The resource id of private link service.",
                "type": "string"
              },
              "provisioningState": {
                "description": "ProvisioningState: The provisioning state of the private link service connection resource.",
                "type": "string"
              },
              "requestMessage": {
                "description": "RequestMessage: A message passed to the owner of the remote resource with this connection request. Restricted to 140\nchars.",
                "type": "string"
              },
              "type": {
                "description": "Type: The resource type.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "name": {
          "description": "Name: Resource name.",
          "type": "string"
        },
        "networkInterfaces": {
          "description": "NetworkInterfaces: An array of references to the network interfaces created for this private endpoint.",
          "items": {
            "description": "A network interface in a resource group.",
            "properties": {
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "privateLinkServiceConnections": {
          "description": "PrivateLinkServiceConnections: A grouping of information about the connection to the remote resource.",
          "items": {
            "description": "PrivateLinkServiceConnection resource.",
            "properties": {
              "etag": {
                "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
                "type": "string"
              },
              "groupIds": {
                "description": "GroupIds: The ID(s) of the group(s) obtained from the remote resource that this private endpoint should connect to.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              },
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.",
                "type": "string"
              },
              "privateLinkServiceConnectionState": {
                "description": "PrivateLinkServiceConnectionState: A collection of read-only information about the state of the connection to the remote\nresource.",
                "properties": {
                  "actionsRequired": {
                    "description": "ActionsRequired: A message indicating if changes on the service provider require any updates on the consumer.",
                    "type": "string"
                  },
                  "description": {
                    "description": "Description: The reason for approval/rejection of the connection.",
                    "type": "string"
                  },
                  "status": {
                    "description": "Status: Indicates whether the connection has been Approved/Rejected/Removed by the owner of the service.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "privateLinkServiceId": {
                "description": "PrivateLinkServiceId: The resource id of private link service.",
                "type": "string"
              },
              "provisioningState": {
                "description": "ProvisioningState: The provisioning state of the private link service connection resource.",
                "type": "string"
              },
              "requestMessage": {
                "description": "RequestMessage: A message passed to the owner of the remote resource with this connection request. Restricted to 140\nchars.",
                "type": "string"
              },
              "type": {
                "description": "Type: The resource type.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "provisioningState": {
          "description": "ProvisioningState: The provisioning state of the private endpoint resource.",
          "type": "string"
        },
        "subnet": {
          "description": "Subnet: The ID of the subnet from which the private IP will be allocated.",
          "properties": {
            "id": {
              "description": "Id: Resource ID.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "type": {
          "description": "Type: Resource type.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
