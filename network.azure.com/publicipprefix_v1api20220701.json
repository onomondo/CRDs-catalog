{
  "description": "Generator information:\n- Generated from: /network/resource-manager/Microsoft.Network/stable/2022-07-01/publicIpPrefix.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/publicIPPrefixes/{publicIpPrefixName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "customIPPrefix": {
          "description": "CustomIPPrefix: The customIpPrefix that this prefix is associated with.",
          "properties": {
            "reference": {
              "description": "Reference: Resource ID.",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "extendedLocation": {
          "description": "ExtendedLocation: The extended location of the public ip address.",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "enum": [
                "EdgeZone"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "ipTags": {
          "description": "IpTags: The list of tags associated with the public IP prefix.",
          "items": {
            "description": "Contains the IpTag associated with the object.",
            "properties": {
              "ipTagType": {
                "description": "IpTagType: The IP tag type. Example: FirstPartyUsage.",
                "type": "string"
              },
              "tag": {
                "description": "Tag: The value of the IP tag associated with the public IP. Example: SQL.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "location": {
          "description": "Location: Resource location.",
          "type": "string"
        },
        "natGateway": {
          "description": "NatGateway: NatGateway of Public IP Prefix.",
          "properties": {
            "reference": {
              "description": "Reference: Resource ID.",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "prefixLength": {
          "description": "PrefixLength: The Length of the Public IP Prefix.",
          "type": "integer"
        },
        "publicIPAddressVersion": {
          "description": "PublicIPAddressVersion: The public IP address version.",
          "enum": [
            "IPv4",
            "IPv6"
          ],
          "type": "string"
        },
        "sku": {
          "description": "Sku: The public IP prefix SKU.",
          "properties": {
            "name": {
              "description": "Name: Name of a public IP prefix SKU.",
              "enum": [
                "Standard"
              ],
              "type": "string"
            },
            "tier": {
              "description": "Tier: Tier of a public IP prefix SKU.",
              "enum": [
                "Global",
                "Regional"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "zones": {
          "description": "Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "Public IP prefix resource.",
      "properties": {
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "customIPPrefix": {
          "description": "CustomIPPrefix: The customIpPrefix that this prefix is associated with.",
          "properties": {
            "id": {
              "description": "Id: Resource ID.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "etag": {
          "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
          "type": "string"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: The extended location of the public ip address.",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "id": {
          "description": "Id: Resource ID.",
          "type": "string"
        },
        "ipPrefix": {
          "description": "IpPrefix: The allocated Prefix.",
          "type": "string"
        },
        "ipTags": {
          "description": "IpTags: The list of tags associated with the public IP prefix.",
          "items": {
            "description": "Contains the IpTag associated with the object.",
            "properties": {
              "ipTagType": {
                "description": "IpTagType: The IP tag type. Example: FirstPartyUsage.",
                "type": "string"
              },
              "tag": {
                "description": "Tag: The value of the IP tag associated with the public IP. Example: SQL.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "loadBalancerFrontendIpConfiguration": {
          "description": "LoadBalancerFrontendIpConfiguration: The reference to load balancer frontend IP configuration associated with the public\nIP prefix.",
          "properties": {
            "id": {
              "description": "Id: Resource ID.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "location": {
          "description": "Location: Resource location.",
          "type": "string"
        },
        "name": {
          "description": "Name: Resource name.",
          "type": "string"
        },
        "natGateway": {
          "description": "NatGateway: NatGateway of Public IP Prefix.",
          "properties": {
            "id": {
              "description": "Id: Resource ID.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "prefixLength": {
          "description": "PrefixLength: The Length of the Public IP Prefix.",
          "type": "integer"
        },
        "provisioningState": {
          "description": "ProvisioningState: The provisioning state of the public IP prefix resource.",
          "type": "string"
        },
        "publicIPAddressVersion": {
          "description": "PublicIPAddressVersion: The public IP address version.",
          "type": "string"
        },
        "publicIPAddresses": {
          "description": "PublicIPAddresses: The list of all referenced PublicIPAddresses.",
          "items": {
            "description": "Reference to a public IP address.",
            "properties": {
              "id": {
                "description": "Id: The PublicIPAddress Reference.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "resourceGuid": {
          "description": "ResourceGuid: The resource GUID property of the public IP prefix resource.",
          "type": "string"
        },
        "sku": {
          "description": "Sku: The public IP prefix SKU.",
          "properties": {
            "name": {
              "description": "Name: Name of a public IP prefix SKU.",
              "type": "string"
            },
            "tier": {
              "description": "Tier: Tier of a public IP prefix SKU.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "type": {
          "description": "Type: Resource type.",
          "type": "string"
        },
        "zones": {
          "description": "Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.",
          "items": {
            "type": "string"
          },
          "type": "array"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
