{
  "description": "Generator information:\n- Generated from: /network/resource-manager/Microsoft.Network/stable/2024-03-01/networkInterface.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/networkInterfaces/{networkInterfaceName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "auxiliaryMode": {
          "description": "AuxiliaryMode: Auxiliary mode of Network Interface resource.",
          "enum": [
            "AcceleratedConnections",
            "Floating",
            "MaxConnections",
            "None"
          ],
          "type": "string"
        },
        "auxiliarySku": {
          "description": "AuxiliarySku: Auxiliary sku of Network Interface resource.",
          "enum": [
            "A1",
            "A2",
            "A4",
            "A8",
            "None"
          ],
          "type": "string"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "disableTcpStateTracking": {
          "description": "DisableTcpStateTracking: Indicates whether to disable tcp state tracking.",
          "type": "boolean"
        },
        "dnsSettings": {
          "description": "DnsSettings: The DNS settings in network interface.",
          "properties": {
            "dnsServers": {
              "description": "DnsServers: List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution.\n'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "internalDnsNameLabel": {
              "description": "InternalDnsNameLabel: Relative DNS name for this NIC used for internal communications between VMs in the same virtual\nnetwork.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "enableAcceleratedNetworking": {
          "description": "EnableAcceleratedNetworking: If the network interface is configured for accelerated networking. Not applicable to VM\nsizes which require accelerated networking.",
          "type": "boolean"
        },
        "enableIPForwarding": {
          "description": "EnableIPForwarding: Indicates whether IP forwarding is enabled on this network interface.",
          "type": "boolean"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: The extended location of the network interface.",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "enum": [
                "EdgeZone"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "ipConfigurations": {
          "description": "IpConfigurations: A list of IPConfigurations of the network interface.",
          "items": {
            "description": "IPConfiguration in a network interface.",
            "properties": {
              "applicationGatewayBackendAddressPools": {
                "description": "ApplicationGatewayBackendAddressPools: The reference to ApplicationGatewayBackendAddressPool resource.",
                "items": {
                  "description": "Backend Address Pool of an application gateway.",
                  "properties": {
                    "reference": {
                      "description": "Reference: Resource ID.",
                      "properties": {
                        "armId": {
                          "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                          "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                          "type": "string"
                        },
                        "group": {
                          "description": "Group is the Kubernetes group of the resource.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the Kubernetes kind of the resource.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the Kubernetes name of the resource.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "applicationSecurityGroups": {
                "description": "ApplicationSecurityGroups: Application security groups in which the IP configuration is included.",
                "items": {
                  "description": "An application security group in a resource group.",
                  "properties": {
                    "reference": {
                      "description": "Reference: Resource ID.",
                      "properties": {
                        "armId": {
                          "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                          "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                          "type": "string"
                        },
                        "group": {
                          "description": "Group is the Kubernetes group of the resource.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the Kubernetes kind of the resource.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the Kubernetes name of the resource.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "gatewayLoadBalancer": {
                "description": "GatewayLoadBalancer: The reference to gateway load balancer frontend IP.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "loadBalancerBackendAddressPools": {
                "description": "LoadBalancerBackendAddressPools: The reference to LoadBalancerBackendAddressPool resource.",
                "items": {
                  "description": "Pool of backend IP addresses.",
                  "properties": {
                    "reference": {
                      "description": "Reference: Resource ID.",
                      "properties": {
                        "armId": {
                          "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                          "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                          "type": "string"
                        },
                        "group": {
                          "description": "Group is the Kubernetes group of the resource.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the Kubernetes kind of the resource.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the Kubernetes name of the resource.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "loadBalancerInboundNatRules": {
                "description": "LoadBalancerInboundNatRules: A list of references of LoadBalancerInboundNatRules.",
                "items": {
                  "description": "Inbound NAT rule of the load balancer.",
                  "properties": {
                    "reference": {
                      "description": "Reference: Resource ID.",
                      "properties": {
                        "armId": {
                          "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                          "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                          "type": "string"
                        },
                        "group": {
                          "description": "Group is the Kubernetes group of the resource.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the Kubernetes kind of the resource.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the Kubernetes name of the resource.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.",
                "type": "string"
              },
              "primary": {
                "description": "Primary: Whether this is a primary customer address on the network interface.",
                "type": "boolean"
              },
              "privateIPAddress": {
                "description": "PrivateIPAddress: Private IP address of the IP configuration. It can be a single IP address or a CIDR block in the\nformat <address>/<prefix-length>.",
                "type": "string"
              },
              "privateIPAddressPrefixLength": {
                "description": "PrivateIPAddressPrefixLength: The private IP address prefix length. If specified and the allocation method is dynamic,\nthe service will allocate a CIDR block instead of a single IP address.",
                "maximum": 128,
                "minimum": 1,
                "type": "integer"
              },
              "privateIPAddressVersion": {
                "description": "PrivateIPAddressVersion: Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.",
                "enum": [
                  "IPv4",
                  "IPv6"
                ],
                "type": "string"
              },
              "privateIPAllocationMethod": {
                "description": "PrivateIPAllocationMethod: The private IP address allocation method.",
                "enum": [
                  "Dynamic",
                  "Static"
                ],
                "type": "string"
              },
              "publicIPAddress": {
                "description": "PublicIPAddress: Public IP address bound to the IP configuration.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "subnet": {
                "description": "Subnet: Subnet bound to the IP configuration.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "virtualNetworkTaps": {
                "description": "VirtualNetworkTaps: The reference to Virtual Network Taps.",
                "items": {
                  "description": "Virtual Network Tap resource.",
                  "properties": {
                    "reference": {
                      "description": "Reference: Resource ID.",
                      "properties": {
                        "armId": {
                          "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                          "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                          "type": "string"
                        },
                        "group": {
                          "description": "Group is the Kubernetes group of the resource.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the Kubernetes kind of the resource.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the Kubernetes name of the resource.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "location": {
          "description": "Location: Resource location.",
          "type": "string"
        },
        "networkSecurityGroup": {
          "description": "NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.",
          "properties": {
            "reference": {
              "description": "Reference: Resource ID.",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "nicType": {
          "description": "NicType: Type of Network Interface resource.",
          "enum": [
            "Elastic",
            "Standard"
          ],
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "privateLinkService": {
          "description": "PrivateLinkService: Privatelinkservice of the network interface resource.",
          "properties": {
            "reference": {
              "description": "Reference: Resource ID.",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "workloadType": {
          "description": "WorkloadType: WorkloadType of the NetworkInterface for BareMetal resources",
          "type": "string"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "A network interface in a resource group.",
      "properties": {
        "auxiliaryMode": {
          "description": "AuxiliaryMode: Auxiliary mode of Network Interface resource.",
          "type": "string"
        },
        "auxiliarySku": {
          "description": "AuxiliarySku: Auxiliary sku of Network Interface resource.",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "disableTcpStateTracking": {
          "description": "DisableTcpStateTracking: Indicates whether to disable tcp state tracking.",
          "type": "boolean"
        },
        "dnsSettings": {
          "description": "DnsSettings: The DNS settings in network interface.",
          "properties": {
            "appliedDnsServers": {
              "description": "AppliedDnsServers: If the VM that uses this NIC is part of an Availability Set, then this list will have the union of\nall DNS servers from all NICs that are part of the Availability Set. This property is what is configured on each of\nthose VMs.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "dnsServers": {
              "description": "DnsServers: List of DNS servers IP addresses. Use 'AzureProvidedDNS' to switch to azure provided DNS resolution.\n'AzureProvidedDNS' value cannot be combined with other IPs, it must be the only value in dnsServers collection.",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "internalDnsNameLabel": {
              "description": "InternalDnsNameLabel: Relative DNS name for this NIC used for internal communications between VMs in the same virtual\nnetwork.",
              "type": "string"
            },
            "internalDomainNameSuffix": {
              "description": "InternalDomainNameSuffix: Even if internalDnsNameLabel is not specified, a DNS entry is created for the primary NIC of\nthe VM. This DNS name can be constructed by concatenating the VM name with the value of internalDomainNameSuffix.",
              "type": "string"
            },
            "internalFqdn": {
              "description": "InternalFqdn: Fully qualified DNS name supporting internal communications between VMs in the same virtual network.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "dscpConfiguration": {
          "description": "DscpConfiguration: A reference to the dscp configuration to which the network interface is linked.",
          "properties": {
            "id": {
              "description": "Id: Resource ID.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "enableAcceleratedNetworking": {
          "description": "EnableAcceleratedNetworking: If the network interface is configured for accelerated networking. Not applicable to VM\nsizes which require accelerated networking.",
          "type": "boolean"
        },
        "enableIPForwarding": {
          "description": "EnableIPForwarding: Indicates whether IP forwarding is enabled on this network interface.",
          "type": "boolean"
        },
        "etag": {
          "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
          "type": "string"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: The extended location of the network interface.",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "hostedWorkloads": {
          "description": "HostedWorkloads: A list of references to linked BareMetal resources.",
          "items": {
            "type": "string"
          },
          "type": "array"
        },
        "id": {
          "description": "Id: Resource ID.",
          "type": "string"
        },
        "ipConfigurations": {
          "description": "IpConfigurations: A list of IPConfigurations of the network interface.",
          "items": {
            "description": "IPConfiguration in a network interface.",
            "properties": {
              "applicationGatewayBackendAddressPools": {
                "description": "ApplicationGatewayBackendAddressPools: The reference to ApplicationGatewayBackendAddressPool resource.",
                "items": {
                  "description": "Backend Address Pool of an application gateway.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "applicationSecurityGroups": {
                "description": "ApplicationSecurityGroups: Application security groups in which the IP configuration is included.",
                "items": {
                  "description": "An application security group in a resource group.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "etag": {
                "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
                "type": "string"
              },
              "gatewayLoadBalancer": {
                "description": "GatewayLoadBalancer: The reference to gateway load balancer frontend IP.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              },
              "loadBalancerBackendAddressPools": {
                "description": "LoadBalancerBackendAddressPools: The reference to LoadBalancerBackendAddressPool resource.",
                "items": {
                  "description": "Pool of backend IP addresses.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "loadBalancerInboundNatRules": {
                "description": "LoadBalancerInboundNatRules: A list of references of LoadBalancerInboundNatRules.",
                "items": {
                  "description": "Inbound NAT rule of the load balancer.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.",
                "type": "string"
              },
              "primary": {
                "description": "Primary: Whether this is a primary customer address on the network interface.",
                "type": "boolean"
              },
              "privateIPAddress": {
                "description": "PrivateIPAddress: Private IP address of the IP configuration. It can be a single IP address or a CIDR block in the\nformat <address>/<prefix-length>.",
                "type": "string"
              },
              "privateIPAddressPrefixLength": {
                "description": "PrivateIPAddressPrefixLength: The private IP address prefix length. If specified and the allocation method is dynamic,\nthe service will allocate a CIDR block instead of a single IP address.",
                "type": "integer"
              },
              "privateIPAddressVersion": {
                "description": "PrivateIPAddressVersion: Whether the specific IP configuration is IPv4 or IPv6. Default is IPv4.",
                "type": "string"
              },
              "privateIPAllocationMethod": {
                "description": "PrivateIPAllocationMethod: The private IP address allocation method.",
                "type": "string"
              },
              "privateLinkConnectionProperties": {
                "description": "PrivateLinkConnectionProperties: PrivateLinkConnection properties for the network interface.",
                "properties": {
                  "fqdns": {
                    "description": "Fqdns: List of FQDNs for current private link connection.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "groupId": {
                    "description": "GroupId: The group ID for current private link connection.",
                    "type": "string"
                  },
                  "requiredMemberName": {
                    "description": "RequiredMemberName: The required member name for current private link connection.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "provisioningState": {
                "description": "ProvisioningState: The provisioning state of the network interface IP configuration.",
                "type": "string"
              },
              "publicIPAddress": {
                "description": "PublicIPAddress: Public IP address bound to the IP configuration.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "subnet": {
                "description": "Subnet: Subnet bound to the IP configuration.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": {
                "description": "Type: Resource type.",
                "type": "string"
              },
              "virtualNetworkTaps": {
                "description": "VirtualNetworkTaps: The reference to Virtual Network Taps.",
                "items": {
                  "description": "Virtual Network Tap resource.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "location": {
          "description": "Location: Resource location.",
          "type": "string"
        },
        "macAddress": {
          "description": "MacAddress: The MAC address of the network interface.",
          "type": "string"
        },
        "migrationPhase": {
          "description": "MigrationPhase: Migration phase of Network Interface resource.",
          "type": "string"
        },
        "name": {
          "description": "Name: Resource name.",
          "type": "string"
        },
        "networkSecurityGroup": {
          "description": "NetworkSecurityGroup: The reference to the NetworkSecurityGroup resource.",
          "properties": {
            "id": {
              "description": "Id: Resource ID.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "nicType": {
          "description": "NicType: Type of Network Interface resource.",
          "type": "string"
        },
        "primary": {
          "description": "Primary: Whether this is a primary network interface on a virtual machine.",
          "type": "boolean"
        },
        "privateEndpoint": {
          "description": "PrivateEndpoint: A reference to the private endpoint to which the network interface is linked.",
          "properties": {
            "id": {
              "description": "Id: Resource ID.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "privateLinkService": {
          "description": "PrivateLinkService: Privatelinkservice of the network interface resource.",
          "properties": {
            "id": {
              "description": "Id: Resource ID.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "provisioningState": {
          "description": "ProvisioningState: The provisioning state of the network interface resource.",
          "type": "string"
        },
        "resourceGuid": {
          "description": "ResourceGuid: The resource GUID property of the network interface resource.",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "tapConfigurations": {
          "description": "TapConfigurations: A list of TapConfigurations of the network interface.",
          "items": {
            "description": "Tap configuration in a Network Interface.",
            "properties": {
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "type": {
          "description": "Type: Resource type.",
          "type": "string"
        },
        "virtualMachine": {
          "description": "VirtualMachine: The reference to a virtual machine.",
          "properties": {
            "id": {
              "description": "Id: Resource ID.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "vnetEncryptionSupported": {
          "description": "VnetEncryptionSupported: Whether the virtual machine this nic is attached to supports encryption.",
          "type": "boolean"
        },
        "workloadType": {
          "description": "WorkloadType: WorkloadType of the NetworkInterface for BareMetal resources",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
