{
  "description": "Generator information:\n- Generated from: /network/resource-manager/Microsoft.Network/stable/2024-03-01/loadBalancer.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/loadBalancers/{loadBalancerName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "backendAddressPools": {
          "description": "BackendAddressPools: Collection of backend address pools used by a load balancer.",
          "items": {
            "description": "Pool of backend IP addresses.",
            "properties": {
              "drainPeriodInSeconds": {
                "description": "DrainPeriodInSeconds: Amount of seconds Load Balancer waits for before sending RESET to client and backend address.",
                "type": "integer"
              },
              "loadBalancerBackendAddresses": {
                "description": "LoadBalancerBackendAddresses: An array of backend addresses.",
                "items": {
                  "description": "Load balancer backend addresses.",
                  "properties": {
                    "adminState": {
                      "description": "AdminState: A list of administrative states which once set can override health probe so that Load Balancer will always\nforward new connections to backend, or deny new connections and reset existing connections.",
                      "enum": [
                        "Down",
                        "None",
                        "Up"
                      ],
                      "type": "string"
                    },
                    "ipAddress": {
                      "description": "IpAddress: IP Address belonging to the referenced virtual network.",
                      "type": "string"
                    },
                    "loadBalancerFrontendIPConfiguration": {
                      "description": "LoadBalancerFrontendIPConfiguration: Reference to the frontend ip address configuration defined in regional loadbalancer.",
                      "properties": {
                        "reference": {
                          "description": "Reference: Resource ID.",
                          "properties": {
                            "armId": {
                              "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                              "type": "string"
                            },
                            "group": {
                              "description": "Group is the Kubernetes group of the resource.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind is the Kubernetes kind of the resource.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name is the Kubernetes name of the resource.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "name": {
                      "description": "Name: Name of the backend address.",
                      "type": "string"
                    },
                    "subnet": {
                      "description": "Subnet: Reference to an existing subnet.",
                      "properties": {
                        "reference": {
                          "description": "Reference: Resource ID.",
                          "properties": {
                            "armId": {
                              "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                              "type": "string"
                            },
                            "group": {
                              "description": "Group is the Kubernetes group of the resource.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind is the Kubernetes kind of the resource.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name is the Kubernetes name of the resource.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "virtualNetwork": {
                      "description": "VirtualNetwork: Reference to an existing virtual network.",
                      "properties": {
                        "reference": {
                          "description": "Reference: Resource ID.",
                          "properties": {
                            "armId": {
                              "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                              "type": "string"
                            },
                            "group": {
                              "description": "Group is the Kubernetes group of the resource.",
                              "type": "string"
                            },
                            "kind": {
                              "description": "Kind is the Kubernetes kind of the resource.",
                              "type": "string"
                            },
                            "name": {
                              "description": "Name is the Kubernetes name of the resource.",
                              "type": "string"
                            }
                          },
                          "type": "object",
                          "additionalProperties": false
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "location": {
                "description": "Location: The location of the backend address pool.",
                "type": "string"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within the set of backend address pools used by the load balancer. This\nname can be used to access the resource.",
                "type": "string"
              },
              "syncMode": {
                "description": "SyncMode: Backend address synchronous mode for the backend pool",
                "enum": [
                  "Automatic",
                  "Manual"
                ],
                "type": "string"
              },
              "tunnelInterfaces": {
                "description": "TunnelInterfaces: An array of gateway load balancer tunnel interfaces.",
                "items": {
                  "description": "Gateway load balancer tunnel interface of a load balancer backend address pool.",
                  "properties": {
                    "identifier": {
                      "description": "Identifier: Identifier of gateway load balancer tunnel interface.",
                      "type": "integer"
                    },
                    "port": {
                      "description": "Port: Port of gateway load balancer tunnel interface.",
                      "type": "integer"
                    },
                    "protocol": {
                      "description": "Protocol: Protocol of gateway load balancer tunnel interface.",
                      "enum": [
                        "Native",
                        "None",
                        "VXLAN"
                      ],
                      "type": "string"
                    },
                    "type": {
                      "description": "Type: Traffic type of gateway load balancer tunnel interface.",
                      "enum": [
                        "External",
                        "Internal",
                        "None"
                      ],
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "virtualNetwork": {
                "description": "VirtualNetwork: A reference to a virtual network.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: The extended location of the load balancer.",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "enum": [
                "EdgeZone"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "frontendIPConfigurations": {
          "description": "FrontendIPConfigurations: Object representing the frontend IPs to be used for the load balancer.",
          "items": {
            "description": "Frontend IP address of the load balancer.",
            "properties": {
              "gatewayLoadBalancer": {
                "description": "GatewayLoadBalancer: The reference to gateway load balancer frontend IP.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "name": {
                "description": "Name: The name of the resource that is unique within the set of frontend IP configurations used by the load balancer.\nThis name can be used to access the resource.",
                "type": "string"
              },
              "privateIPAddress": {
                "description": "PrivateIPAddress: The private IP address of the IP configuration.",
                "type": "string"
              },
              "privateIPAddressVersion": {
                "description": "PrivateIPAddressVersion: Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.",
                "enum": [
                  "IPv4",
                  "IPv6"
                ],
                "type": "string"
              },
              "privateIPAllocationMethod": {
                "description": "PrivateIPAllocationMethod: The Private IP allocation method.",
                "enum": [
                  "Dynamic",
                  "Static"
                ],
                "type": "string"
              },
              "publicIPAddress": {
                "description": "PublicIPAddress: The reference to the Public IP resource.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "publicIPPrefix": {
                "description": "PublicIPPrefix: The reference to the Public IP Prefix resource.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "subnet": {
                "description": "Subnet: The reference to the subnet resource.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "zones": {
                "description": "Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "inboundNatPools": {
          "description": "InboundNatPools: Defines an external port range for inbound NAT to a single backend port on NICs associated with a load\nbalancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external\nport from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound NAT\nrules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual\nvirtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.",
          "items": {
            "description": "Inbound NAT pool of the load balancer.",
            "properties": {
              "backendPort": {
                "description": "BackendPort: The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
                "type": "integer"
              },
              "enableFloatingIP": {
                "description": "EnableFloatingIP: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL\nAlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server.\nThis setting can't be changed after you create the endpoint.",
                "type": "boolean"
              },
              "enableTcpReset": {
                "description": "EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This\nelement is only used when the protocol is set to TCP.",
                "type": "boolean"
              },
              "frontendIPConfiguration": {
                "description": "FrontendIPConfiguration: A reference to frontend IP addresses.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "frontendPortRangeEnd": {
                "description": "FrontendPortRangeEnd: The last port number in the range of external ports that will be used to provide Inbound Nat to\nNICs associated with a load balancer. Acceptable values range between 1 and 65535.",
                "type": "integer"
              },
              "frontendPortRangeStart": {
                "description": "FrontendPortRangeStart: The first port number in the range of external ports that will be used to provide Inbound Nat to\nNICs associated with a load balancer. Acceptable values range between 1 and 65534.",
                "type": "integer"
              },
              "idleTimeoutInMinutes": {
                "description": "IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The\ndefault value is 4 minutes. This element is only used when the protocol is set to TCP.",
                "type": "integer"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name\ncan be used to access the resource.",
                "type": "string"
              },
              "protocol": {
                "description": "Protocol: The reference to the transport protocol used by the inbound NAT pool.",
                "enum": [
                  "All",
                  "Tcp",
                  "Udp"
                ],
                "type": "string"
              }
            },
            "required": [
              "backendPort",
              "frontendPortRangeEnd",
              "frontendPortRangeStart",
              "protocol"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "inboundNatRules": {
          "description": "InboundNatRules: Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load\nbalancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine\nscale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to\nreference individual inbound NAT rules.",
          "items": {
            "description": "Inbound NAT rule of the load balancer.",
            "properties": {
              "backendAddressPool": {
                "description": "BackendAddressPool: A reference to backendAddressPool resource.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "backendPort": {
                "description": "BackendPort: The port used for the internal endpoint. Acceptable values range from 1 to 65535.",
                "type": "integer"
              },
              "enableFloatingIP": {
                "description": "EnableFloatingIP: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL\nAlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server.\nThis setting can't be changed after you create the endpoint.",
                "type": "boolean"
              },
              "enableTcpReset": {
                "description": "EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This\nelement is only used when the protocol is set to TCP.",
                "type": "boolean"
              },
              "frontendIPConfiguration": {
                "description": "FrontendIPConfiguration: A reference to frontend IP addresses.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "frontendPort": {
                "description": "FrontendPort: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer.\nAcceptable values range from 1 to 65534.",
                "type": "integer"
              },
              "frontendPortRangeEnd": {
                "description": "FrontendPortRangeEnd: The port range end for the external endpoint. This property is used together with\nBackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each\nbackend address from BackendAddressPool. Acceptable values range from 1 to 65534.",
                "type": "integer"
              },
              "frontendPortRangeStart": {
                "description": "FrontendPortRangeStart: The port range start for the external endpoint. This property is used together with\nBackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend\naddress from BackendAddressPool. Acceptable values range from 1 to 65534.",
                "type": "integer"
              },
              "idleTimeoutInMinutes": {
                "description": "IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The\ndefault value is 4 minutes. This element is only used when the protocol is set to TCP.",
                "type": "integer"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name\ncan be used to access the resource.",
                "type": "string"
              },
              "protocol": {
                "description": "Protocol: The reference to the transport protocol used by the load balancing rule.",
                "enum": [
                  "All",
                  "Tcp",
                  "Udp"
                ],
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "loadBalancingRules": {
          "description": "LoadBalancingRules: Object collection representing the load balancing rules Gets the provisioning.",
          "items": {
            "description": "A load balancing rule for a load balancer.",
            "properties": {
              "backendAddressPool": {
                "description": "BackendAddressPool: A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend\nIPs.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "backendAddressPools": {
                "description": "BackendAddressPools: An array of references to pool of DIPs.",
                "items": {
                  "description": "Reference to another subresource.",
                  "properties": {
                    "reference": {
                      "description": "Reference: Resource ID.",
                      "properties": {
                        "armId": {
                          "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                          "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                          "type": "string"
                        },
                        "group": {
                          "description": "Group is the Kubernetes group of the resource.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the Kubernetes kind of the resource.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the Kubernetes name of the resource.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "backendPort": {
                "description": "BackendPort: The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note\nthat value 0 enables \"Any Port\".",
                "type": "integer"
              },
              "disableOutboundSnat": {
                "description": "DisableOutboundSnat: Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the\nfrontend of the load balancing rule.",
                "type": "boolean"
              },
              "enableFloatingIP": {
                "description": "EnableFloatingIP: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL\nAlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server.\nThis setting can't be changed after you create the endpoint.",
                "type": "boolean"
              },
              "enableTcpReset": {
                "description": "EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This\nelement is only used when the protocol is set to TCP.",
                "type": "boolean"
              },
              "frontendIPConfiguration": {
                "description": "FrontendIPConfiguration: A reference to frontend IP addresses.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "frontendPort": {
                "description": "FrontendPort: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer.\nAcceptable values are between 0 and 65534. Note that value 0 enables \"Any Port\".",
                "type": "integer"
              },
              "idleTimeoutInMinutes": {
                "description": "IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The\ndefault value is 4 minutes. This element is only used when the protocol is set to TCP.",
                "type": "integer"
              },
              "loadDistribution": {
                "description": "LoadDistribution: The load distribution policy for this rule.",
                "enum": [
                  "Default",
                  "SourceIP",
                  "SourceIPProtocol"
                ],
                "type": "string"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within the set of load balancing rules used by the load balancer. This\nname can be used to access the resource.",
                "type": "string"
              },
              "probe": {
                "description": "Probe: The reference to the load balancer probe used by the load balancing rule.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "protocol": {
                "description": "Protocol: The reference to the transport protocol used by the load balancing rule.",
                "enum": [
                  "All",
                  "Tcp",
                  "Udp"
                ],
                "type": "string"
              }
            },
            "required": [
              "frontendPort",
              "protocol"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "location": {
          "description": "Location: Resource location.",
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "outboundRules": {
          "description": "OutboundRules: The outbound rules.",
          "items": {
            "description": "Outbound rule of the load balancer.",
            "properties": {
              "allocatedOutboundPorts": {
                "description": "AllocatedOutboundPorts: The number of outbound ports to be used for NAT.",
                "type": "integer"
              },
              "backendAddressPool": {
                "description": "BackendAddressPool: A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend\nIPs.",
                "properties": {
                  "reference": {
                    "description": "Reference: Resource ID.",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "enableTcpReset": {
                "description": "EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This\nelement is only used when the protocol is set to TCP.",
                "type": "boolean"
              },
              "frontendIPConfigurations": {
                "description": "FrontendIPConfigurations: The Frontend IP addresses of the load balancer.",
                "items": {
                  "description": "Reference to another subresource.",
                  "properties": {
                    "reference": {
                      "description": "Reference: Resource ID.",
                      "properties": {
                        "armId": {
                          "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                          "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                          "type": "string"
                        },
                        "group": {
                          "description": "Group is the Kubernetes group of the resource.",
                          "type": "string"
                        },
                        "kind": {
                          "description": "Kind is the Kubernetes kind of the resource.",
                          "type": "string"
                        },
                        "name": {
                          "description": "Name is the Kubernetes name of the resource.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "idleTimeoutInMinutes": {
                "description": "IdleTimeoutInMinutes: The timeout for the TCP idle connection.",
                "type": "integer"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can\nbe used to access the resource.",
                "type": "string"
              },
              "protocol": {
                "description": "Protocol: The protocol for the outbound rule in load balancer.",
                "enum": [
                  "All",
                  "Tcp",
                  "Udp"
                ],
                "type": "string"
              }
            },
            "required": [
              "backendAddressPool",
              "frontendIPConfigurations",
              "protocol"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "probes": {
          "description": "Probes: Collection of probe objects used in the load balancer.",
          "items": {
            "description": "A load balancer probe.",
            "properties": {
              "intervalInSeconds": {
                "description": "IntervalInSeconds: The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the\ninterval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking\nthe instance out of rotation. The default value is 15, the minimum value is 5.",
                "type": "integer"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within the set of probes used by the load balancer. This name can be used\nto access the resource.",
                "type": "string"
              },
              "noHealthyBackendsBehavior": {
                "description": "NoHealthyBackendsBehavior: Determines how new connections are handled by the load balancer when all backend instances\nare probed down.",
                "enum": [
                  "AllProbedDown",
                  "AllProbedUp"
                ],
                "type": "string"
              },
              "numberOfProbes": {
                "description": "NumberOfProbes: The number of probes where if no response, will result in stopping further traffic from being delivered\nto the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used\nin Azure.",
                "type": "integer"
              },
              "port": {
                "description": "Port: The port for communicating the probe. Possible values range from 1 to 65535, inclusive.",
                "type": "integer"
              },
              "probeThreshold": {
                "description": "ProbeThreshold: The number of consecutive successful or failed probes in order to allow or deny traffic from being\ndelivered to this endpoint. After failing the number of consecutive probes equal to this value, the endpoint will be\ntaken out of rotation and require the same number of successful consecutive probes to be placed back in rotation.",
                "type": "integer"
              },
              "protocol": {
                "description": "Protocol: The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be\nsuccessful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be\nsuccessful.",
                "enum": [
                  "Http",
                  "Https",
                  "Tcp"
                ],
                "type": "string"
              },
              "requestPath": {
                "description": "RequestPath: The URI used for requesting health status from the VM. Path is required if a protocol is set to http.\nOtherwise, it is not allowed. There is no default value.",
                "type": "string"
              }
            },
            "required": [
              "port",
              "protocol"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "sku": {
          "description": "Sku: The load balancer SKU.",
          "properties": {
            "name": {
              "description": "Name: Name of a load balancer SKU.",
              "enum": [
                "Basic",
                "Gateway",
                "Standard"
              ],
              "type": "string"
            },
            "tier": {
              "description": "Tier: Tier of a load balancer SKU.",
              "enum": [
                "Global",
                "Regional"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "LoadBalancer resource.",
      "properties": {
        "backendAddressPools": {
          "description": "BackendAddressPools: Collection of backend address pools used by a load balancer.",
          "items": {
            "description": "Pool of backend IP addresses.",
            "properties": {
              "backendIPConfigurations": {
                "description": "BackendIPConfigurations: An array of references to IP addresses defined in network interfaces.",
                "items": {
                  "description": "IPConfiguration in a network interface.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "drainPeriodInSeconds": {
                "description": "DrainPeriodInSeconds: Amount of seconds Load Balancer waits for before sending RESET to client and backend address.",
                "type": "integer"
              },
              "etag": {
                "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
                "type": "string"
              },
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              },
              "inboundNatRules": {
                "description": "InboundNatRules: An array of references to inbound NAT rules that use this backend address pool.",
                "items": {
                  "description": "Reference to another subresource.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "loadBalancerBackendAddresses": {
                "description": "LoadBalancerBackendAddresses: An array of backend addresses.",
                "items": {
                  "description": "Load balancer backend addresses.",
                  "properties": {
                    "adminState": {
                      "description": "AdminState: A list of administrative states which once set can override health probe so that Load Balancer will always\nforward new connections to backend, or deny new connections and reset existing connections.",
                      "type": "string"
                    },
                    "inboundNatRulesPortMapping": {
                      "description": "InboundNatRulesPortMapping: Collection of inbound NAT rule port mappings.",
                      "items": {
                        "description": "Individual port mappings for inbound NAT rule created for backend pool.",
                        "properties": {
                          "backendPort": {
                            "description": "BackendPort: Backend port.",
                            "type": "integer"
                          },
                          "frontendPort": {
                            "description": "FrontendPort: Frontend port.",
                            "type": "integer"
                          },
                          "inboundNatRuleName": {
                            "description": "InboundNatRuleName: Name of inbound NAT rule.",
                            "type": "string"
                          }
                        },
                        "type": "object",
                        "additionalProperties": false
                      },
                      "type": "array"
                    },
                    "ipAddress": {
                      "description": "IpAddress: IP Address belonging to the referenced virtual network.",
                      "type": "string"
                    },
                    "loadBalancerFrontendIPConfiguration": {
                      "description": "LoadBalancerFrontendIPConfiguration: Reference to the frontend ip address configuration defined in regional loadbalancer.",
                      "properties": {
                        "id": {
                          "description": "Id: Resource ID.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "name": {
                      "description": "Name: Name of the backend address.",
                      "type": "string"
                    },
                    "networkInterfaceIPConfiguration": {
                      "description": "NetworkInterfaceIPConfiguration: Reference to IP address defined in network interfaces.",
                      "properties": {
                        "id": {
                          "description": "Id: Resource ID.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "subnet": {
                      "description": "Subnet: Reference to an existing subnet.",
                      "properties": {
                        "id": {
                          "description": "Id: Resource ID.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "virtualNetwork": {
                      "description": "VirtualNetwork: Reference to an existing virtual network.",
                      "properties": {
                        "id": {
                          "description": "Id: Resource ID.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "loadBalancingRules": {
                "description": "LoadBalancingRules: An array of references to load balancing rules that use this backend address pool.",
                "items": {
                  "description": "Reference to another subresource.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "location": {
                "description": "Location: The location of the backend address pool.",
                "type": "string"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within the set of backend address pools used by the load balancer. This\nname can be used to access the resource.",
                "type": "string"
              },
              "outboundRule": {
                "description": "OutboundRule: A reference to an outbound rule that uses this backend address pool.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "outboundRules": {
                "description": "OutboundRules: An array of references to outbound rules that use this backend address pool.",
                "items": {
                  "description": "Reference to another subresource.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "provisioningState": {
                "description": "ProvisioningState: The provisioning state of the backend address pool resource.",
                "type": "string"
              },
              "syncMode": {
                "description": "SyncMode: Backend address synchronous mode for the backend pool",
                "type": "string"
              },
              "tunnelInterfaces": {
                "description": "TunnelInterfaces: An array of gateway load balancer tunnel interfaces.",
                "items": {
                  "description": "Gateway load balancer tunnel interface of a load balancer backend address pool.",
                  "properties": {
                    "identifier": {
                      "description": "Identifier: Identifier of gateway load balancer tunnel interface.",
                      "type": "integer"
                    },
                    "port": {
                      "description": "Port: Port of gateway load balancer tunnel interface.",
                      "type": "integer"
                    },
                    "protocol": {
                      "description": "Protocol: Protocol of gateway load balancer tunnel interface.",
                      "type": "string"
                    },
                    "type": {
                      "description": "Type: Traffic type of gateway load balancer tunnel interface.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "type": {
                "description": "Type: Type of the resource.",
                "type": "string"
              },
              "virtualNetwork": {
                "description": "VirtualNetwork: A reference to a virtual network.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "etag": {
          "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
          "type": "string"
        },
        "extendedLocation": {
          "description": "ExtendedLocation: The extended location of the load balancer.",
          "properties": {
            "name": {
              "description": "Name: The name of the extended location.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of the extended location.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "frontendIPConfigurations": {
          "description": "FrontendIPConfigurations: Object representing the frontend IPs to be used for the load balancer.",
          "items": {
            "description": "Frontend IP address of the load balancer.",
            "properties": {
              "etag": {
                "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
                "type": "string"
              },
              "gatewayLoadBalancer": {
                "description": "GatewayLoadBalancer: The reference to gateway load balancer frontend IP.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              },
              "inboundNatPools": {
                "description": "InboundNatPools: An array of references to inbound pools that use this frontend IP.",
                "items": {
                  "description": "Reference to another subresource.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "inboundNatRules": {
                "description": "InboundNatRules: An array of references to inbound rules that use this frontend IP.",
                "items": {
                  "description": "Reference to another subresource.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "loadBalancingRules": {
                "description": "LoadBalancingRules: An array of references to load balancing rules that use this frontend IP.",
                "items": {
                  "description": "Reference to another subresource.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within the set of frontend IP configurations used by the load balancer.\nThis name can be used to access the resource.",
                "type": "string"
              },
              "outboundRules": {
                "description": "OutboundRules: An array of references to outbound rules that use this frontend IP.",
                "items": {
                  "description": "Reference to another subresource.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "privateIPAddress": {
                "description": "PrivateIPAddress: The private IP address of the IP configuration.",
                "type": "string"
              },
              "privateIPAddressVersion": {
                "description": "PrivateIPAddressVersion: Whether the specific ipconfiguration is IPv4 or IPv6. Default is taken as IPv4.",
                "type": "string"
              },
              "privateIPAllocationMethod": {
                "description": "PrivateIPAllocationMethod: The Private IP allocation method.",
                "type": "string"
              },
              "provisioningState": {
                "description": "ProvisioningState: The provisioning state of the frontend IP configuration resource.",
                "type": "string"
              },
              "publicIPAddress": {
                "description": "PublicIPAddress: The reference to the Public IP resource.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "publicIPPrefix": {
                "description": "PublicIPPrefix: The reference to the Public IP Prefix resource.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "subnet": {
                "description": "Subnet: The reference to the subnet resource.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": {
                "description": "Type: Type of the resource.",
                "type": "string"
              },
              "zones": {
                "description": "Zones: A list of availability zones denoting the IP allocated for the resource needs to come from.",
                "items": {
                  "type": "string"
                },
                "type": "array"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "id": {
          "description": "Id: Resource ID.",
          "type": "string"
        },
        "inboundNatPools": {
          "description": "InboundNatPools: Defines an external port range for inbound NAT to a single backend port on NICs associated with a load\nbalancer. Inbound NAT rules are created automatically for each NIC associated with the Load Balancer using an external\nport from this range. Defining an Inbound NAT pool on your Load Balancer is mutually exclusive with defining inbound NAT\nrules. Inbound NAT pools are referenced from virtual machine scale sets. NICs that are associated with individual\nvirtual machines cannot reference an inbound NAT pool. They have to reference individual inbound NAT rules.",
          "items": {
            "description": "Inbound NAT pool of the load balancer.",
            "properties": {
              "backendPort": {
                "description": "BackendPort: The port used for internal connections on the endpoint. Acceptable values are between 1 and 65535.",
                "type": "integer"
              },
              "enableFloatingIP": {
                "description": "EnableFloatingIP: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL\nAlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server.\nThis setting can't be changed after you create the endpoint.",
                "type": "boolean"
              },
              "enableTcpReset": {
                "description": "EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This\nelement is only used when the protocol is set to TCP.",
                "type": "boolean"
              },
              "etag": {
                "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
                "type": "string"
              },
              "frontendIPConfiguration": {
                "description": "FrontendIPConfiguration: A reference to frontend IP addresses.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "frontendPortRangeEnd": {
                "description": "FrontendPortRangeEnd: The last port number in the range of external ports that will be used to provide Inbound Nat to\nNICs associated with a load balancer. Acceptable values range between 1 and 65535.",
                "type": "integer"
              },
              "frontendPortRangeStart": {
                "description": "FrontendPortRangeStart: The first port number in the range of external ports that will be used to provide Inbound Nat to\nNICs associated with a load balancer. Acceptable values range between 1 and 65534.",
                "type": "integer"
              },
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              },
              "idleTimeoutInMinutes": {
                "description": "IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The\ndefault value is 4 minutes. This element is only used when the protocol is set to TCP.",
                "type": "integer"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within the set of inbound NAT pools used by the load balancer. This name\ncan be used to access the resource.",
                "type": "string"
              },
              "protocol": {
                "description": "Protocol: The reference to the transport protocol used by the inbound NAT pool.",
                "type": "string"
              },
              "provisioningState": {
                "description": "ProvisioningState: The provisioning state of the inbound NAT pool resource.",
                "type": "string"
              },
              "type": {
                "description": "Type: Type of the resource.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "inboundNatRules": {
          "description": "InboundNatRules: Collection of inbound NAT Rules used by a load balancer. Defining inbound NAT rules on your load\nbalancer is mutually exclusive with defining an inbound NAT pool. Inbound NAT pools are referenced from virtual machine\nscale sets. NICs that are associated with individual virtual machines cannot reference an Inbound NAT pool. They have to\nreference individual inbound NAT rules.",
          "items": {
            "description": "Inbound NAT rule of the load balancer.",
            "properties": {
              "backendAddressPool": {
                "description": "BackendAddressPool: A reference to backendAddressPool resource.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "backendIPConfiguration": {
                "description": "BackendIPConfiguration: A reference to a private IP address defined on a network interface of a VM. Traffic sent to the\nfrontend port of each of the frontend IP configurations is forwarded to the backend IP.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "backendPort": {
                "description": "BackendPort: The port used for the internal endpoint. Acceptable values range from 1 to 65535.",
                "type": "integer"
              },
              "enableFloatingIP": {
                "description": "EnableFloatingIP: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL\nAlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server.\nThis setting can't be changed after you create the endpoint.",
                "type": "boolean"
              },
              "enableTcpReset": {
                "description": "EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This\nelement is only used when the protocol is set to TCP.",
                "type": "boolean"
              },
              "etag": {
                "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
                "type": "string"
              },
              "frontendIPConfiguration": {
                "description": "FrontendIPConfiguration: A reference to frontend IP addresses.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "frontendPort": {
                "description": "FrontendPort: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer.\nAcceptable values range from 1 to 65534.",
                "type": "integer"
              },
              "frontendPortRangeEnd": {
                "description": "FrontendPortRangeEnd: The port range end for the external endpoint. This property is used together with\nBackendAddressPool and FrontendPortRangeStart. Individual inbound NAT rule port mappings will be created for each\nbackend address from BackendAddressPool. Acceptable values range from 1 to 65534.",
                "type": "integer"
              },
              "frontendPortRangeStart": {
                "description": "FrontendPortRangeStart: The port range start for the external endpoint. This property is used together with\nBackendAddressPool and FrontendPortRangeEnd. Individual inbound NAT rule port mappings will be created for each backend\naddress from BackendAddressPool. Acceptable values range from 1 to 65534.",
                "type": "integer"
              },
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              },
              "idleTimeoutInMinutes": {
                "description": "IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The\ndefault value is 4 minutes. This element is only used when the protocol is set to TCP.",
                "type": "integer"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within the set of inbound NAT rules used by the load balancer. This name\ncan be used to access the resource.",
                "type": "string"
              },
              "protocol": {
                "description": "Protocol: The reference to the transport protocol used by the load balancing rule.",
                "type": "string"
              },
              "provisioningState": {
                "description": "ProvisioningState: The provisioning state of the inbound NAT rule resource.",
                "type": "string"
              },
              "type": {
                "description": "Type: Type of the resource.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "loadBalancingRules": {
          "description": "LoadBalancingRules: Object collection representing the load balancing rules Gets the provisioning.",
          "items": {
            "description": "A load balancing rule for a load balancer.",
            "properties": {
              "backendAddressPool": {
                "description": "BackendAddressPool: A reference to a pool of DIPs. Inbound traffic is randomly load balanced across IPs in the backend\nIPs.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "backendAddressPools": {
                "description": "BackendAddressPools: An array of references to pool of DIPs.",
                "items": {
                  "description": "Reference to another subresource.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "backendPort": {
                "description": "BackendPort: The port used for internal connections on the endpoint. Acceptable values are between 0 and 65535. Note\nthat value 0 enables \"Any Port\".",
                "type": "integer"
              },
              "disableOutboundSnat": {
                "description": "DisableOutboundSnat: Configures SNAT for the VMs in the backend pool to use the publicIP address specified in the\nfrontend of the load balancing rule.",
                "type": "boolean"
              },
              "enableFloatingIP": {
                "description": "EnableFloatingIP: Configures a virtual machine's endpoint for the floating IP capability required to configure a SQL\nAlwaysOn Availability Group. This setting is required when using the SQL AlwaysOn Availability Groups in SQL server.\nThis setting can't be changed after you create the endpoint.",
                "type": "boolean"
              },
              "enableTcpReset": {
                "description": "EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This\nelement is only used when the protocol is set to TCP.",
                "type": "boolean"
              },
              "etag": {
                "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
                "type": "string"
              },
              "frontendIPConfiguration": {
                "description": "FrontendIPConfiguration: A reference to frontend IP addresses.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "frontendPort": {
                "description": "FrontendPort: The port for the external endpoint. Port numbers for each rule must be unique within the Load Balancer.\nAcceptable values are between 0 and 65534. Note that value 0 enables \"Any Port\".",
                "type": "integer"
              },
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              },
              "idleTimeoutInMinutes": {
                "description": "IdleTimeoutInMinutes: The timeout for the TCP idle connection. The value can be set between 4 and 30 minutes. The\ndefault value is 4 minutes. This element is only used when the protocol is set to TCP.",
                "type": "integer"
              },
              "loadDistribution": {
                "description": "LoadDistribution: The load distribution policy for this rule.",
                "type": "string"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within the set of load balancing rules used by the load balancer. This\nname can be used to access the resource.",
                "type": "string"
              },
              "probe": {
                "description": "Probe: The reference to the load balancer probe used by the load balancing rule.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "protocol": {
                "description": "Protocol: The reference to the transport protocol used by the load balancing rule.",
                "type": "string"
              },
              "provisioningState": {
                "description": "ProvisioningState: The provisioning state of the load balancing rule resource.",
                "type": "string"
              },
              "type": {
                "description": "Type: Type of the resource.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "location": {
          "description": "Location: Resource location.",
          "type": "string"
        },
        "name": {
          "description": "Name: Resource name.",
          "type": "string"
        },
        "outboundRules": {
          "description": "OutboundRules: The outbound rules.",
          "items": {
            "description": "Outbound rule of the load balancer.",
            "properties": {
              "allocatedOutboundPorts": {
                "description": "AllocatedOutboundPorts: The number of outbound ports to be used for NAT.",
                "type": "integer"
              },
              "backendAddressPool": {
                "description": "BackendAddressPool: A reference to a pool of DIPs. Outbound traffic is randomly load balanced across IPs in the backend\nIPs.",
                "properties": {
                  "id": {
                    "description": "Id: Resource ID.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "enableTcpReset": {
                "description": "EnableTcpReset: Receive bidirectional TCP Reset on TCP flow idle timeout or unexpected connection termination. This\nelement is only used when the protocol is set to TCP.",
                "type": "boolean"
              },
              "etag": {
                "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
                "type": "string"
              },
              "frontendIPConfigurations": {
                "description": "FrontendIPConfigurations: The Frontend IP addresses of the load balancer.",
                "items": {
                  "description": "Reference to another subresource.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              },
              "idleTimeoutInMinutes": {
                "description": "IdleTimeoutInMinutes: The timeout for the TCP idle connection.",
                "type": "integer"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within the set of outbound rules used by the load balancer. This name can\nbe used to access the resource.",
                "type": "string"
              },
              "protocol": {
                "description": "Protocol: The protocol for the outbound rule in load balancer.",
                "type": "string"
              },
              "provisioningState": {
                "description": "ProvisioningState: The provisioning state of the outbound rule resource.",
                "type": "string"
              },
              "type": {
                "description": "Type: Type of the resource.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "probes": {
          "description": "Probes: Collection of probe objects used in the load balancer.",
          "items": {
            "description": "A load balancer probe.",
            "properties": {
              "etag": {
                "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
                "type": "string"
              },
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              },
              "intervalInSeconds": {
                "description": "IntervalInSeconds: The interval, in seconds, for how frequently to probe the endpoint for health status. Typically, the\ninterval is slightly less than half the allocated timeout period (in seconds) which allows two full probes before taking\nthe instance out of rotation. The default value is 15, the minimum value is 5.",
                "type": "integer"
              },
              "loadBalancingRules": {
                "description": "LoadBalancingRules: The load balancer rules that use this probe.",
                "items": {
                  "description": "Reference to another subresource.",
                  "properties": {
                    "id": {
                      "description": "Id: Resource ID.",
                      "type": "string"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "type": "array"
              },
              "name": {
                "description": "Name: The name of the resource that is unique within the set of probes used by the load balancer. This name can be used\nto access the resource.",
                "type": "string"
              },
              "noHealthyBackendsBehavior": {
                "description": "NoHealthyBackendsBehavior: Determines how new connections are handled by the load balancer when all backend instances\nare probed down.",
                "type": "string"
              },
              "numberOfProbes": {
                "description": "NumberOfProbes: The number of probes where if no response, will result in stopping further traffic from being delivered\nto the endpoint. This values allows endpoints to be taken out of rotation faster or slower than the typical times used\nin Azure.",
                "type": "integer"
              },
              "port": {
                "description": "Port: The port for communicating the probe. Possible values range from 1 to 65535, inclusive.",
                "type": "integer"
              },
              "probeThreshold": {
                "description": "ProbeThreshold: The number of consecutive successful or failed probes in order to allow or deny traffic from being\ndelivered to this endpoint. After failing the number of consecutive probes equal to this value, the endpoint will be\ntaken out of rotation and require the same number of successful consecutive probes to be placed back in rotation.",
                "type": "integer"
              },
              "protocol": {
                "description": "Protocol: The protocol of the end point. If 'Tcp' is specified, a received ACK is required for the probe to be\nsuccessful. If 'Http' or 'Https' is specified, a 200 OK response from the specifies URI is required for the probe to be\nsuccessful.",
                "type": "string"
              },
              "provisioningState": {
                "description": "ProvisioningState: The provisioning state of the probe resource.",
                "type": "string"
              },
              "requestPath": {
                "description": "RequestPath: The URI used for requesting health status from the VM. Path is required if a protocol is set to http.\nOtherwise, it is not allowed. There is no default value.",
                "type": "string"
              },
              "type": {
                "description": "Type: Type of the resource.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "provisioningState": {
          "description": "ProvisioningState: The provisioning state of the load balancer resource.",
          "type": "string"
        },
        "resourceGuid": {
          "description": "ResourceGuid: The resource GUID property of the load balancer resource.",
          "type": "string"
        },
        "sku": {
          "description": "Sku: The load balancer SKU.",
          "properties": {
            "name": {
              "description": "Name: Name of a load balancer SKU.",
              "type": "string"
            },
            "tier": {
              "description": "Tier: Tier of a load balancer SKU.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "type": {
          "description": "Type: Resource type.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
