{
  "description": "Generator information:\n- Generated from: /network/resource-manager/Microsoft.Network/stable/2020-11-01/virtualNetwork.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}/virtualNetworkPeerings/{virtualNetworkPeeringName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "allowForwardedTraffic": {
          "description": "AllowForwardedTraffic: Whether the forwarded traffic from the VMs in the local virtual network will be\nallowed/disallowed in remote virtual network.",
          "type": "boolean"
        },
        "allowGatewayTransit": {
          "description": "AllowGatewayTransit: If gateway links can be used in remote virtual networking to link to this virtual network.",
          "type": "boolean"
        },
        "allowVirtualNetworkAccess": {
          "description": "AllowVirtualNetworkAccess: Whether the VMs in the local virtual network space would be able to access the VMs in remote\nvirtual network space.",
          "type": "boolean"
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "doNotVerifyRemoteGateways": {
          "description": "DoNotVerifyRemoteGateways: If we need to verify the provisioning state of the remote gateway.",
          "type": "boolean"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a network.azure.com/VirtualNetwork resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "peeringState": {
          "description": "PeeringState: The status of the virtual network peering.",
          "enum": [
            "Connected",
            "Disconnected",
            "Initiated"
          ],
          "type": "string"
        },
        "remoteAddressSpace": {
          "description": "RemoteAddressSpace: The reference to the remote virtual network address space.",
          "properties": {
            "addressPrefixes": {
              "description": "AddressPrefixes: A list of address blocks reserved for this virtual network in CIDR notation.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "remoteBgpCommunities": {
          "description": "RemoteBgpCommunities: The reference to the remote virtual network's Bgp Communities.",
          "properties": {
            "virtualNetworkCommunity": {
              "description": "VirtualNetworkCommunity: The BGP community associated with the virtual network.",
              "type": "string"
            }
          },
          "required": [
            "virtualNetworkCommunity"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "remoteVirtualNetwork": {
          "description": "RemoteVirtualNetwork: The reference to the remote virtual network. The remote virtual network can be in the same or\ndifferent region (preview). See here to register for the preview and learn more\n(https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).",
          "properties": {
            "reference": {
              "description": "Reference: Resource ID.",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "useRemoteGateways": {
          "description": "UseRemoteGateways: If remote gateways can be used on this virtual network. If the flag is set to true, and\nallowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for\ntransit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a\ngateway.",
          "type": "boolean"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "allowForwardedTraffic": {
          "description": "AllowForwardedTraffic: Whether the forwarded traffic from the VMs in the local virtual network will be\nallowed/disallowed in remote virtual network.",
          "type": "boolean"
        },
        "allowGatewayTransit": {
          "description": "AllowGatewayTransit: If gateway links can be used in remote virtual networking to link to this virtual network.",
          "type": "boolean"
        },
        "allowVirtualNetworkAccess": {
          "description": "AllowVirtualNetworkAccess: Whether the VMs in the local virtual network space would be able to access the VMs in remote\nvirtual network space.",
          "type": "boolean"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "doNotVerifyRemoteGateways": {
          "description": "DoNotVerifyRemoteGateways: If we need to verify the provisioning state of the remote gateway.",
          "type": "boolean"
        },
        "etag": {
          "description": "Etag: A unique read-only string that changes whenever the resource is updated.",
          "type": "string"
        },
        "id": {
          "description": "Id: Resource ID.",
          "type": "string"
        },
        "name": {
          "description": "Name: The name of the resource that is unique within a resource group. This name can be used to access the resource.",
          "type": "string"
        },
        "peeringState": {
          "description": "PeeringState: The status of the virtual network peering.",
          "type": "string"
        },
        "provisioningState": {
          "description": "ProvisioningState: The provisioning state of the virtual network peering resource.",
          "type": "string"
        },
        "remoteAddressSpace": {
          "description": "RemoteAddressSpace: The reference to the remote virtual network address space.",
          "properties": {
            "addressPrefixes": {
              "description": "AddressPrefixes: A list of address blocks reserved for this virtual network in CIDR notation.",
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "remoteBgpCommunities": {
          "description": "RemoteBgpCommunities: The reference to the remote virtual network's Bgp Communities.",
          "properties": {
            "regionalCommunity": {
              "description": "RegionalCommunity: The BGP community associated with the region of the virtual network.",
              "type": "string"
            },
            "virtualNetworkCommunity": {
              "description": "VirtualNetworkCommunity: The BGP community associated with the virtual network.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "remoteVirtualNetwork": {
          "description": "RemoteVirtualNetwork: The reference to the remote virtual network. The remote virtual network can be in the same or\ndifferent region (preview). See here to register for the preview and learn more\n(https://docs.microsoft.com/en-us/azure/virtual-network/virtual-network-create-peering).",
          "properties": {
            "id": {
              "description": "Id: Resource ID.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "resourceGuid": {
          "description": "ResourceGuid: The resourceGuid property of the Virtual Network peering resource.",
          "type": "string"
        },
        "type": {
          "description": "Type: Resource type.",
          "type": "string"
        },
        "useRemoteGateways": {
          "description": "UseRemoteGateways: If remote gateways can be used on this virtual network. If the flag is set to true, and\nallowGatewayTransit on remote peering is also true, virtual network will use gateways of remote virtual network for\ntransit. Only one peering can have this flag set to true. This flag cannot be set if virtual network already has a\ngateway.",
          "type": "boolean"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
