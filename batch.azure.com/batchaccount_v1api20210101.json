{
  "description": "Generator information:\n- Generated from: /batch/resource-manager/Microsoft.Batch/stable/2021-01-01/BatchManagement.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Batch/batchAccounts/{accountName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "autoStorage": {
          "description": "AutoStorage: The properties related to the auto-storage account.",
          "properties": {
            "storageAccountReference": {
              "description": "StorageAccountReference: The resource ID of the storage account to be used for auto-storage account.",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "required": [
            "storageAccountReference"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "maxLength": 24,
          "minLength": 3,
          "pattern": "^[a-z0-9]+$",
          "type": "string"
        },
        "encryption": {
          "description": "Encryption: Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using\na Microsoft managed key. For additional control, a customer-managed key can be used instead.",
          "properties": {
            "keySource": {
              "description": "KeySource: Type of the key source.",
              "enum": [
                "Microsoft.Batch",
                "Microsoft.KeyVault"
              ],
              "type": "string"
            },
            "keyVaultProperties": {
              "description": "KeyVaultProperties: Additional details when using Microsoft.KeyVault",
              "properties": {
                "keyIdentifier": {
                  "description": "KeyIdentifier: Full path to the versioned secret. Example\nhttps://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following\nprerequisites must be met:\nThe Batch Account has a System Assigned identity\nThe account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions\nThe KeyVault has soft-delete and purge protection enabled",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "identity": {
          "description": "Identity: The identity of the Batch account.",
          "properties": {
            "type": {
              "description": "Type: The type of identity used for the Batch account.",
              "enum": [
                "None",
                "SystemAssigned",
                "UserAssigned"
              ],
              "type": "string"
            },
            "userAssignedIdentities": {
              "description": "UserAssignedIdentities: The list of user identities associated with the Batch account. The user identity dictionary key\nreferences will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
              "items": {
                "description": "Information about the user assigned identity for the resource",
                "properties": {
                  "reference": {
                    "description": "ResourceReference represents a resource reference, either to a Kubernetes resource or directly to an Azure resource via ARMID",
                    "properties": {
                      "armId": {
                        "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                        "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                        "type": "string"
                      },
                      "group": {
                        "description": "Group is the Kubernetes group of the resource.",
                        "type": "string"
                      },
                      "kind": {
                        "description": "Kind is the Kubernetes kind of the resource.",
                        "type": "string"
                      },
                      "name": {
                        "description": "Name is the Kubernetes name of the resource.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "required": [
            "type"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "keyVaultReference": {
          "description": "KeyVaultReference: A reference to the Azure key vault associated with the Batch account.",
          "properties": {
            "reference": {
              "description": "Reference: The resource ID of the Azure key vault associated with the Batch account.",
              "properties": {
                "armId": {
                  "description": "ARMID is a string of the form /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}.\nThe /resourcegroups/{resourceGroupName} bit is optional as some resources are scoped at the subscription level\nARMID is mutually exclusive with Group, Kind, Namespace and Name.",
                  "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
                  "type": "string"
                },
                "group": {
                  "description": "Group is the Kubernetes group of the resource.",
                  "type": "string"
                },
                "kind": {
                  "description": "Kind is the Kubernetes kind of the resource.",
                  "type": "string"
                },
                "name": {
                  "description": "Name is the Kubernetes name of the resource.",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            },
            "url": {
              "description": "Url: The URL of the Azure key vault associated with the Batch account.",
              "type": "string"
            }
          },
          "required": [
            "reference",
            "url"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "location": {
          "description": "Location: The region in which to create the account.",
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "poolAllocationMode": {
          "description": "PoolAllocationMode: The pool allocation mode also affects how clients may authenticate to the Batch Service API. If the\nmode is BatchService, clients may authenticate using access keys or Azure Active Directory. If the mode is\nUserSubscription, clients must use Azure Active Directory. The default is BatchService.",
          "enum": [
            "BatchService",
            "UserSubscription"
          ],
          "type": "string"
        },
        "publicNetworkAccess": {
          "description": "PublicNetworkAccess: If not specified, the default value is 'enabled'.",
          "enum": [
            "Disabled",
            "Enabled"
          ],
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: The user-specified tags associated with the account.",
          "type": "object"
        }
      },
      "required": [
        "location",
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "Contains information about an Azure Batch account.",
      "properties": {
        "accountEndpoint": {
          "description": "AccountEndpoint: The account endpoint used to interact with the Batch service.",
          "type": "string"
        },
        "activeJobAndJobScheduleQuota": {
          "type": "integer"
        },
        "autoStorage": {
          "description": "AutoStorage: Contains information about the auto-storage account associated with a Batch account.",
          "properties": {
            "lastKeySync": {
              "description": "LastKeySync: The UTC time at which storage keys were last synchronized with the Batch account.",
              "type": "string"
            },
            "storageAccountId": {
              "description": "StorageAccountId: The resource ID of the storage account to be used for auto-storage account.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "dedicatedCoreQuota": {
          "description": "DedicatedCoreQuota: For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription\nso this value is not returned.",
          "type": "integer"
        },
        "dedicatedCoreQuotaPerVMFamily": {
          "description": "DedicatedCoreQuotaPerVMFamily: A list of the dedicated core quota per Virtual Machine family for the Batch account. For\naccounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription so this value is not\nreturned.",
          "items": {
            "description": "A VM Family and its associated core quota for the Batch account.",
            "properties": {
              "coreQuota": {
                "description": "CoreQuota: The core quota for the VM family for the Batch account.",
                "type": "integer"
              },
              "name": {
                "description": "Name: The Virtual Machine family name.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "dedicatedCoreQuotaPerVMFamilyEnforced": {
          "description": "DedicatedCoreQuotaPerVMFamilyEnforced: Batch is transitioning its core quota system for dedicated cores to be enforced\nper Virtual Machine family. During this transitional phase, the dedicated core quota per Virtual Machine family may not\nyet be enforced. If this flag is false, dedicated core quota is enforced via the old dedicatedCoreQuota property on the\naccount and does not consider Virtual Machine family. If this flag is true, dedicated core quota is enforced via the\ndedicatedCoreQuotaPerVMFamily property on the account, and the old dedicatedCoreQuota does not apply.",
          "type": "boolean"
        },
        "encryption": {
          "description": "Encryption: Configures how customer data is encrypted inside the Batch account. By default, accounts are encrypted using\na Microsoft managed key. For additional control, a customer-managed key can be used instead.",
          "properties": {
            "keySource": {
              "description": "KeySource: Type of the key source.",
              "type": "string"
            },
            "keyVaultProperties": {
              "description": "KeyVaultProperties: Additional details when using Microsoft.KeyVault",
              "properties": {
                "keyIdentifier": {
                  "description": "KeyIdentifier: Full path to the versioned secret. Example\nhttps://mykeyvault.vault.azure.net/keys/testkey/6e34a81fef704045975661e297a4c053. To be usable the following\nprerequisites must be met:\nThe Batch Account has a System Assigned identity\nThe account identity has been granted Key/Get, Key/Unwrap and Key/Wrap permissions\nThe KeyVault has soft-delete and purge protection enabled",
                  "type": "string"
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "id": {
          "description": "Id: The ID of the resource.",
          "type": "string"
        },
        "identity": {
          "description": "Identity: The identity of the Batch account.",
          "properties": {
            "principalId": {
              "description": "PrincipalId: The principal id of the Batch account. This property will only be provided for a system assigned identity.",
              "type": "string"
            },
            "tenantId": {
              "description": "TenantId: The tenant id associated with the Batch account. This property will only be provided for a system assigned\nidentity.",
              "type": "string"
            },
            "type": {
              "description": "Type: The type of identity used for the Batch account.",
              "type": "string"
            },
            "userAssignedIdentities": {
              "additionalProperties": {
                "properties": {
                  "clientId": {
                    "description": "ClientId: The client id of user assigned identity.",
                    "type": "string"
                  },
                  "principalId": {
                    "description": "PrincipalId: The principal id of user assigned identity.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "description": "UserAssignedIdentities: The list of user identities associated with the Batch account. The user identity dictionary key\nreferences will be ARM resource ids in the form:\n'/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}'.",
              "type": "object"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "keyVaultReference": {
          "description": "KeyVaultReference: Identifies the Azure key vault associated with a Batch account.",
          "properties": {
            "id": {
              "description": "Id: The resource ID of the Azure key vault associated with the Batch account.",
              "type": "string"
            },
            "url": {
              "description": "Url: The URL of the Azure key vault associated with the Batch account.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "location": {
          "description": "Location: The location of the resource.",
          "type": "string"
        },
        "lowPriorityCoreQuota": {
          "description": "LowPriorityCoreQuota: For accounts with PoolAllocationMode set to UserSubscription, quota is managed on the subscription\nso this value is not returned.",
          "type": "integer"
        },
        "name": {
          "description": "Name: The name of the resource.",
          "type": "string"
        },
        "poolAllocationMode": {
          "description": "PoolAllocationMode: The allocation mode for creating pools in the Batch account.",
          "type": "string"
        },
        "poolQuota": {
          "type": "integer"
        },
        "privateEndpointConnections": {
          "description": "PrivateEndpointConnections: List of private endpoint connections associated with the Batch account",
          "items": {
            "description": "Contains information about a private link resource.",
            "properties": {
              "id": {
                "description": "Id: The ID of the resource.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "provisioningState": {
          "description": "ProvisioningState: The provisioned state of the resource",
          "type": "string"
        },
        "publicNetworkAccess": {
          "description": "PublicNetworkAccess: If not specified, the default value is 'enabled'.",
          "type": "string"
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: The tags of the resource.",
          "type": "object"
        },
        "type": {
          "description": "Type: The type of the resource.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
