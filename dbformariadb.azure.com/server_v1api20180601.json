{
  "description": "Generator information:\n- Generated from: /mariadb/resource-manager/Microsoft.DBforMariaDB/stable/2018-06-01/mariadb.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.DBforMariaDB/servers/{serverName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "type": "string"
        },
        "location": {
          "description": "Location: The location the resource resides in.",
          "type": "string"
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secrets": {
              "description": "Secrets: configures where to place Azure generated secrets.",
              "properties": {
                "fullyQualifiedDomainName": {
                  "description": "FullyQualifiedDomainName: indicates where the FullyQualifiedDomainName secret should be placed. If omitted, the secret\nwill not be retrieved from Azure.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced.",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret to write to.\nThe secret will be created in the same namespace as the resource.",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                }
              },
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "properties": {
          "description": "Properties: Properties of the server.",
          "properties": {
            "default": {
              "description": "Default: Mutually exclusive with all other properties",
              "properties": {
                "administratorLogin": {
                  "description": "AdministratorLogin: The administrator's login name of a server. Can only be specified when the server is being created\n(and is required for creation).",
                  "type": "string"
                },
                "administratorLoginPassword": {
                  "description": "AdministratorLoginPassword: The password of the administrator login.",
                  "properties": {
                    "key": {
                      "description": "Key is the key in the Kubernetes secret being referenced",
                      "type": "string"
                    },
                    "name": {
                      "description": "Name is the name of the Kubernetes secret being referenced.\nThe secret must be in the same namespace as the resource",
                      "type": "string"
                    }
                  },
                  "required": [
                    "key",
                    "name"
                  ],
                  "type": "object",
                  "additionalProperties": false
                },
                "createMode": {
                  "description": "CreateMode: The mode to create a new server.",
                  "enum": [
                    "Default"
                  ],
                  "type": "string"
                },
                "minimalTlsVersion": {
                  "description": "MinimalTlsVersion: Enforce a minimal Tls version for the server.",
                  "enum": [
                    "TLS1_0",
                    "TLS1_1",
                    "TLS1_2",
                    "TLSEnforcementDisabled"
                  ],
                  "type": "string"
                },
                "publicNetworkAccess": {
                  "description": "PublicNetworkAccess: Whether or not public network access is allowed for this server. Value is optional but if passed\nin, must be 'Enabled' or 'Disabled'",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "type": "string"
                },
                "sslEnforcement": {
                  "description": "SslEnforcement: Enable ssl enforcement or not when connect to server.",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "type": "string"
                },
                "storageProfile": {
                  "description": "StorageProfile: Storage profile of a server.",
                  "properties": {
                    "backupRetentionDays": {
                      "description": "BackupRetentionDays: Backup retention days for the server.",
                      "type": "integer"
                    },
                    "geoRedundantBackup": {
                      "description": "GeoRedundantBackup: Enable Geo-redundant or not for server backup.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "type": "string"
                    },
                    "storageAutogrow": {
                      "description": "StorageAutogrow: Enable Storage Auto Grow.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "type": "string"
                    },
                    "storageMB": {
                      "description": "StorageMB: Max storage allowed for a server.",
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "version": {
                  "description": "Version: Server version.",
                  "enum": [
                    "10.2",
                    "10.3"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "administratorLogin",
                "administratorLoginPassword",
                "createMode"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "geoRestore": {
              "description": "GeoRestore: Mutually exclusive with all other properties",
              "properties": {
                "createMode": {
                  "description": "CreateMode: The mode to create a new server.",
                  "enum": [
                    "GeoRestore"
                  ],
                  "type": "string"
                },
                "minimalTlsVersion": {
                  "description": "MinimalTlsVersion: Enforce a minimal Tls version for the server.",
                  "enum": [
                    "TLS1_0",
                    "TLS1_1",
                    "TLS1_2",
                    "TLSEnforcementDisabled"
                  ],
                  "type": "string"
                },
                "publicNetworkAccess": {
                  "description": "PublicNetworkAccess: Whether or not public network access is allowed for this server. Value is optional but if passed\nin, must be 'Enabled' or 'Disabled'",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "type": "string"
                },
                "sourceServerId": {
                  "description": "SourceServerId: The source server id to restore from.",
                  "type": "string"
                },
                "sslEnforcement": {
                  "description": "SslEnforcement: Enable ssl enforcement or not when connect to server.",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "type": "string"
                },
                "storageProfile": {
                  "description": "StorageProfile: Storage profile of a server.",
                  "properties": {
                    "backupRetentionDays": {
                      "description": "BackupRetentionDays: Backup retention days for the server.",
                      "type": "integer"
                    },
                    "geoRedundantBackup": {
                      "description": "GeoRedundantBackup: Enable Geo-redundant or not for server backup.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "type": "string"
                    },
                    "storageAutogrow": {
                      "description": "StorageAutogrow: Enable Storage Auto Grow.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "type": "string"
                    },
                    "storageMB": {
                      "description": "StorageMB: Max storage allowed for a server.",
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "version": {
                  "description": "Version: Server version.",
                  "enum": [
                    "10.2",
                    "10.3"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "createMode",
                "sourceServerId"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "pointInTimeRestore": {
              "description": "PointInTimeRestore: Mutually exclusive with all other properties",
              "properties": {
                "createMode": {
                  "description": "CreateMode: The mode to create a new server.",
                  "enum": [
                    "PointInTimeRestore"
                  ],
                  "type": "string"
                },
                "minimalTlsVersion": {
                  "description": "MinimalTlsVersion: Enforce a minimal Tls version for the server.",
                  "enum": [
                    "TLS1_0",
                    "TLS1_1",
                    "TLS1_2",
                    "TLSEnforcementDisabled"
                  ],
                  "type": "string"
                },
                "publicNetworkAccess": {
                  "description": "PublicNetworkAccess: Whether or not public network access is allowed for this server. Value is optional but if passed\nin, must be 'Enabled' or 'Disabled'",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "type": "string"
                },
                "restorePointInTime": {
                  "description": "RestorePointInTime: Restore point creation time (ISO8601 format), specifying the time to restore from.",
                  "type": "string"
                },
                "sourceServerId": {
                  "description": "SourceServerId: The source server id to restore from.",
                  "type": "string"
                },
                "sslEnforcement": {
                  "description": "SslEnforcement: Enable ssl enforcement or not when connect to server.",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "type": "string"
                },
                "storageProfile": {
                  "description": "StorageProfile: Storage profile of a server.",
                  "properties": {
                    "backupRetentionDays": {
                      "description": "BackupRetentionDays: Backup retention days for the server.",
                      "type": "integer"
                    },
                    "geoRedundantBackup": {
                      "description": "GeoRedundantBackup: Enable Geo-redundant or not for server backup.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "type": "string"
                    },
                    "storageAutogrow": {
                      "description": "StorageAutogrow: Enable Storage Auto Grow.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "type": "string"
                    },
                    "storageMB": {
                      "description": "StorageMB: Max storage allowed for a server.",
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "version": {
                  "description": "Version: Server version.",
                  "enum": [
                    "10.2",
                    "10.3"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "createMode",
                "restorePointInTime",
                "sourceServerId"
              ],
              "type": "object",
              "additionalProperties": false
            },
            "replica": {
              "description": "Replica: Mutually exclusive with all other properties",
              "properties": {
                "createMode": {
                  "description": "CreateMode: The mode to create a new server.",
                  "enum": [
                    "Replica"
                  ],
                  "type": "string"
                },
                "minimalTlsVersion": {
                  "description": "MinimalTlsVersion: Enforce a minimal Tls version for the server.",
                  "enum": [
                    "TLS1_0",
                    "TLS1_1",
                    "TLS1_2",
                    "TLSEnforcementDisabled"
                  ],
                  "type": "string"
                },
                "publicNetworkAccess": {
                  "description": "PublicNetworkAccess: Whether or not public network access is allowed for this server. Value is optional but if passed\nin, must be 'Enabled' or 'Disabled'",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "type": "string"
                },
                "sourceServerId": {
                  "description": "SourceServerId: The master server id to create replica from.",
                  "type": "string"
                },
                "sslEnforcement": {
                  "description": "SslEnforcement: Enable ssl enforcement or not when connect to server.",
                  "enum": [
                    "Disabled",
                    "Enabled"
                  ],
                  "type": "string"
                },
                "storageProfile": {
                  "description": "StorageProfile: Storage profile of a server.",
                  "properties": {
                    "backupRetentionDays": {
                      "description": "BackupRetentionDays: Backup retention days for the server.",
                      "type": "integer"
                    },
                    "geoRedundantBackup": {
                      "description": "GeoRedundantBackup: Enable Geo-redundant or not for server backup.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "type": "string"
                    },
                    "storageAutogrow": {
                      "description": "StorageAutogrow: Enable Storage Auto Grow.",
                      "enum": [
                        "Disabled",
                        "Enabled"
                      ],
                      "type": "string"
                    },
                    "storageMB": {
                      "description": "StorageMB: Max storage allowed for a server.",
                      "type": "integer"
                    }
                  },
                  "type": "object",
                  "additionalProperties": false
                },
                "version": {
                  "description": "Version: Server version.",
                  "enum": [
                    "10.2",
                    "10.3"
                  ],
                  "type": "string"
                }
              },
              "required": [
                "createMode",
                "sourceServerId"
              ],
              "type": "object",
              "additionalProperties": false
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "sku": {
          "description": "Sku: The SKU (pricing tier) of the server.",
          "properties": {
            "capacity": {
              "description": "Capacity: The scale up/out capacity, representing server's compute units.",
              "minimum": 0,
              "type": "integer"
            },
            "family": {
              "description": "Family: The family of hardware.",
              "type": "string"
            },
            "name": {
              "description": "Name: The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.",
              "type": "string"
            },
            "size": {
              "description": "Size: The size code, to be interpreted by resource as appropriate.",
              "type": "string"
            },
            "tier": {
              "description": "Tier: The tier of the particular SKU, e.g. Basic.",
              "enum": [
                "Basic",
                "GeneralPurpose",
                "MemoryOptimized"
              ],
              "type": "string"
            }
          },
          "required": [
            "name"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Application-specific metadata in the form of key-value pairs.",
          "type": "object"
        },
        "additionalProperties": false
      },
      "required": [
        "location",
        "owner",
        "properties"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "description": "Represents a server.",
      "properties": {
        "administratorLogin": {
          "description": "AdministratorLogin: The administrator's login name of a server. Can only be specified when the server is being created\n(and is required for creation).",
          "type": "string"
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "earliestRestoreDate": {
          "description": "EarliestRestoreDate: Earliest restore point creation time (ISO8601 format)",
          "type": "string"
        },
        "fullyQualifiedDomainName": {
          "description": "FullyQualifiedDomainName: The fully qualified domain name of a server.",
          "type": "string"
        },
        "id": {
          "description": "Id: Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string"
        },
        "location": {
          "description": "Location: The geo-location where the resource lives",
          "type": "string"
        },
        "masterServerId": {
          "description": "MasterServerId: The master server id of a replica server.",
          "type": "string"
        },
        "minimalTlsVersion": {
          "description": "MinimalTlsVersion: Enforce a minimal Tls version for the server.",
          "type": "string"
        },
        "name": {
          "description": "Name: The name of the resource",
          "type": "string"
        },
        "privateEndpointConnections": {
          "description": "PrivateEndpointConnections: List of private endpoint connections on a server",
          "items": {
            "description": "A private endpoint connection under a server",
            "properties": {
              "id": {
                "description": "Id: Resource Id of the private endpoint connection.",
                "type": "string"
              },
              "properties": {
                "description": "Properties: Private endpoint connection properties",
                "properties": {
                  "privateEndpoint": {
                    "description": "PrivateEndpoint: Private endpoint which the connection belongs to.",
                    "properties": {
                      "id": {
                        "description": "Id: Resource id of the private endpoint.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "privateLinkServiceConnectionState": {
                    "description": "PrivateLinkServiceConnectionState: Connection state of the private endpoint connection.",
                    "properties": {
                      "actionsRequired": {
                        "description": "ActionsRequired: The actions required for private link service connection.",
                        "type": "string"
                      },
                      "description": {
                        "description": "Description: The private link service connection description.",
                        "type": "string"
                      },
                      "status": {
                        "description": "Status: The private link service connection status.",
                        "type": "string"
                      }
                    },
                    "type": "object",
                    "additionalProperties": false
                  },
                  "provisioningState": {
                    "description": "ProvisioningState: State of the private endpoint connection.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "additionalProperties": false
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "publicNetworkAccess": {
          "description": "PublicNetworkAccess: Whether or not public network access is allowed for this server. Value is optional but if passed\nin, must be 'Enabled' or 'Disabled'",
          "type": "string"
        },
        "replicaCapacity": {
          "description": "ReplicaCapacity: The maximum number of replicas that a master server can have.",
          "type": "integer"
        },
        "replicationRole": {
          "description": "ReplicationRole: The replication role of the server.",
          "type": "string"
        },
        "sku": {
          "description": "Sku: The SKU (pricing tier) of the server.",
          "properties": {
            "capacity": {
              "description": "Capacity: The scale up/out capacity, representing server's compute units.",
              "type": "integer"
            },
            "family": {
              "description": "Family: The family of hardware.",
              "type": "string"
            },
            "name": {
              "description": "Name: The name of the sku, typically, tier + family + cores, e.g. B_Gen4_1, GP_Gen5_8.",
              "type": "string"
            },
            "size": {
              "description": "Size: The size code, to be interpreted by resource as appropriate.",
              "type": "string"
            },
            "tier": {
              "description": "Tier: The tier of the particular SKU, e.g. Basic.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "sslEnforcement": {
          "description": "SslEnforcement: Enable ssl enforcement or not when connect to server.",
          "type": "string"
        },
        "storageProfile": {
          "description": "StorageProfile: Storage profile of a server.",
          "properties": {
            "backupRetentionDays": {
              "description": "BackupRetentionDays: Backup retention days for the server.",
              "type": "integer"
            },
            "geoRedundantBackup": {
              "description": "GeoRedundantBackup: Enable Geo-redundant or not for server backup.",
              "type": "string"
            },
            "storageAutogrow": {
              "description": "StorageAutogrow: Enable Storage Auto Grow.",
              "type": "string"
            },
            "storageMB": {
              "description": "StorageMB: Max storage allowed for a server.",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "type": {
          "description": "Type: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string"
        },
        "userVisibleState": {
          "description": "UserVisibleState: A state of a server that is visible to user.",
          "type": "string"
        },
        "version": {
          "description": "Version: Server version.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
