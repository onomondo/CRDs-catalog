{
  "description": "Generator information:\n- Generated from: /frontdoor/resource-manager/Microsoft.Network/stable/2022-05-01/webapplicationfirewall.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/FrontDoorWebApplicationFirewallPolicies/{policyName}",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "azureName": {
          "description": "AzureName: The name of the resource in Azure. This is often the same as the name of the resource in Kubernetes but it\ndoesn't have to be.",
          "maxLength": 128,
          "type": "string"
        },
        "customRules": {
          "description": "CustomRules: Describes custom rules inside the policy.",
          "properties": {
            "rules": {
              "description": "Rules: List of rules",
              "items": {
                "description": "Defines contents of a web application rule",
                "properties": {
                  "action": {
                    "description": "Action: Describes what action to be applied when rule matches.",
                    "enum": [
                      "Allow",
                      "AnomalyScoring",
                      "Block",
                      "Log",
                      "Redirect"
                    ],
                    "type": "string"
                  },
                  "enabledState": {
                    "description": "EnabledState: Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.",
                    "enum": [
                      "Disabled",
                      "Enabled"
                    ],
                    "type": "string"
                  },
                  "matchConditions": {
                    "description": "MatchConditions: List of match conditions.",
                    "items": {
                      "description": "Define a match condition.",
                      "properties": {
                        "matchValue": {
                          "description": "MatchValue: List of possible match values.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "matchVariable": {
                          "description": "MatchVariable: Request variable to compare with.",
                          "enum": [
                            "Cookies",
                            "PostArgs",
                            "QueryString",
                            "RemoteAddr",
                            "RequestBody",
                            "RequestHeader",
                            "RequestMethod",
                            "RequestUri",
                            "SocketAddr"
                          ],
                          "type": "string"
                        },
                        "negateCondition": {
                          "description": "NegateCondition: Describes if the result of this condition should be negated.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Operator: Comparison type to use for matching with the variable value.",
                          "enum": [
                            "Any",
                            "BeginsWith",
                            "Contains",
                            "EndsWith",
                            "Equal",
                            "GeoMatch",
                            "GreaterThan",
                            "GreaterThanOrEqual",
                            "IPMatch",
                            "LessThan",
                            "LessThanOrEqual",
                            "RegEx"
                          ],
                          "type": "string"
                        },
                        "selector": {
                          "description": "Selector: Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is\nnull.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "Transforms: List of transforms.",
                          "items": {
                            "description": "Describes what transforms applied before matching.",
                            "enum": [
                              "Lowercase",
                              "RemoveNulls",
                              "Trim",
                              "Uppercase",
                              "UrlDecode",
                              "UrlEncode"
                            ],
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "matchValue",
                        "matchVariable",
                        "operator"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "Name: Describes the name of the rule.",
                    "maxLength": 128,
                    "type": "string"
                  },
                  "priority": {
                    "description": "Priority: Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.",
                    "type": "integer"
                  },
                  "rateLimitDurationInMinutes": {
                    "description": "RateLimitDurationInMinutes: Time window for resetting the rate limit count. Default is 1 minute.",
                    "maximum": 5,
                    "minimum": 0,
                    "type": "integer"
                  },
                  "rateLimitThreshold": {
                    "description": "RateLimitThreshold: Number of allowed requests per client within the time window.",
                    "minimum": 0,
                    "type": "integer"
                  },
                  "ruleType": {
                    "description": "RuleType: Describes type of rule.",
                    "enum": [
                      "MatchRule",
                      "RateLimitRule"
                    ],
                    "type": "string"
                  }
                },
                "required": [
                  "action",
                  "matchConditions",
                  "priority",
                  "ruleType"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "etag": {
          "description": "Etag: Gets a unique read-only string that changes whenever the resource is updated.",
          "type": "string"
        },
        "location": {
          "description": "Location: Resource location.",
          "type": "string"
        },
        "managedRules": {
          "description": "ManagedRules: Describes managed rules inside the policy.",
          "properties": {
            "managedRuleSets": {
              "description": "ManagedRuleSets: List of rule sets.",
              "items": {
                "description": "Defines a managed rule set.",
                "properties": {
                  "exclusions": {
                    "description": "Exclusions: Describes the exclusions that are applied to all rules in the set.",
                    "items": {
                      "description": "Exclude variables from managed rule evaluation.",
                      "properties": {
                        "matchVariable": {
                          "description": "MatchVariable: The variable type to be excluded.",
                          "enum": [
                            "QueryStringArgNames",
                            "RequestBodyJsonArgNames",
                            "RequestBodyPostArgNames",
                            "RequestCookieNames",
                            "RequestHeaderNames"
                          ],
                          "type": "string"
                        },
                        "selector": {
                          "description": "Selector: Selector value for which elements in the collection this exclusion applies to.",
                          "type": "string"
                        },
                        "selectorMatchOperator": {
                          "description": "SelectorMatchOperator: Comparison operator to apply to the selector when specifying which elements in the collection\nthis exclusion applies to.",
                          "enum": [
                            "Contains",
                            "EndsWith",
                            "Equals",
                            "EqualsAny",
                            "StartsWith"
                          ],
                          "type": "string"
                        }
                      },
                      "required": [
                        "matchVariable",
                        "selector",
                        "selectorMatchOperator"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "ruleGroupOverrides": {
                    "description": "RuleGroupOverrides: Defines the rule group overrides to apply to the rule set.",
                    "items": {
                      "description": "Defines a managed rule group override setting.",
                      "properties": {
                        "exclusions": {
                          "description": "Exclusions: Describes the exclusions that are applied to all rules in the group.",
                          "items": {
                            "description": "Exclude variables from managed rule evaluation.",
                            "properties": {
                              "matchVariable": {
                                "description": "MatchVariable: The variable type to be excluded.",
                                "enum": [
                                  "QueryStringArgNames",
                                  "RequestBodyJsonArgNames",
                                  "RequestBodyPostArgNames",
                                  "RequestCookieNames",
                                  "RequestHeaderNames"
                                ],
                                "type": "string"
                              },
                              "selector": {
                                "description": "Selector: Selector value for which elements in the collection this exclusion applies to.",
                                "type": "string"
                              },
                              "selectorMatchOperator": {
                                "description": "SelectorMatchOperator: Comparison operator to apply to the selector when specifying which elements in the collection\nthis exclusion applies to.",
                                "enum": [
                                  "Contains",
                                  "EndsWith",
                                  "Equals",
                                  "EqualsAny",
                                  "StartsWith"
                                ],
                                "type": "string"
                              }
                            },
                            "required": [
                              "matchVariable",
                              "selector",
                              "selectorMatchOperator"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "ruleGroupName": {
                          "description": "RuleGroupName: Describes the managed rule group to override.",
                          "type": "string"
                        },
                        "rules": {
                          "description": "Rules: List of rules that will be disabled. If none specified, all rules in the group will be disabled.",
                          "items": {
                            "description": "Defines a managed rule group override setting.",
                            "properties": {
                              "action": {
                                "description": "Action: Describes the override action to be applied when rule matches.",
                                "enum": [
                                  "Allow",
                                  "AnomalyScoring",
                                  "Block",
                                  "Log",
                                  "Redirect"
                                ],
                                "type": "string"
                              },
                              "enabledState": {
                                "description": "EnabledState: Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.",
                                "enum": [
                                  "Disabled",
                                  "Enabled"
                                ],
                                "type": "string"
                              },
                              "exclusions": {
                                "description": "Exclusions: Describes the exclusions that are applied to this specific rule.",
                                "items": {
                                  "description": "Exclude variables from managed rule evaluation.",
                                  "properties": {
                                    "matchVariable": {
                                      "description": "MatchVariable: The variable type to be excluded.",
                                      "enum": [
                                        "QueryStringArgNames",
                                        "RequestBodyJsonArgNames",
                                        "RequestBodyPostArgNames",
                                        "RequestCookieNames",
                                        "RequestHeaderNames"
                                      ],
                                      "type": "string"
                                    },
                                    "selector": {
                                      "description": "Selector: Selector value for which elements in the collection this exclusion applies to.",
                                      "type": "string"
                                    },
                                    "selectorMatchOperator": {
                                      "description": "SelectorMatchOperator: Comparison operator to apply to the selector when specifying which elements in the collection\nthis exclusion applies to.",
                                      "enum": [
                                        "Contains",
                                        "EndsWith",
                                        "Equals",
                                        "EqualsAny",
                                        "StartsWith"
                                      ],
                                      "type": "string"
                                    }
                                  },
                                  "required": [
                                    "matchVariable",
                                    "selector",
                                    "selectorMatchOperator"
                                  ],
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "ruleId": {
                                "description": "RuleId: Identifier for the managed rule.",
                                "type": "string"
                              }
                            },
                            "required": [
                              "ruleId"
                            ],
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "required": [
                        "ruleGroupName"
                      ],
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "ruleSetAction": {
                    "description": "RuleSetAction: Defines the rule set action.",
                    "enum": [
                      "Block",
                      "Log",
                      "Redirect"
                    ],
                    "type": "string"
                  },
                  "ruleSetType": {
                    "description": "RuleSetType: Defines the rule set type to use.",
                    "type": "string"
                  },
                  "ruleSetVersion": {
                    "description": "RuleSetVersion: Defines the version of the rule set to use.",
                    "type": "string"
                  }
                },
                "required": [
                  "ruleSetType",
                  "ruleSetVersion"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a resources.azure.com/ResourceGroup resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "policySettings": {
          "description": "PolicySettings: Describes settings for the policy.",
          "properties": {
            "customBlockResponseBody": {
              "description": "CustomBlockResponseBody: If the action type is block, customer can override the response body. The body must be\nspecified in base64 encoding.",
              "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{4})$",
              "type": "string"
            },
            "customBlockResponseStatusCode": {
              "description": "CustomBlockResponseStatusCode: If the action type is block, customer can override the response status code.",
              "type": "integer"
            },
            "enabledState": {
              "description": "EnabledState: Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            },
            "mode": {
              "description": "Mode: Describes if it is in detection mode or prevention mode at policy level.",
              "enum": [
                "Detection",
                "Prevention"
              ],
              "type": "string"
            },
            "redirectUrl": {
              "description": "RedirectUrl: If action type is redirect, this field represents redirect URL for the client.",
              "type": "string"
            },
            "requestBodyCheck": {
              "description": "RequestBodyCheck: Describes if policy managed rules will inspect the request body content.",
              "enum": [
                "Disabled",
                "Enabled"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "sku": {
          "description": "Sku: The pricing tier of web application firewall policy. Defaults to Classic_AzureFrontDoor if not specified.",
          "properties": {
            "name": {
              "description": "Name: Name of the pricing tier.",
              "enum": [
                "Classic_AzureFrontDoor",
                "Premium_AzureFrontDoor",
                "Standard_AzureFrontDoor"
              ],
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        }
      },
      "required": [
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "customRules": {
          "description": "CustomRules: Describes custom rules inside the policy.",
          "properties": {
            "rules": {
              "description": "Rules: List of rules",
              "items": {
                "description": "Defines contents of a web application rule",
                "properties": {
                  "action": {
                    "description": "Action: Describes what action to be applied when rule matches.",
                    "type": "string"
                  },
                  "enabledState": {
                    "description": "EnabledState: Describes if the custom rule is in enabled or disabled state. Defaults to Enabled if not specified.",
                    "type": "string"
                  },
                  "matchConditions": {
                    "description": "MatchConditions: List of match conditions.",
                    "items": {
                      "description": "Define a match condition.",
                      "properties": {
                        "matchValue": {
                          "description": "MatchValue: List of possible match values.",
                          "items": {
                            "type": "string"
                          },
                          "type": "array"
                        },
                        "matchVariable": {
                          "description": "MatchVariable: Request variable to compare with.",
                          "type": "string"
                        },
                        "negateCondition": {
                          "description": "NegateCondition: Describes if the result of this condition should be negated.",
                          "type": "boolean"
                        },
                        "operator": {
                          "description": "Operator: Comparison type to use for matching with the variable value.",
                          "type": "string"
                        },
                        "selector": {
                          "description": "Selector: Match against a specific key from the QueryString, PostArgs, RequestHeader or Cookies variables. Default is\nnull.",
                          "type": "string"
                        },
                        "transforms": {
                          "description": "Transforms: List of transforms.",
                          "items": {
                            "description": "Describes what transforms applied before matching.",
                            "type": "string"
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "name": {
                    "description": "Name: Describes the name of the rule.",
                    "type": "string"
                  },
                  "priority": {
                    "description": "Priority: Describes priority of the rule. Rules with a lower value will be evaluated before rules with a higher value.",
                    "type": "integer"
                  },
                  "rateLimitDurationInMinutes": {
                    "description": "RateLimitDurationInMinutes: Time window for resetting the rate limit count. Default is 1 minute.",
                    "type": "integer"
                  },
                  "rateLimitThreshold": {
                    "description": "RateLimitThreshold: Number of allowed requests per client within the time window.",
                    "type": "integer"
                  },
                  "ruleType": {
                    "description": "RuleType: Describes type of rule.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "etag": {
          "description": "Etag: Gets a unique read-only string that changes whenever the resource is updated.",
          "type": "string"
        },
        "frontendEndpointLinks": {
          "description": "FrontendEndpointLinks: Describes Frontend Endpoints associated with this Web Application Firewall policy.",
          "items": {
            "description": "Defines the Resource ID for a Frontend Endpoint.",
            "properties": {
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "id": {
          "description": "Id: Resource ID.",
          "type": "string"
        },
        "location": {
          "description": "Location: Resource location.",
          "type": "string"
        },
        "managedRules": {
          "description": "ManagedRules: Describes managed rules inside the policy.",
          "properties": {
            "managedRuleSets": {
              "description": "ManagedRuleSets: List of rule sets.",
              "items": {
                "description": "Defines a managed rule set.",
                "properties": {
                  "exclusions": {
                    "description": "Exclusions: Describes the exclusions that are applied to all rules in the set.",
                    "items": {
                      "description": "Exclude variables from managed rule evaluation.",
                      "properties": {
                        "matchVariable": {
                          "description": "MatchVariable: The variable type to be excluded.",
                          "type": "string"
                        },
                        "selector": {
                          "description": "Selector: Selector value for which elements in the collection this exclusion applies to.",
                          "type": "string"
                        },
                        "selectorMatchOperator": {
                          "description": "SelectorMatchOperator: Comparison operator to apply to the selector when specifying which elements in the collection\nthis exclusion applies to.",
                          "type": "string"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "ruleGroupOverrides": {
                    "description": "RuleGroupOverrides: Defines the rule group overrides to apply to the rule set.",
                    "items": {
                      "description": "Defines a managed rule group override setting.",
                      "properties": {
                        "exclusions": {
                          "description": "Exclusions: Describes the exclusions that are applied to all rules in the group.",
                          "items": {
                            "description": "Exclude variables from managed rule evaluation.",
                            "properties": {
                              "matchVariable": {
                                "description": "MatchVariable: The variable type to be excluded.",
                                "type": "string"
                              },
                              "selector": {
                                "description": "Selector: Selector value for which elements in the collection this exclusion applies to.",
                                "type": "string"
                              },
                              "selectorMatchOperator": {
                                "description": "SelectorMatchOperator: Comparison operator to apply to the selector when specifying which elements in the collection\nthis exclusion applies to.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        },
                        "ruleGroupName": {
                          "description": "RuleGroupName: Describes the managed rule group to override.",
                          "type": "string"
                        },
                        "rules": {
                          "description": "Rules: List of rules that will be disabled. If none specified, all rules in the group will be disabled.",
                          "items": {
                            "description": "Defines a managed rule group override setting.",
                            "properties": {
                              "action": {
                                "description": "Action: Describes the override action to be applied when rule matches.",
                                "type": "string"
                              },
                              "enabledState": {
                                "description": "EnabledState: Describes if the managed rule is in enabled or disabled state. Defaults to Disabled if not specified.",
                                "type": "string"
                              },
                              "exclusions": {
                                "description": "Exclusions: Describes the exclusions that are applied to this specific rule.",
                                "items": {
                                  "description": "Exclude variables from managed rule evaluation.",
                                  "properties": {
                                    "matchVariable": {
                                      "description": "MatchVariable: The variable type to be excluded.",
                                      "type": "string"
                                    },
                                    "selector": {
                                      "description": "Selector: Selector value for which elements in the collection this exclusion applies to.",
                                      "type": "string"
                                    },
                                    "selectorMatchOperator": {
                                      "description": "SelectorMatchOperator: Comparison operator to apply to the selector when specifying which elements in the collection\nthis exclusion applies to.",
                                      "type": "string"
                                    }
                                  },
                                  "type": "object",
                                  "additionalProperties": false
                                },
                                "type": "array"
                              },
                              "ruleId": {
                                "description": "RuleId: Identifier for the managed rule.",
                                "type": "string"
                              }
                            },
                            "type": "object",
                            "additionalProperties": false
                          },
                          "type": "array"
                        }
                      },
                      "type": "object",
                      "additionalProperties": false
                    },
                    "type": "array"
                  },
                  "ruleSetAction": {
                    "description": "RuleSetAction: Defines the rule set action.",
                    "type": "string"
                  },
                  "ruleSetType": {
                    "description": "RuleSetType: Defines the rule set type to use.",
                    "type": "string"
                  },
                  "ruleSetVersion": {
                    "description": "RuleSetVersion: Defines the version of the rule set to use.",
                    "type": "string"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "name": {
          "description": "Name: Resource name.",
          "type": "string"
        },
        "policySettings": {
          "description": "PolicySettings: Describes settings for the policy.",
          "properties": {
            "customBlockResponseBody": {
              "description": "CustomBlockResponseBody: If the action type is block, customer can override the response body. The body must be\nspecified in base64 encoding.",
              "type": "string"
            },
            "customBlockResponseStatusCode": {
              "description": "CustomBlockResponseStatusCode: If the action type is block, customer can override the response status code.",
              "type": "integer"
            },
            "enabledState": {
              "description": "EnabledState: Describes if the policy is in enabled or disabled state. Defaults to Enabled if not specified.",
              "type": "string"
            },
            "mode": {
              "description": "Mode: Describes if it is in detection mode or prevention mode at policy level.",
              "type": "string"
            },
            "redirectUrl": {
              "description": "RedirectUrl: If action type is redirect, this field represents redirect URL for the client.",
              "type": "string"
            },
            "requestBodyCheck": {
              "description": "RequestBodyCheck: Describes if policy managed rules will inspect the request body content.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "provisioningState": {
          "description": "ProvisioningState: Provisioning state of the policy.",
          "type": "string"
        },
        "resourceState": {
          "type": "string"
        },
        "routingRuleLinks": {
          "description": "RoutingRuleLinks: Describes Routing Rules associated with this Web Application Firewall policy.",
          "items": {
            "description": "Defines the Resource ID for a Routing Rule.",
            "properties": {
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "securityPolicyLinks": {
          "description": "SecurityPolicyLinks: Describes Security Policy associated with this Web Application Firewall policy.",
          "items": {
            "description": "Defines the Resource ID for a Security Policy.",
            "properties": {
              "id": {
                "description": "Id: Resource ID.",
                "type": "string"
              }
            },
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "sku": {
          "description": "Sku: The pricing tier of web application firewall policy. Defaults to Classic_AzureFrontDoor if not specified.",
          "properties": {
            "name": {
              "description": "Name: Name of the pricing tier.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "tags": {
          "additionalProperties": {
            "type": "string"
          },
          "description": "Tags: Resource tags.",
          "type": "object"
        },
        "type": {
          "description": "Type: Resource type.",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
