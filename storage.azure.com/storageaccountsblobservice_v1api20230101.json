{
  "description": "Generator information:\n- Generated from: /storage/resource-manager/Microsoft.Storage/stable/2023-01-01/blob.json\n- ARM URI: /subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.Storage/storageAccounts/{accountName}/blobServices/default",
  "properties": {
    "apiVersion": {
      "description": "APIVersion defines the versioned schema of this representation of an object.\nServers should convert recognized schemas to the latest internal value, and\nmay reject unrecognized values.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources",
      "type": "string"
    },
    "kind": {
      "description": "Kind is a string value representing the REST resource this object represents.\nServers may infer this from the endpoint the client submits requests to.\nCannot be updated.\nIn CamelCase.\nMore info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds",
      "type": "string"
    },
    "metadata": {
      "type": "object"
    },
    "spec": {
      "properties": {
        "automaticSnapshotPolicyEnabled": {
          "description": "AutomaticSnapshotPolicyEnabled: Deprecated in favor of isVersioningEnabled property.",
          "type": "boolean"
        },
        "changeFeed": {
          "description": "ChangeFeed: The blob service properties for change feed events.",
          "properties": {
            "enabled": {
              "description": "Enabled: Indicates whether change feed event logging is enabled for the Blob service.",
              "type": "boolean"
            },
            "retentionInDays": {
              "description": "RetentionInDays: Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is\n146000 days (400 years). A null value indicates an infinite retention of the change feed.",
              "maximum": 146000,
              "minimum": 1,
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "containerDeleteRetentionPolicy": {
          "description": "ContainerDeleteRetentionPolicy: The blob service properties for container soft delete.",
          "properties": {
            "allowPermanentDelete": {
              "description": "AllowPermanentDelete: This property when set to true allows deletion of the soft deleted blob versions and snapshots.\nThis property cannot be used blob restore policy. This property only applies to blob service and does not apply to\ncontainers or file share.",
              "type": "boolean"
            },
            "days": {
              "description": "Days: Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and\nthe maximum value can be 365.",
              "maximum": 365,
              "minimum": 1,
              "type": "integer"
            },
            "enabled": {
              "description": "Enabled: Indicates whether DeleteRetentionPolicy is enabled.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "cors": {
          "description": "Cors: Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no\nCorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the\nBlob service.",
          "properties": {
            "corsRules": {
              "description": "CorsRules: The List of CORS rules. You can include up to five CorsRule elements in the request.",
              "items": {
                "description": "Specifies a CORS rule for the Blob service.",
                "properties": {
                  "allowedHeaders": {
                    "description": "AllowedHeaders: Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin\nrequest.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "allowedMethods": {
                    "description": "AllowedMethods: Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the\norigin.",
                    "items": {
                      "enum": [
                        "CONNECT",
                        "DELETE",
                        "GET",
                        "HEAD",
                        "MERGE",
                        "OPTIONS",
                        "PATCH",
                        "POST",
                        "PUT",
                        "TRACE"
                      ],
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "allowedOrigins": {
                    "description": "AllowedOrigins: Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\"\nto allow all domains",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "exposedHeaders": {
                    "description": "ExposedHeaders: Required if CorsRule element is present. A list of response headers to expose to CORS clients.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "maxAgeInSeconds": {
                    "description": "MaxAgeInSeconds: Required if CorsRule element is present. The number of seconds that the client/browser should cache a\npreflight response.",
                    "type": "integer"
                  }
                },
                "required": [
                  "allowedHeaders",
                  "allowedMethods",
                  "allowedOrigins",
                  "exposedHeaders",
                  "maxAgeInSeconds"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "defaultServiceVersion": {
          "description": "DefaultServiceVersion: DefaultServiceVersion indicates the default version to use for requests to the Blob service if an\nincoming request\u2019s version is not specified. Possible values include version 2008-10-27 and all more recent versions.",
          "type": "string"
        },
        "deleteRetentionPolicy": {
          "description": "DeleteRetentionPolicy: The blob service properties for blob soft delete.",
          "properties": {
            "allowPermanentDelete": {
              "description": "AllowPermanentDelete: This property when set to true allows deletion of the soft deleted blob versions and snapshots.\nThis property cannot be used blob restore policy. This property only applies to blob service and does not apply to\ncontainers or file share.",
              "type": "boolean"
            },
            "days": {
              "description": "Days: Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and\nthe maximum value can be 365.",
              "maximum": 365,
              "minimum": 1,
              "type": "integer"
            },
            "enabled": {
              "description": "Enabled: Indicates whether DeleteRetentionPolicy is enabled.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "isVersioningEnabled": {
          "description": "IsVersioningEnabled: Versioning is enabled if set to true.",
          "type": "boolean"
        },
        "lastAccessTimeTrackingPolicy": {
          "description": "LastAccessTimeTrackingPolicy: The blob service property to configure last access time based tracking policy.",
          "properties": {
            "blobType": {
              "description": "BlobType: An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently\nread only",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "enable": {
              "description": "Enable: When set to true last access time based tracking is enabled.",
              "type": "boolean"
            },
            "name": {
              "description": "Name: Name of the policy. The valid value is AccessTimeTracking. This field is currently read only",
              "enum": [
                "AccessTimeTracking"
              ],
              "type": "string"
            },
            "trackingGranularityInDays": {
              "description": "TrackingGranularityInDays: The field specifies blob object tracking granularity in days, typically how often the blob\nobject should be tracked.This field is currently read only with value as 1",
              "type": "integer"
            }
          },
          "required": [
            "enable"
          ],
          "type": "object",
          "additionalProperties": false
        },
        "operatorSpec": {
          "description": "OperatorSpec: The specification for configuring operator behavior. This field is interpreted by the operator and not\npassed directly to Azure",
          "properties": {
            "configMapExpressions": {
              "description": "ConfigMapExpressions: configures where to place operator written dynamic ConfigMaps (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            },
            "secretExpressions": {
              "description": "SecretExpressions: configures where to place operator written dynamic secrets (created with CEL expressions).",
              "items": {
                "description": "DestinationExpression is a CEL expression and a destination to store the result in. The destination may\nbe a secret or a configmap. The value of the expression is stored at the specified location in\nthe destination.",
                "properties": {
                  "key": {
                    "description": "Key is the key in the ConfigMap or Secret being written to. If the CEL expression in Value returns a string\nthis is required to identify what key to write to. If the CEL expression in Value returns a map[string]string\nKey must not be set, instead the keys written will be determined dynamically based on the keys of the resulting\nmap[string]string.",
                    "type": "string"
                  },
                  "name": {
                    "description": "Name is the name of the Kubernetes configmap or secret to write to.\nThe configmap or secret will be created in the same namespace as the resource.",
                    "type": "string"
                  },
                  "value": {
                    "description": "Value is a CEL expression. The CEL expression may return a string or a map[string]string. For more information\non CEL in ASO see https://azure.github.io/azure-service-operator/guide/expressions/",
                    "type": "string"
                  }
                },
                "required": [
                  "name",
                  "value"
                ],
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "owner": {
          "description": "Owner: The owner of the resource. The owner controls where the resource goes when it is deployed. The owner also\ncontrols the resources lifecycle. When the owner is deleted the resource will also be deleted. Owner is expected to be a\nreference to a storage.azure.com/StorageAccount resource",
          "properties": {
            "armId": {
              "pattern": "(?i)(^(/subscriptions/([^/]+)(/resourcegroups/([^/]+))?)?/providers/([^/]+)/([^/]+/[^/]+)(/([^/]+/[^/]+))*$|^/subscriptions/([^/]+)(/resourcegroups/([^/]+))?$)",
              "type": "string"
            },
            "name": {
              "description": "This is the name of the Kubernetes resource to reference.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "restorePolicy": {
          "description": "RestorePolicy: The blob service properties for blob restore policy.",
          "properties": {
            "days": {
              "description": "Days: how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.",
              "maximum": 365,
              "minimum": 1,
              "type": "integer"
            },
            "enabled": {
              "description": "Enabled: Blob restore is enabled if set to true.",
              "type": "boolean"
            }
          },
          "required": [
            "enabled"
          ],
          "type": "object",
          "additionalProperties": false
        }
      },
      "required": [
        "owner"
      ],
      "type": "object",
      "additionalProperties": false
    },
    "status": {
      "properties": {
        "automaticSnapshotPolicyEnabled": {
          "description": "AutomaticSnapshotPolicyEnabled: Deprecated in favor of isVersioningEnabled property.",
          "type": "boolean"
        },
        "changeFeed": {
          "description": "ChangeFeed: The blob service properties for change feed events.",
          "properties": {
            "enabled": {
              "description": "Enabled: Indicates whether change feed event logging is enabled for the Blob service.",
              "type": "boolean"
            },
            "retentionInDays": {
              "description": "RetentionInDays: Indicates the duration of changeFeed retention in days. Minimum value is 1 day and maximum value is\n146000 days (400 years). A null value indicates an infinite retention of the change feed.",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "conditions": {
          "description": "Conditions: The observed state of the resource",
          "items": {
            "description": "Condition defines an extension to status (an observation) of a resource",
            "properties": {
              "lastTransitionTime": {
                "description": "LastTransitionTime is the last time the condition transitioned from one status to another.",
                "format": "date-time",
                "type": "string"
              },
              "message": {
                "description": "Message is a human readable message indicating details about the transition. This field may be empty.",
                "type": "string"
              },
              "observedGeneration": {
                "description": "ObservedGeneration is the .metadata.generation that the condition was set based upon. For instance, if\n.metadata.generation is currently 12, but the .status.condition[x].observedGeneration is 9, the condition is out of date\nwith respect to the current state of the instance.",
                "format": "int64",
                "type": "integer"
              },
              "reason": {
                "description": "Reason for the condition's last transition.\nReasons are upper CamelCase (PascalCase) with no spaces. A reason is always provided, this field will not be empty.",
                "type": "string"
              },
              "severity": {
                "description": "Severity with which to treat failures of this type of condition.\nFor conditions which have positive polarity (Status == True is their normal/healthy state), this will be omitted when Status == True\nFor conditions which have negative polarity (Status == False is their normal/healthy state), this will be omitted when Status == False.\nThis is omitted in all cases when Status == Unknown",
                "type": "string"
              },
              "status": {
                "description": "Status of the condition, one of True, False, or Unknown.",
                "type": "string"
              },
              "type": {
                "description": "Type of condition.",
                "type": "string"
              }
            },
            "required": [
              "lastTransitionTime",
              "reason",
              "status",
              "type"
            ],
            "type": "object",
            "additionalProperties": false
          },
          "type": "array"
        },
        "containerDeleteRetentionPolicy": {
          "description": "ContainerDeleteRetentionPolicy: The blob service properties for container soft delete.",
          "properties": {
            "allowPermanentDelete": {
              "description": "AllowPermanentDelete: This property when set to true allows deletion of the soft deleted blob versions and snapshots.\nThis property cannot be used blob restore policy. This property only applies to blob service and does not apply to\ncontainers or file share.",
              "type": "boolean"
            },
            "days": {
              "description": "Days: Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and\nthe maximum value can be 365.",
              "type": "integer"
            },
            "enabled": {
              "description": "Enabled: Indicates whether DeleteRetentionPolicy is enabled.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "cors": {
          "description": "Cors: Specifies CORS rules for the Blob service. You can include up to five CorsRule elements in the request. If no\nCorsRule elements are included in the request body, all CORS rules will be deleted, and CORS will be disabled for the\nBlob service.",
          "properties": {
            "corsRules": {
              "description": "CorsRules: The List of CORS rules. You can include up to five CorsRule elements in the request.",
              "items": {
                "description": "Specifies a CORS rule for the Blob service.",
                "properties": {
                  "allowedHeaders": {
                    "description": "AllowedHeaders: Required if CorsRule element is present. A list of headers allowed to be part of the cross-origin\nrequest.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "allowedMethods": {
                    "description": "AllowedMethods: Required if CorsRule element is present. A list of HTTP methods that are allowed to be executed by the\norigin.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "allowedOrigins": {
                    "description": "AllowedOrigins: Required if CorsRule element is present. A list of origin domains that will be allowed via CORS, or \"*\"\nto allow all domains",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "exposedHeaders": {
                    "description": "ExposedHeaders: Required if CorsRule element is present. A list of response headers to expose to CORS clients.",
                    "items": {
                      "type": "string"
                    },
                    "type": "array"
                  },
                  "maxAgeInSeconds": {
                    "description": "MaxAgeInSeconds: Required if CorsRule element is present. The number of seconds that the client/browser should cache a\npreflight response.",
                    "type": "integer"
                  }
                },
                "type": "object",
                "additionalProperties": false
              },
              "type": "array"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "defaultServiceVersion": {
          "description": "DefaultServiceVersion: DefaultServiceVersion indicates the default version to use for requests to the Blob service if an\nincoming request\u2019s version is not specified. Possible values include version 2008-10-27 and all more recent versions.",
          "type": "string"
        },
        "deleteRetentionPolicy": {
          "description": "DeleteRetentionPolicy: The blob service properties for blob soft delete.",
          "properties": {
            "allowPermanentDelete": {
              "description": "AllowPermanentDelete: This property when set to true allows deletion of the soft deleted blob versions and snapshots.\nThis property cannot be used blob restore policy. This property only applies to blob service and does not apply to\ncontainers or file share.",
              "type": "boolean"
            },
            "days": {
              "description": "Days: Indicates the number of days that the deleted item should be retained. The minimum specified value can be 1 and\nthe maximum value can be 365.",
              "type": "integer"
            },
            "enabled": {
              "description": "Enabled: Indicates whether DeleteRetentionPolicy is enabled.",
              "type": "boolean"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "id": {
          "description": "Id: Fully qualified resource ID for the resource. Ex -\n/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/{resourceProviderNamespace}/{resourceType}/{resourceName}",
          "type": "string"
        },
        "isVersioningEnabled": {
          "description": "IsVersioningEnabled: Versioning is enabled if set to true.",
          "type": "boolean"
        },
        "lastAccessTimeTrackingPolicy": {
          "description": "LastAccessTimeTrackingPolicy: The blob service property to configure last access time based tracking policy.",
          "properties": {
            "blobType": {
              "description": "BlobType: An array of predefined supported blob types. Only blockBlob is the supported value. This field is currently\nread only",
              "items": {
                "type": "string"
              },
              "type": "array"
            },
            "enable": {
              "description": "Enable: When set to true last access time based tracking is enabled.",
              "type": "boolean"
            },
            "name": {
              "description": "Name: Name of the policy. The valid value is AccessTimeTracking. This field is currently read only",
              "type": "string"
            },
            "trackingGranularityInDays": {
              "description": "TrackingGranularityInDays: The field specifies blob object tracking granularity in days, typically how often the blob\nobject should be tracked.This field is currently read only with value as 1",
              "type": "integer"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "name": {
          "description": "Name: The name of the resource",
          "type": "string"
        },
        "restorePolicy": {
          "description": "RestorePolicy: The blob service properties for blob restore policy.",
          "properties": {
            "days": {
              "description": "Days: how long this blob can be restored. It should be great than zero and less than DeleteRetentionPolicy.days.",
              "type": "integer"
            },
            "enabled": {
              "description": "Enabled: Blob restore is enabled if set to true.",
              "type": "boolean"
            },
            "lastEnabledTime": {
              "description": "LastEnabledTime: Deprecated in favor of minRestoreTime property.",
              "type": "string"
            },
            "minRestoreTime": {
              "description": "MinRestoreTime: Returns the minimum date and time that the restore can be started.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "sku": {
          "description": "Sku: Sku name and tier.",
          "properties": {
            "name": {
              "description": "Name: The SKU name. Required for account creation; optional for update. Note that in older versions, SKU name was called\n accountType.",
              "type": "string"
            },
            "tier": {
              "description": "Tier: The SKU tier. This is based on the SKU name.",
              "type": "string"
            }
          },
          "type": "object",
          "additionalProperties": false
        },
        "type": {
          "description": "Type: The type of the resource. E.g. \"Microsoft.Compute/virtualMachines\" or \"Microsoft.Storage/storageAccounts\"",
          "type": "string"
        }
      },
      "type": "object",
      "additionalProperties": false
    }
  },
  "type": "object"
}
